name: Frontend Checks

on:
  workflow_call:
  pull_request:
    paths:
      - frontend/**
      - .github/workflows/ci-frontend.yml

defaults:
  run:
    working-directory: ./frontend

env:
  NODE_VERSION: 22
  LOCKFILE_PATH: ./frontend/package-lock.json # or yarn.lock
  PACKAGE_MANAGER: npm # or yarn

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  get-commit-hash:
    name: Get commit hash
    runs-on: ubuntu-22.04
    outputs:
      commit_hash: ${{ steps.get-commit-hash.outputs.commit_hash }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 1000
      - name: Get commit hash
        id: get-commit-hash
        run: |
          APP_COMMIT_HASH=$(git log --pretty=format:'%H' -n 1 ${{github.ref}} frontend)
          COMMIT_HASH=$(git rev-parse ${{ github.ref }})
          echo "Commit hash: $COMMIT_HASH, App: $APP_COMMIT_HASH"
          echo "commit_hash=$APP_COMMIT_HASH" >> "$GITHUB_OUTPUT"

  tests:
    name: FE Lint, Type Check, Format & Tests
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache-dependency-path: ${{ env.LOCKFILE_PATH }}
          cache: ${{ env.PACKAGE_MANAGER }}

      - id: restore-cache
        name: Restore cached node_modules
        uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}/frontend/node_modules
          key: frontend-node_modules-${{ hashFiles('frontend/package*.json') }}

      - name: Run npm ci
        if: steps.restore-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Run lint
        run: npm run lint

      - name: Run type check
        run: npm run ts:check

      - name: Run format
        run: npm run format-check

      - run: npm run test -- --testLocationInResults --json --outputFile=coverage/report.json
      - uses: ArtiomTr/jest-coverage-report-action@v2
        with:
          coverage-file: coverage/report.json
          test-script: npm test
          working-directory: ./frontend
          annotations: ${{ github.event.pull_request.head.repo.full_name == github.event.repository.name && 'failed-tests' || 'none' }}
          package-manager: npm
          icons: emoji
          skip-step: none
          output: ${{ github.event.pull_request.head.repo.full_name == github.event.repository.name && 'comment' || 'report-markdown' }}

  # Build the FE
  frontend-build:
    name: FE Build
    needs: [get-commit-hash]
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache-dependency-path: ${{ env.LOCKFILE_PATH }}
          cache: ${{ env.PACKAGE_MANAGER }}

      # https://nextjs.org/docs/advanced-features/ci-build-caching
      - uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/frontend/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - id: restore-cache
        name: Restore cached node_modules
        uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}/frontend/node_modules
          key: frontend-node_modules-${{ hashFiles('frontend/package*.json') }}

      - name: Run npm ci
        if: steps.restore-cache.outputs.cache-hit != 'true'
        run: npm ci

      - id: check-build-cache
        name: Check if cached build
        uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}/frontend/.next/standalone
          key: frontend-build-${{ needs.get-commit-hash.outputs.commit_hash }}
          lookup-only: true

      - name: Run build
        if: steps.check-build-cache.outputs.cache-hit != 'true'
        run: npm run build -- --no-lint

      - name: Cache build
        if: steps.check-build-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: |
            ${{ github.workspace }}/frontend/.next/standalone
            ${{ github.workspace }}/frontend/.next/static
          key: frontend-build-${{ needs.get-commit-hash.outputs.commit_hash }}

  # Confirms Storybook still builds successfully
  check-storybook-builds:
    name: FE Storybook Build Check
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache-dependency-path: ${{ env.LOCKFILE_PATH }}
          cache: ${{ env.PACKAGE_MANAGER }}
      - id: restore-cache
        name: Restore cached node_modules
        uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}/frontend/node_modules
          key: frontend-node_modules-${{ hashFiles('frontend/package*.json') }}

      - name: Run npm ci
        if: steps.restore-cache.outputs.cache-hit != 'true'
        run: npm ci

      - run: npm run storybook-build
