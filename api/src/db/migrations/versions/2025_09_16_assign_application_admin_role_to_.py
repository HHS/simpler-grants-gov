"""Assign application owner role to existing application owners

Revision ID: bfd8ad9cf5d6
Revises: 61578095938e
Create Date: 2025-09-16 16:51:37.082923

"""

from alembic import op

from src.constants.static_role_values import APPLICATION_OWNER_ID

# revision identifiers, used by Alembic.
revision = "bfd8ad9cf5d6"
down_revision = "61578095938e"
branch_labels = None
depends_on = None

application_owner_role_id = str(APPLICATION_OWNER_ID)


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Insert Application Owner role assignments for all existing application owners
    # who don't already have the role
    op.execute(
        f"""
        INSERT INTO api.application_user_role (application_user_id, role_id, created_at, updated_at)
        SELECT
            au.application_user_id,
            '{application_owner_role_id}'::uuid,
            NOW(),
            NOW()
        FROM api.application_user au
        WHERE au.is_application_owner = true
        AND NOT EXISTS (
            SELECT 1
            FROM api.application_user_role aur
            WHERE aur.application_user_id = au.application_user_id
            AND aur.role_id = '{application_owner_role_id}'::uuid
        );
    """
    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Remove Application Owner role assignments that were added by this migration
    op.execute(
        f"""
        DELETE FROM api.application_user_role
        WHERE role_id = '{application_owner_role_id}'::uuid
        AND application_user_id IN (
            SELECT application_user_id
            FROM api.application_user
            WHERE is_application_owner = true
        );
    """
    )

    # ### end Alembic commands ###
