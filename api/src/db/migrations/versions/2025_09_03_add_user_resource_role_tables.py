"""add_user_resource_role_tables

Revision ID: 5849eab87c22
Revises: 92d99b3c3e68
Create Date: 2025-09-03 20:43:12.629429

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "5849eab87c22"
down_revision = "92d99b3c3e68"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "internal_user_role",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("role_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["role_id"], ["api.role.role_id"], name=op.f("internal_user_role_role_id_role_fkey")
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["api.user.user_id"], name=op.f("internal_user_role_user_id_user_fkey")
        ),
        sa.PrimaryKeyConstraint("user_id", "role_id", name=op.f("internal_user_role_pkey")),
        schema="api",
    )
    op.create_table(
        "agency_user",
        sa.Column("agency_user_id", sa.UUID(), nullable=False),
        sa.Column("agency_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["agency_id"], ["api.agency.agency_id"], name=op.f("agency_user_agency_id_agency_fkey")
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["api.user.user_id"], name=op.f("agency_user_user_id_user_fkey")
        ),
        sa.PrimaryKeyConstraint("agency_user_id", name=op.f("agency_user_pkey")),
        schema="api",
    )
    op.create_index(
        op.f("agency_user_agency_id_idx"), "agency_user", ["agency_id"], unique=False, schema="api"
    )
    op.create_index(
        op.f("agency_user_user_id_idx"), "agency_user", ["user_id"], unique=False, schema="api"
    )
    op.create_table(
        "agency_user_role",
        sa.Column("agency_user_id", sa.UUID(), nullable=False),
        sa.Column("role_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["agency_user_id"],
            ["api.agency_user.agency_user_id"],
            name=op.f("agency_user_role_agency_user_id_agency_user_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["role_id"], ["api.role.role_id"], name=op.f("agency_user_role_role_id_role_fkey")
        ),
        sa.PrimaryKeyConstraint("agency_user_id", "role_id", name=op.f("agency_user_role_pkey")),
        schema="api",
    )
    op.create_table(
        "organization_user_role",
        sa.Column("organization_user_id", sa.UUID(), nullable=False),
        sa.Column("role_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["organization_user_id"],
            ["api.organization_user.organization_user_id"],
            name=op.f("organization_user_role_organization_user_id_organization_user_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["role_id"], ["api.role.role_id"], name=op.f("organization_user_role_role_id_role_fkey")
        ),
        sa.PrimaryKeyConstraint(
            "organization_user_id", "role_id", name=op.f("organization_user_role_pkey")
        ),
        schema="api",
    )
    op.create_table(
        "application_user_role",
        sa.Column("application_user_id", sa.UUID(), nullable=False),
        sa.Column("role_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["application_user_id"],
            ["api.application_user.application_user_id"],
            name=op.f("application_user_role_application_user_id_application_user_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["role_id"], ["api.role.role_id"], name=op.f("application_user_role_role_id_role_fkey")
        ),
        sa.PrimaryKeyConstraint(
            "application_user_id", "role_id", name=op.f("application_user_role_pkey")
        ),
        schema="api",
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("application_user_role", schema="api")
    op.drop_table("organization_user_role", schema="api")
    op.drop_table("agency_user_role", schema="api")
    op.drop_index(op.f("agency_user_user_id_idx"), table_name="agency_user", schema="api")
    op.drop_index(op.f("agency_user_agency_id_idx"), table_name="agency_user", schema="api")
    op.drop_table("agency_user", schema="api")
    op.drop_table("internal_user_role", schema="api")
    # ### end Alembic commands ###
