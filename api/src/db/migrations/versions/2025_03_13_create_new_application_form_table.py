"""Create new application form table

Revision ID: 919f7866b393
Revises: 3793197bdd1b
Create Date: 2025-03-13 15:58:20.688143

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "919f7866b393"
down_revision = "3793197bdd1b"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "form",
        sa.Column("form_id", sa.UUID(), nullable=False),
        sa.Column("form_name", sa.Text(), nullable=False),
        sa.Column("form_version", sa.Text(), nullable=False),
        sa.Column("agency_code", sa.Text(), nullable=False),
        sa.Column("omb_number", sa.Text(), nullable=True),
        sa.Column("active_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("inactive_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("form_json_schema", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("form_ui_schema", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("form_id", name=op.f("form_pkey")),
        schema="api",
    )
    op.create_table(
        "application",
        sa.Column("application_id", sa.UUID(), nullable=False),
        sa.Column("competition_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["api.competition.competition_id"],
            name=op.f("application_competition_id_competition_fkey"),
        ),
        sa.PrimaryKeyConstraint("application_id", name=op.f("application_pkey")),
        schema="api",
    )
    op.create_index(
        op.f("application_competition_id_idx"),
        "application",
        ["competition_id"],
        unique=False,
        schema="api",
    )
    op.create_table(
        "application_form",
        sa.Column("application_form_id", sa.UUID(), nullable=False),
        sa.Column("application_id", sa.UUID(), nullable=False),
        sa.Column("form_id", sa.UUID(), nullable=False),
        sa.Column("application_response", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["application_id"],
            ["api.application.application_id"],
            name=op.f("application_form_application_id_application_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["form_id"], ["api.form.form_id"], name=op.f("application_form_form_id_form_fkey")
        ),
        sa.PrimaryKeyConstraint("application_form_id", name=op.f("application_form_pkey")),
        schema="api",
    )
    op.create_foreign_key(
        op.f("competition_form_form_id_form_fkey"),
        "competition_form",
        "form",
        ["form_id"],
        ["form_id"],
        source_schema="api",
        referent_schema="api",
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        op.f("competition_form_form_id_form_fkey"),
        "competition_form",
        schema="api",
        type_="foreignkey",
    )
    op.drop_table("application_form", schema="api")
    op.drop_index(op.f("application_competition_id_idx"), table_name="application", schema="api")
    op.drop_table("application", schema="api")
    op.drop_table("form", schema="api")
    # ### end Alembic commands ###
