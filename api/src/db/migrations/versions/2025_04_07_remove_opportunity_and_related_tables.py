"""Remove Opportunity and Related Tables

Revision ID: ced7b793bb3e
Revises: 20f73906ed2a
Create Date: 2025-04-07 18:41:17.401794

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "ced7b793bb3e"
down_revision = "20f73906ed2a"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        "current_opportunity_summary_opportunity_id_idx",
        table_name="current_opportunity_summary",
        schema="api",
    )
    op.drop_index(
        "current_opportunity_summary_opportunity_status_id_idx",
        table_name="current_opportunity_summary",
        schema="api",
    )
    op.drop_index(
        "current_opportunity_summary_opportunity_summary_id_idx",
        table_name="current_opportunity_summary",
        schema="api",
    )
    op.drop_table("current_opportunity_summary", schema="api")
    op.drop_index(
        "link_opportunity_summary_applicant_type_applicant_type_id_idx",
        table_name="link_opportunity_summary_applicant_type",
        schema="api",
    )
    op.drop_index(
        "link_opportunity_summary_applicant_type_opportunity_sum_fee2",
        table_name="link_opportunity_summary_applicant_type",
        schema="api",
    )
    op.drop_table("link_opportunity_summary_applicant_type", schema="api")
    op.drop_table("application_form", schema="api")
    op.drop_table("competition_form", schema="api")
    op.drop_table("form", schema="api")
    op.drop_index("application_competition_id_idx", table_name="application", schema="api")
    op.drop_table("application", schema="api")
    op.drop_index(
        "user_opportunity_notification_log_opportunity_id_idx",
        table_name="user_opportunity_notification_log",
        schema="api",
    )
    op.drop_index(
        "user_opportunity_notification_log_user_id_idx",
        table_name="user_opportunity_notification_log",
        schema="api",
    )
    op.drop_table("user_opportunity_notification_log", schema="api")

    op.drop_index(
        "link_opportunity_summary_funding_instrument_funding_ins_94c9",
        table_name="link_opportunity_summary_funding_instrument",
        schema="api",
    )
    op.drop_index(
        "link_opportunity_summary_funding_instrument_opportunity_4597",
        table_name="link_opportunity_summary_funding_instrument",
        schema="api",
    )
    op.drop_table("link_opportunity_summary_funding_instrument", schema="api")

    op.drop_table("competition_instruction", schema="api")

    op.drop_table("competition_assistance_listing", schema="api")
    op.drop_index(
        "opportunity_attachment_opportunity_id_idx",
        table_name="opportunity_attachment",
        schema="api",
    )
    op.drop_table("opportunity_attachment", schema="api")
    op.drop_table("opportunity_version", schema="api")
    op.drop_table("user_saved_opportunity", schema="api")
    op.drop_index("competition_legacy_competition_id_idx", table_name="competition", schema="api")
    op.drop_index("competition_opportunity_id_idx", table_name="competition", schema="api")
    op.drop_table("competition", schema="api")
    op.drop_index(
        "opportunity_assistance_listing_opportunity_id_idx",
        table_name="opportunity_assistance_listing",
        schema="api",
    )
    op.drop_table("opportunity_assistance_listing", schema="api")
    op.drop_index(
        "link_opportunity_summary_funding_category_funding_categ_17a0",
        table_name="link_opportunity_summary_funding_category",
        schema="api",
    )
    op.drop_index(
        "link_opportunity_summary_funding_category_opportunity_s_9f79",
        table_name="link_opportunity_summary_funding_category",
        schema="api",
    )
    op.drop_table("link_opportunity_summary_funding_category", schema="api")

    op.drop_index(
        "opportunity_summary_opportunity_id_idx", table_name="opportunity_summary", schema="api"
    )
    op.drop_table("opportunity_summary", schema="api")

    op.drop_index(
        "opportunity_change_audit_opportunity_id_idx",
        table_name="opportunity_change_audit",
        schema="api",
    )
    op.drop_table("opportunity_change_audit", schema="api")

    op.drop_index("opportunity_agency_code_idx", table_name="opportunity", schema="api")
    op.drop_index("opportunity_is_draft_idx", table_name="opportunity", schema="api")
    op.drop_index("opportunity_opportunity_category_id_idx", table_name="opportunity", schema="api")
    op.drop_index("opportunity_opportunity_title_idx", table_name="opportunity", schema="api")
    op.drop_table("opportunity", schema="api")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "opportunity_change_audit",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("is_loaded_to_search", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["api.opportunity.opportunity_id"],
            name="opportunity_change_audit_opportunity_id_opportunity_fkey",
        ),
        sa.PrimaryKeyConstraint("opportunity_id", name="opportunity_change_audit_pkey"),
        schema="api",
    )
    op.create_index(
        "opportunity_change_audit_opportunity_id_idx",
        "opportunity_change_audit",
        ["opportunity_id"],
        unique=False,
        schema="api",
    )
    op.create_table(
        "competition_form",
        sa.Column("competition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("form_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("is_required", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["api.competition.competition_id"],
            name="competition_form_competition_id_competition_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["form_id"], ["api.form.form_id"], name="competition_form_form_id_form_fkey"
        ),
        sa.PrimaryKeyConstraint("competition_id", "form_id", name="competition_form_pkey"),
        schema="api",
    )
    op.create_table(
        "link_opportunity_summary_funding_category",
        sa.Column("opportunity_summary_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("funding_category_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("legacy_funding_category_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["funding_category_id"],
            ["api.lk_funding_category.funding_category_id"],
            name="link_opportunity_summary_funding_category_funding_categ_dcd3",
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_summary_id"],
            ["api.opportunity_summary.opportunity_summary_id"],
            name="link_opportunity_summary_funding_category_opportunity_s_5610",
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_summary_id",
            "funding_category_id",
            name="link_opportunity_summary_funding_category_pkey",
        ),
        sa.UniqueConstraint(
            "opportunity_summary_id",
            "legacy_funding_category_id",
            name="link_opportunity_summary_funding_category_opportunity_s_731c",
        ),
        schema="api",
    )
    op.create_index(
        "link_opportunity_summary_funding_category_opportunity_s_9f79",
        "link_opportunity_summary_funding_category",
        ["opportunity_summary_id"],
        unique=False,
        schema="api",
    )
    op.create_index(
        "link_opportunity_summary_funding_category_funding_categ_17a0",
        "link_opportunity_summary_funding_category",
        ["funding_category_id"],
        unique=False,
        schema="api",
    )
    op.create_table(
        "opportunity_assistance_listing",
        sa.Column(
            "opportunity_assistance_listing_id",
            sa.BIGINT(),
            server_default=sa.text(
                "nextval('api.opportunity_assistance_listin_opportunity_assistance_listin_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("assistance_listing_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("program_title", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["api.opportunity.opportunity_id"],
            name="opportunity_assistance_listing_opportunity_id_opportunity_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_assistance_listing_id", name="opportunity_assistance_listing_pkey"
        ),
        schema="api",
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        "opportunity_assistance_listing_opportunity_id_idx",
        "opportunity_assistance_listing",
        ["opportunity_id"],
        unique=False,
        schema="api",
    )
    op.create_table(
        "competition",
        sa.Column("competition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("legacy_competition_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("public_competition_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("legacy_package_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("competition_title", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("opening_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("closing_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("grace_period", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("contact_info", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["api.opportunity.opportunity_id"],
            name="competition_opportunity_id_opportunity_fkey",
        ),
        sa.PrimaryKeyConstraint("competition_id", name="competition_pkey"),
        schema="api",
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        "competition_opportunity_id_idx",
        "competition",
        ["opportunity_id"],
        unique=False,
        schema="api",
    )
    op.create_index(
        "competition_legacy_competition_id_idx",
        "competition",
        ["legacy_competition_id"],
        unique=False,
        schema="api",
    )
    op.create_table(
        "user_saved_opportunity",
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "last_notified_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("'2025-03-26 19:20:45.732073+00'::timestamp with time zone"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["api.opportunity.opportunity_id"],
            name="user_saved_opportunity_opportunity_id_opportunity_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["api.user.user_id"], name="user_saved_opportunity_user_id_user_fkey"
        ),
        sa.PrimaryKeyConstraint("user_id", "opportunity_id", name="user_saved_opportunity_pkey"),
        schema="api",
    )
    op.create_table(
        "opportunity_version",
        sa.Column("opportunity_version_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "opportunity_data",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["api.opportunity.opportunity_id"],
            name="opportunity_version_opportunity_id_opportunity_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_version_id", "opportunity_id", name="opportunity_version_pkey"
        ),
        schema="api",
    )
    op.create_table(
        "opportunity_attachment",
        sa.Column("attachment_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("file_location", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("mime_type", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_size_bytes", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("legacy_folder_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["api.opportunity.opportunity_id"],
            name="opportunity_attachment_opportunity_id_opportunity_fkey",
        ),
        sa.PrimaryKeyConstraint("attachment_id", name="opportunity_attachment_pkey"),
        schema="api",
    )
    op.create_index(
        "opportunity_attachment_opportunity_id_idx",
        "opportunity_attachment",
        ["opportunity_id"],
        unique=False,
        schema="api",
    )
    op.create_table(
        "competition_assistance_listing",
        sa.Column("competition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "opportunity_assistance_listing_id", sa.BIGINT(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["api.competition.competition_id"],
            name="competition_assistance_listing_competition_id_competition_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_assistance_listing_id"],
            ["api.opportunity_assistance_listing.opportunity_assistance_listing_id"],
            name="competition_assistance_listing_opportunity_assistance_l_6b02",
        ),
        sa.PrimaryKeyConstraint(
            "competition_id",
            "opportunity_assistance_listing_id",
            name="competition_assistance_listing_pkey",
        ),
        schema="api",
    )
    op.create_table(
        "application_form",
        sa.Column("application_form_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("application_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("form_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "application_response",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["application_id"],
            ["api.application.application_id"],
            name="application_form_application_id_application_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["form_id"], ["api.form.form_id"], name="application_form_form_id_form_fkey"
        ),
        sa.PrimaryKeyConstraint("application_form_id", name="application_form_pkey"),
        schema="api",
    )
    op.create_table(
        "competition_instruction",
        sa.Column("competition_instruction_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("competition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("file_location", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["api.competition.competition_id"],
            name="competition_instruction_competition_id_competition_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "competition_instruction_id", "competition_id", name="competition_instruction_pkey"
        ),
        schema="api",
    )
    op.create_table(
        "opportunity",
        sa.Column(
            "opportunity_id",
            sa.BIGINT(),
            server_default=sa.text("nextval('api.opportunity_opportunity_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("opportunity_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("opportunity_title", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("opportunity_category_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("category_explanation", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_draft", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("modified_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_user_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_category_id"],
            ["api.lk_opportunity_category.opportunity_category_id"],
            name="opportunity_opportunity_category_id_lk_opportunity_cate_c6e9",
        ),
        sa.PrimaryKeyConstraint("opportunity_id", name="opportunity_pkey"),
        schema="api",
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        "opportunity_opportunity_title_idx",
        "opportunity",
        ["opportunity_title"],
        unique=False,
        schema="api",
    )
    op.create_index(
        "opportunity_opportunity_category_id_idx",
        "opportunity",
        ["opportunity_category_id"],
        unique=False,
        schema="api",
    )
    op.create_index(
        "opportunity_is_draft_idx", "opportunity", ["is_draft"], unique=False, schema="api"
    )
    op.create_index(
        "opportunity_agency_code_idx", "opportunity", ["agency_code"], unique=False, schema="api"
    )
    op.create_table(
        "link_opportunity_summary_funding_instrument",
        sa.Column("opportunity_summary_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("funding_instrument_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("legacy_funding_instrument_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["funding_instrument_id"],
            ["api.lk_funding_instrument.funding_instrument_id"],
            name="link_opportunity_summary_funding_instrument_funding_ins_be1e",
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_summary_id"],
            ["api.opportunity_summary.opportunity_summary_id"],
            name="link_opportunity_summary_funding_instrument_opportunity_010d",
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_summary_id",
            "funding_instrument_id",
            name="link_opportunity_summary_funding_instrument_pkey",
        ),
        sa.UniqueConstraint(
            "opportunity_summary_id",
            "legacy_funding_instrument_id",
            name="link_opportunity_summary_funding_instrument_opportunity_5b1c",
        ),
        schema="api",
    )
    op.create_index(
        "link_opportunity_summary_funding_instrument_opportunity_4597",
        "link_opportunity_summary_funding_instrument",
        ["opportunity_summary_id"],
        unique=False,
        schema="api",
    )
    op.create_index(
        "link_opportunity_summary_funding_instrument_funding_ins_94c9",
        "link_opportunity_summary_funding_instrument",
        ["funding_instrument_id"],
        unique=False,
        schema="api",
    )
    op.create_table(
        "opportunity_summary",
        sa.Column(
            "opportunity_summary_id",
            sa.BIGINT(),
            server_default=sa.text(
                "nextval('api.opportunity_summary_opportunity_summary_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("summary_description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_cost_sharing", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("is_forecast", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("post_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("close_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("close_date_description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("archive_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("unarchive_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("expected_number_of_awards", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "estimated_total_program_funding", sa.BIGINT(), autoincrement=False, nullable=True
        ),
        sa.Column("award_floor", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("additional_info_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("additional_info_url_description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("forecasted_post_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("forecasted_close_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column(
            "forecasted_close_date_description", sa.TEXT(), autoincrement=False, nullable=True
        ),
        sa.Column("forecasted_award_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("forecasted_project_start_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("fiscal_year", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("funding_category_description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "applicant_eligibility_description", sa.TEXT(), autoincrement=False, nullable=True
        ),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_phone_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_contact_description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_email_address", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "agency_email_address_description", sa.TEXT(), autoincrement=False, nullable=True
        ),
        sa.Column("can_send_mail", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("publisher_user_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("version_number", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["api.opportunity.opportunity_id"],
            name="opportunity_summary_opportunity_id_opportunity_fkey",
        ),
        sa.PrimaryKeyConstraint("opportunity_summary_id", name="opportunity_summary_pkey"),
        sa.UniqueConstraint(
            "is_forecast", "opportunity_id", name="opportunity_summary_is_forecast_uniq"
        ),
        schema="api",
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        "opportunity_summary_opportunity_id_idx",
        "opportunity_summary",
        ["opportunity_id"],
        unique=False,
        schema="api",
    )
    op.create_table(
        "user_opportunity_notification_log",
        sa.Column(
            "user_opportunity_notification_log_id", sa.UUID(), autoincrement=False, nullable=False
        ),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["api.opportunity.opportunity_id"],
            name="user_opportunity_notification_log_opportunity_id_opport_1f35",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["api.user.user_id"],
            name="user_opportunity_notification_log_user_id_user_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "user_opportunity_notification_log_id", name="user_opportunity_notification_log_pkey"
        ),
        schema="api",
    )
    op.create_index(
        "user_opportunity_notification_log_user_id_idx",
        "user_opportunity_notification_log",
        ["user_id"],
        unique=False,
        schema="api",
    )
    op.create_index(
        "user_opportunity_notification_log_opportunity_id_idx",
        "user_opportunity_notification_log",
        ["opportunity_id"],
        unique=False,
        schema="api",
    )
    op.create_table(
        "application",
        sa.Column("application_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("competition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["api.competition.competition_id"],
            name="application_competition_id_competition_fkey",
        ),
        sa.PrimaryKeyConstraint("application_id", name="application_pkey"),
        schema="api",
    )
    op.create_index(
        "application_competition_id_idx",
        "application",
        ["competition_id"],
        unique=False,
        schema="api",
    )
    op.create_table(
        "form",
        sa.Column("form_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("form_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("form_version", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("omb_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "active_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "inactive_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "form_json_schema",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "form_ui_schema",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("form_id", name="form_pkey"),
        schema="api",
    )
    op.create_table(
        "link_opportunity_summary_applicant_type",
        sa.Column("opportunity_summary_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("applicant_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("legacy_applicant_type_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["applicant_type_id"],
            ["api.lk_applicant_type.applicant_type_id"],
            name="link_opportunity_summary_applicant_type_applicant_type__c136",
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_summary_id"],
            ["api.opportunity_summary.opportunity_summary_id"],
            name="link_opportunity_summary_applicant_type_opportunity_sum_f95d",
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_summary_id",
            "applicant_type_id",
            name="link_opportunity_summary_applicant_type_pkey",
        ),
        sa.UniqueConstraint(
            "opportunity_summary_id",
            "legacy_applicant_type_id",
            name="link_opportunity_summary_applicant_type_opportunity_sum_a7cd",
        ),
        schema="api",
    )
    op.create_index(
        "link_opportunity_summary_applicant_type_opportunity_sum_fee2",
        "link_opportunity_summary_applicant_type",
        ["opportunity_summary_id"],
        unique=False,
        schema="api",
    )
    op.create_index(
        "link_opportunity_summary_applicant_type_applicant_type_id_idx",
        "link_opportunity_summary_applicant_type",
        ["applicant_type_id"],
        unique=False,
        schema="api",
    )
    op.create_table(
        "current_opportunity_summary",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_summary_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_status_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["api.opportunity.opportunity_id"],
            name="current_opportunity_summary_opportunity_id_opportunity_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_status_id"],
            ["api.lk_opportunity_status.opportunity_status_id"],
            name="current_opportunity_summary_opportunity_status_id_lk_op_3147",
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_summary_id"],
            ["api.opportunity_summary.opportunity_summary_id"],
            name="current_opportunity_summary_opportunity_summary_id_oppo_8251",
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_id", "opportunity_summary_id", name="current_opportunity_summary_pkey"
        ),
        schema="api",
    )
    op.create_index(
        "current_opportunity_summary_opportunity_summary_id_idx",
        "current_opportunity_summary",
        ["opportunity_summary_id"],
        unique=False,
        schema="api",
    )
    op.create_index(
        "current_opportunity_summary_opportunity_status_id_idx",
        "current_opportunity_summary",
        ["opportunity_status_id"],
        unique=False,
        schema="api",
    )
    op.create_index(
        "current_opportunity_summary_opportunity_id_idx",
        "current_opportunity_summary",
        ["opportunity_id"],
        unique=False,
        schema="api",
    )
    # ### end Alembic commands ###
