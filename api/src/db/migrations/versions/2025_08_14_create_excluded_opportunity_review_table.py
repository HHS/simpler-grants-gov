"""create excluded opportunity review table

Revision ID: 52e6534ef8a0
Revises: 76140cc4fbf7
Create Date: 2025-08-14 20:15:18.948553

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "52e6534ef8a0"
down_revision = "76140cc4fbf7"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "excluded_opportunity_review",
        sa.Column("opportunity_id", sa.UUID(), nullable=False),
        sa.Column("omb_review_status_display", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["api.opportunity.opportunity_id"],
            name=op.f("excluded_opportunity_review_opportunity_id_opportunity_fkey"),
        ),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("excluded_opportunity_review_pkey")),
        schema="api",
    )
    op.create_index(
        op.f("excluded_opportunity_review_opportunity_id_idx"),
        "excluded_opportunity_review",
        ["opportunity_id"],
        unique=False,
        schema="api",
    )
    op.drop_index(
        op.f("opportunity_attachment_legacy_attachment_id_idx"),
        table_name="opportunity_attachment",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_index(
        op.f("opportunity_attachment_opportunity_id_idx"),
        table_name="opportunity_attachment",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_table(
        "opportunity_attachment", schema="test_195495387774297757560388855302097562904_api"
    )
    op.drop_table("tforecast_hist", schema="test_108608949803588358968494026131317405857_legacy")
    op.drop_table(
        "lk_competition_open_to_applicant",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_index(
        op.f("tsynopsisattachment_transformed_at_idx"),
        table_name="tsynopsisattachment",
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.drop_table(
        "tsynopsisattachment", schema="test_195495387774297757560388855302097562904_staging"
    )
    op.drop_index(
        op.f("tfundinstr_forecast_hist_transformed_at_idx"),
        table_name="tfundinstr_forecast_hist",
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.drop_table(
        "tfundinstr_forecast_hist", schema="test_158415535871585582889006515973580025243_staging"
    )
    op.drop_table("user_token_session", schema="test_158415535871585582889006515973580025243_api")
    op.drop_index(
        op.f("tfundactcat_synopsis_hist_transformed_at_idx"),
        table_name="tfundactcat_synopsis_hist",
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.drop_table(
        "tfundactcat_synopsis_hist", schema="test_200494001685262614012745264629780230410_staging"
    )
    op.drop_table(
        "competition_assistance_listing", schema="test_158415535871585582889006515973580025243_api"
    )
    op.drop_index(
        op.f("opportunity_agency_code_idx"),
        table_name="opportunity",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_index(
        op.f("opportunity_is_draft_idx"),
        table_name="opportunity",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_index(
        op.f("opportunity_legacy_opportunity_id_idx"),
        table_name="opportunity",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_index(
        op.f("opportunity_opportunity_category_id_idx"),
        table_name="opportunity",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_index(
        op.f("opportunity_opportunity_title_idx"),
        table_name="opportunity",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_table("opportunity", schema="test_200494001685262614012745264629780230410_api")
    op.drop_index(
        op.f("tsubscription_transformed_at_idx"),
        table_name="tsubscription",
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.drop_table("tsubscription", schema="test_195495387774297757560388855302097562904_staging")
    op.drop_index(
        op.f("application_user_application_id_idx"),
        table_name="application_user",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_index(
        op.f("application_user_user_id_idx"),
        table_name="application_user",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_table("application_user", schema="test_200494001685262614012745264629780230410_api")
    op.drop_index(
        op.f("tsynopsis_transformed_at_idx"),
        table_name="tsynopsis",
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.drop_table("tsynopsis", schema="test_158415535871585582889006515973580025243_staging")
    op.drop_table("lk_extract_type", schema="test_195495387774297757560388855302097562904_api")
    op.drop_table(
        "lk_sam_gov_extract_type", schema="test_158415535871585582889006515973580025243_api"
    )
    op.drop_table("tforecast_hist", schema="test_158415535871585582889006515973580025243_legacy")
    op.drop_table(
        "link_competition_open_to_applicant",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_table(
        "tapplicanttypes_forecast_hist",
        schema="test_108608949803588358968494026131317405857_legacy",
    )
    op.drop_index(
        op.f("tfundinstr_forecast_transformed_at_idx"),
        table_name="tfundinstr_forecast",
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.drop_table(
        "tfundinstr_forecast", schema="test_200494001685262614012745264629780230410_staging"
    )
    op.drop_table("tsubscription", schema="test_200494001685262614012745264629780230410_legacy")
    op.drop_index(
        op.f("tgroups_transformed_at_idx"),
        table_name="tgroups",
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.drop_table("tgroups", schema="test_158415535871585582889006515973580025243_staging")
    op.drop_index(
        op.f("tuser_account_transformed_at_idx"),
        table_name="tuser_account",
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.drop_table("tuser_account", schema="test_200494001685262614012745264629780230410_staging")
    op.drop_index(
        op.f("user_saved_search_user_id_idx"),
        table_name="user_saved_search",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_table("user_saved_search", schema="test_195495387774297757560388855302097562904_api")
    op.drop_index(
        op.f("organization_user_organization_id_idx"),
        table_name="organization_user",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_index(
        op.f("organization_user_user_id_idx"),
        table_name="organization_user",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_table("organization_user", schema="test_195495387774297757560388855302097562904_api")
    op.drop_index(
        op.f("user_notification_log_user_id_idx"),
        table_name="user_notification_log",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_table(
        "user_notification_log", schema="test_158415535871585582889006515973580025243_api"
    )
    op.drop_index(
        op.f("tfundactcat_synopsis_transformed_at_idx"),
        table_name="tfundactcat_synopsis",
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.drop_table(
        "tfundactcat_synopsis", schema="test_158415535871585582889006515973580025243_staging"
    )
    op.drop_index(
        op.f("tfundactcat_synopsis_hist_transformed_at_idx"),
        table_name="tfundactcat_synopsis_hist",
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.drop_table(
        "tfundactcat_synopsis_hist", schema="test_195495387774297757560388855302097562904_staging"
    )
    op.drop_table(
        "tsubscription_opportunity", schema="test_200494001685262614012745264629780230410_legacy"
    )
    op.drop_table(
        "tfundinstr_synopsis_hist", schema="test_108608949803588358968494026131317405857_legacy"
    )
    op.drop_table("tinstructions", schema="test_108608949803588358968494026131317405857_legacy")
    op.drop_index(
        op.f("opportunity_assistance_listing_legacy_opportunity_assis_2774"),
        table_name="opportunity_assistance_listing",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_index(
        op.f("opportunity_assistance_listing_opportunity_id_idx"),
        table_name="opportunity_assistance_listing",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_table(
        "opportunity_assistance_listing", schema="test_195495387774297757560388855302097562904_api"
    )
    op.drop_table(
        "tapplicanttypes_forecast_hist",
        schema="test_158415535871585582889006515973580025243_legacy",
    )
    op.drop_index(
        op.f("link_opportunity_summary_funding_instrument_funding_ins_94c9"),
        table_name="link_opportunity_summary_funding_instrument",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_index(
        op.f("link_opportunity_summary_funding_instrument_opportunity_4597"),
        table_name="link_opportunity_summary_funding_instrument",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_table(
        "link_opportunity_summary_funding_instrument",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_index(
        op.f("tsynopsis_hist_transformed_at_idx"),
        table_name="tsynopsis_hist",
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.drop_table("tsynopsis_hist", schema="test_108608949803588358968494026131317405857_staging")
    op.drop_table(
        "lk_sam_gov_extract_type", schema="test_200494001685262614012745264629780230410_api"
    )
    op.drop_table(
        "short_lived_internal_token", schema="test_158415535871585582889006515973580025243_api"
    )
    op.drop_index(
        op.f("tfundactcat_forecast_hist_transformed_at_idx"),
        table_name="tfundactcat_forecast_hist",
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.drop_table(
        "tfundactcat_forecast_hist", schema="test_195495387774297757560388855302097562904_staging"
    )
    op.drop_table("organization", schema="test_195495387774297757560388855302097562904_api")
    op.drop_index(
        op.f("tapplicanttypes_synopsis_transformed_at_idx"),
        table_name="tapplicanttypes_synopsis",
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.drop_table(
        "tapplicanttypes_synopsis", schema="test_108608949803588358968494026131317405857_staging"
    )
    op.drop_table(
        "tfundinstr_synopsis_hist", schema="test_158415535871585582889006515973580025243_legacy"
    )
    op.drop_index(
        op.f("tuser_account_transformed_at_idx"),
        table_name="tuser_account",
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.drop_table("tuser_account", schema="test_195495387774297757560388855302097562904_staging")
    op.drop_table("tinstructions", schema="test_158415535871585582889006515973580025243_legacy")
    op.drop_index(
        op.f("tsubscription_search_transformed_at_idx"),
        table_name="tsubscription_search",
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.drop_table(
        "tsubscription_search", schema="test_200494001685262614012745264629780230410_staging"
    )
    op.drop_index(
        op.f("form_legacy_form_id_idx"),
        table_name="form",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_table("form", schema="test_200494001685262614012745264629780230410_api")
    op.drop_table(
        "lk_competition_open_to_applicant",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_table(
        "tfundactcat_forecast_hist", schema="test_200494001685262614012745264629780230410_legacy"
    )
    op.drop_index(
        op.f("tcompetition_transformed_at_idx"),
        table_name="tcompetition",
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.drop_table("tcompetition", schema="test_200494001685262614012745264629780230410_staging")
    op.drop_index(
        op.f("link_opportunity_summary_applicant_type_applicant_type_id_idx"),
        table_name="link_opportunity_summary_applicant_type",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_index(
        op.f("link_opportunity_summary_applicant_type_opportunity_sum_fee2"),
        table_name="link_opportunity_summary_applicant_type",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_table(
        "link_opportunity_summary_applicant_type",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_table("topportunity_cfda", schema="test_108608949803588358968494026131317405857_legacy")
    op.drop_index(
        op.f("tapplicanttypes_forecast_transformed_at_idx"),
        table_name="tapplicanttypes_forecast",
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.drop_table(
        "tapplicanttypes_forecast", schema="test_158415535871585582889006515973580025243_staging"
    )
    op.drop_table(
        "lk_funding_instrument", schema="test_200494001685262614012745264629780230410_api"
    )
    op.drop_table("lk_applicant_type", schema="test_200494001685262614012745264629780230410_api")
    op.drop_index(
        op.f("tfundinstr_synopsis_transformed_at_idx"),
        table_name="tfundinstr_synopsis",
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.drop_table(
        "tfundinstr_synopsis", schema="test_158415535871585582889006515973580025243_staging"
    )
    op.drop_table(
        "tapplicanttypes_forecast", schema="test_195495387774297757560388855302097562904_legacy"
    )
    op.drop_table("form_instruction", schema="test_195495387774297757560388855302097562904_api")
    op.drop_index(
        op.f("tuser_account_mapper_transformed_at_idx"),
        table_name="tuser_account_mapper",
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.drop_table(
        "tuser_account_mapper", schema="test_108608949803588358968494026131317405857_staging"
    )
    op.drop_index(
        op.f("topportunity_transformed_at_idx"),
        table_name="topportunity",
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.drop_table("topportunity", schema="test_108608949803588358968494026131317405857_staging")
    op.drop_index(
        op.f("tsubscription_search_transformed_at_idx"),
        table_name="tsubscription_search",
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.drop_table(
        "tsubscription_search", schema="test_195495387774297757560388855302097562904_staging"
    )
    op.drop_index(
        op.f("tforecast_transformed_at_idx"),
        table_name="tforecast",
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.drop_table("tforecast", schema="test_195495387774297757560388855302097562904_staging")
    op.drop_table(
        "tfundactcat_synopsis", schema="test_200494001685262614012745264629780230410_legacy"
    )
    op.drop_table("topportunity_cfda", schema="test_158415535871585582889006515973580025243_legacy")
    op.drop_table(
        "lk_application_status", schema="test_108608949803588358968494026131317405857_api"
    )
    op.drop_table(
        "tapplicanttypes_synopsis_hist",
        schema="test_195495387774297757560388855302097562904_legacy",
    )
    op.drop_index(
        op.f("tsynopsisattachment_transformed_at_idx"),
        table_name="tsynopsisattachment",
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.drop_table(
        "tsynopsisattachment", schema="test_108608949803588358968494026131317405857_staging"
    )
    op.drop_table("application_form", schema="test_195495387774297757560388855302097562904_api")
    op.drop_index(
        op.f("tcompetition_transformed_at_idx"),
        table_name="tcompetition",
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.drop_table("tcompetition", schema="test_195495387774297757560388855302097562904_staging")
    op.drop_table(
        "tsubscription_opportunity", schema="test_108608949803588358968494026131317405857_legacy"
    )
    op.drop_table("tforecast", schema="test_200494001685262614012745264629780230410_legacy")
    op.drop_index(
        op.f("tfundactcat_forecast_transformed_at_idx"),
        table_name="tfundactcat_forecast",
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.drop_table(
        "tfundactcat_forecast", schema="test_158415535871585582889006515973580025243_staging"
    )
    op.drop_index(
        op.f("tsubscription_transformed_at_idx"),
        table_name="tsubscription",
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.drop_table("tsubscription", schema="test_108608949803588358968494026131317405857_staging")
    op.drop_table(
        "user_saved_opportunity", schema="test_195495387774297757560388855302097562904_api"
    )
    op.drop_table("tcompetition", schema="test_200494001685262614012745264629780230410_legacy")
    op.drop_table(
        "lk_sam_gov_processing_status", schema="test_195495387774297757560388855302097562904_api"
    )
    op.drop_table(
        "lk_sam_gov_import_type", schema="test_200494001685262614012745264629780230410_api"
    )
    op.drop_table(
        "tfundinstr_forecast_hist", schema="test_108608949803588358968494026131317405857_legacy"
    )
    op.drop_index(
        op.f("link_opportunity_summary_funding_category_funding_categ_17a0"),
        table_name="link_opportunity_summary_funding_category",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_index(
        op.f("link_opportunity_summary_funding_category_opportunity_s_9f79"),
        table_name="link_opportunity_summary_funding_category",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_table(
        "link_opportunity_summary_funding_category",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_index(
        op.f("link_external_user_email_idx"),
        table_name="link_external_user",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_index(
        op.f("link_external_user_external_user_id_idx"),
        table_name="link_external_user",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_index(
        op.f("link_external_user_external_user_type_id_idx"),
        table_name="link_external_user",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_index(
        op.f("link_external_user_user_id_idx"),
        table_name="link_external_user",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_table("link_external_user", schema="test_200494001685262614012745264629780230410_api")
    op.drop_table("user", schema="test_108608949803588358968494026131317405857_api")
    op.drop_index(
        op.f("tfundactcat_synopsis_hist_transformed_at_idx"),
        table_name="tfundactcat_synopsis_hist",
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.drop_table(
        "tfundactcat_synopsis_hist", schema="test_108608949803588358968494026131317405857_staging"
    )
    op.drop_table(
        "lk_opportunity_category", schema="test_195495387774297757560388855302097562904_api"
    )
    op.drop_table("tsynopsis", schema="test_108608949803588358968494026131317405857_legacy")
    op.drop_index(
        op.f("link_opportunity_summary_applicant_type_applicant_type_id_idx"),
        table_name="link_opportunity_summary_applicant_type",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_index(
        op.f("link_opportunity_summary_applicant_type_opportunity_sum_fee2"),
        table_name="link_opportunity_summary_applicant_type",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_table(
        "link_opportunity_summary_applicant_type",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_table("job_log", schema="test_108608949803588358968494026131317405857_api")
    op.drop_index(
        op.f("suppressed_email_email_idx"),
        table_name="suppressed_email",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_index(
        op.f("suppressed_email_last_update_time_idx"),
        table_name="suppressed_email",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_table("suppressed_email", schema="test_108608949803588358968494026131317405857_api")
    op.drop_table(
        "tfundinstr_forecast_hist", schema="test_158415535871585582889006515973580025243_legacy"
    )
    op.drop_index(
        op.f("suppressed_email_email_idx"),
        table_name="suppressed_email",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_index(
        op.f("suppressed_email_last_update_time_idx"),
        table_name="suppressed_email",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_table("suppressed_email", schema="test_195495387774297757560388855302097562904_api")
    op.drop_table("tforecast_hist", schema="test_195495387774297757560388855302097562904_legacy")
    op.drop_table("tgroups", schema="test_108608949803588358968494026131317405857_legacy")
    op.drop_index(
        op.f("tapplicanttypes_synopsis_hist_transformed_at_idx"),
        table_name="tapplicanttypes_synopsis_hist",
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.drop_table(
        "tapplicanttypes_synopsis_hist",
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.drop_index(
        op.f("tfundinstr_forecast_transformed_at_idx"),
        table_name="tfundinstr_forecast",
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.drop_table(
        "tfundinstr_forecast", schema="test_108608949803588358968494026131317405857_staging"
    )
    op.drop_index(
        op.f("competition_form_competition_id_idx"),
        table_name="competition_form",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_table("competition_form", schema="test_108608949803588358968494026131317405857_api")
    op.drop_index(
        op.f("tuser_account_transformed_at_idx"),
        table_name="tuser_account",
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.drop_table("tuser_account", schema="test_108608949803588358968494026131317405857_staging")
    op.drop_index(
        op.f("application_competition_id_idx"),
        table_name="application",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_table("application", schema="test_108608949803588358968494026131317405857_api")
    op.drop_table("lk_funding_category", schema="test_108608949803588358968494026131317405857_api")
    op.drop_table("tsynopsis", schema="test_158415535871585582889006515973580025243_legacy")
    op.drop_table(
        "tfundactcat_synopsis", schema="test_108608949803588358968494026131317405857_legacy"
    )
    op.drop_index(
        op.f("agency_agency_code_idx"),
        table_name="agency",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_table("agency", schema="test_200494001685262614012745264629780230410_api")
    op.drop_table(
        "lk_application_status", schema="test_158415535871585582889006515973580025243_api"
    )
    op.drop_table("lk_job_status", schema="test_200494001685262614012745264629780230410_api")
    op.drop_index(
        op.f("opportunity_change_audit_is_loaded_to_version_table_idx"),
        table_name="opportunity_change_audit",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_index(
        op.f("opportunity_change_audit_opportunity_id_idx"),
        table_name="opportunity_change_audit",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_table(
        "opportunity_change_audit", schema="test_108608949803588358968494026131317405857_api"
    )
    op.drop_table("tgroups", schema="test_158415535871585582889006515973580025243_legacy")
    op.drop_table(
        "tapplicanttypes_forecast_hist",
        schema="test_195495387774297757560388855302097562904_legacy",
    )
    op.drop_index(
        op.f("competition_form_family_id_idx"),
        table_name="competition",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_index(
        op.f("competition_legacy_competition_id_idx"),
        table_name="competition",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_index(
        op.f("competition_opportunity_id_idx"),
        table_name="competition",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_table("competition", schema="test_108608949803588358968494026131317405857_api")
    op.drop_index(
        op.f("tsynopsis_hist_transformed_at_idx"),
        table_name="tsynopsis_hist",
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.drop_table("tsynopsis_hist", schema="test_158415535871585582889006515973580025243_staging")
    op.drop_table(
        "lk_opportunity_status", schema="test_108608949803588358968494026131317405857_api"
    )
    op.drop_table(
        "lk_external_user_type", schema="test_108608949803588358968494026131317405857_api"
    )
    op.drop_table(
        "tfundinstr_synopsis_hist", schema="test_195495387774297757560388855302097562904_legacy"
    )
    op.drop_index(
        op.f("tsubscription_search_transformed_at_idx"),
        table_name="tsubscription_search",
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.drop_table(
        "tsubscription_search", schema="test_108608949803588358968494026131317405857_staging"
    )
    op.drop_table("extract_metadata", schema="test_108608949803588358968494026131317405857_api")
    op.drop_table(
        "lk_agency_download_file_type", schema="test_195495387774297757560388855302097562904_api"
    )
    op.drop_index(
        op.f("tcompetition_transformed_at_idx"),
        table_name="tcompetition",
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.drop_table("tcompetition", schema="test_108608949803588358968494026131317405857_staging")
    op.drop_table(
        "competition_instruction", schema="test_200494001685262614012745264629780230410_api"
    )
    op.drop_table(
        "tapplicanttypes_forecast", schema="test_108608949803588358968494026131317405857_legacy"
    )
    op.drop_table("extract_metadata", schema="test_195495387774297757560388855302097562904_api")
    op.drop_table(
        "tfundinstr_synopsis", schema="test_108608949803588358968494026131317405857_legacy"
    )
    op.drop_table("user", schema="test_158415535871585582889006515973580025243_api")
    op.drop_table("agency_contact_info", schema="test_108608949803588358968494026131317405857_api")
    op.drop_index(
        op.f("current_opportunity_summary_opportunity_id_idx"),
        table_name="current_opportunity_summary",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_index(
        op.f("current_opportunity_summary_opportunity_status_id_idx"),
        table_name="current_opportunity_summary",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_index(
        op.f("current_opportunity_summary_opportunity_summary_id_idx"),
        table_name="current_opportunity_summary",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_table(
        "current_opportunity_summary", schema="test_108608949803588358968494026131317405857_api"
    )
    op.drop_index(
        op.f("sam_gov_entity_ebiz_poc_email_idx"),
        table_name="sam_gov_entity",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_index(
        op.f("sam_gov_entity_uei_idx"),
        table_name="sam_gov_entity",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_table("sam_gov_entity", schema="test_158415535871585582889006515973580025243_api")
    op.drop_table("job_log", schema="test_158415535871585582889006515973580025243_api")
    op.drop_table("login_gov_state", schema="test_195495387774297757560388855302097562904_api")
    op.drop_table("opportunity_version", schema="test_195495387774297757560388855302097562904_api")
    op.drop_table(
        "tapplicanttypes_forecast", schema="test_158415535871585582889006515973580025243_legacy"
    )
    op.drop_table(
        "tfundinstr_synopsis", schema="test_158415535871585582889006515973580025243_legacy"
    )
    op.drop_index(
        op.f("opportunity_summary_legacy_opportunity_id_idx"),
        table_name="opportunity_summary",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_index(
        op.f("opportunity_summary_opportunity_id_idx"),
        table_name="opportunity_summary",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_table("opportunity_summary", schema="test_158415535871585582889006515973580025243_api")
    op.drop_index(
        op.f("competition_form_competition_id_idx"),
        table_name="competition_form",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_table("competition_form", schema="test_158415535871585582889006515973580025243_api")
    op.drop_table("topportunity_cfda", schema="test_195495387774297757560388855302097562904_legacy")
    op.drop_index(
        op.f("tapplicanttypes_forecast_hist_transformed_at_idx"),
        table_name="tapplicanttypes_forecast_hist",
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.drop_table(
        "tapplicanttypes_forecast_hist",
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.drop_index(
        op.f("tapplicanttypes_synopsis_transformed_at_idx"),
        table_name="tapplicanttypes_synopsis",
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.drop_table(
        "tapplicanttypes_synopsis", schema="test_195495387774297757560388855302097562904_staging"
    )
    op.drop_index(
        op.f("application_competition_id_idx"),
        table_name="application",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_table("application", schema="test_158415535871585582889006515973580025243_api")
    op.drop_table("lk_funding_category", schema="test_158415535871585582889006515973580025243_api")
    op.drop_index(
        op.f("opportunity_agency_code_idx"),
        table_name="opportunity",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_index(
        op.f("opportunity_is_draft_idx"),
        table_name="opportunity",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_index(
        op.f("opportunity_legacy_opportunity_id_idx"),
        table_name="opportunity",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_index(
        op.f("opportunity_opportunity_category_id_idx"),
        table_name="opportunity",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_index(
        op.f("opportunity_opportunity_title_idx"),
        table_name="opportunity",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_table("opportunity", schema="test_195495387774297757560388855302097562904_api")
    op.drop_index(
        op.f("tsynopsisattachment_transformed_at_idx"),
        table_name="tsynopsisattachment",
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.drop_table(
        "tsynopsisattachment", schema="test_158415535871585582889006515973580025243_staging"
    )
    op.drop_index(
        op.f("application_user_application_id_idx"),
        table_name="application_user",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_index(
        op.f("application_user_user_id_idx"),
        table_name="application_user",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_table("application_user", schema="test_108608949803588358968494026131317405857_api")
    op.drop_table(
        "tfundactcat_forecast", schema="test_108608949803588358968494026131317405857_legacy"
    )
    op.drop_index(
        op.f("application_user_application_id_idx"),
        table_name="application_user",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_index(
        op.f("application_user_user_id_idx"),
        table_name="application_user",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_table("application_user", schema="test_195495387774297757560388855302097562904_api")
    op.drop_table(
        "link_agency_download_file_type", schema="test_200494001685262614012745264629780230410_api"
    )
    op.drop_table(
        "sam_gov_entity_import_type", schema="test_108608949803588358968494026131317405857_api"
    )
    op.drop_table(
        "application_attachment", schema="test_200494001685262614012745264629780230410_api"
    )
    op.drop_index(
        op.f("sam_extract_file_extract_type_id_idx"),
        table_name="sam_extract_file",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_index(
        op.f("sam_extract_file_processing_status_id_idx"),
        table_name="sam_extract_file",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_table("sam_extract_file", schema="test_158415535871585582889006515973580025243_api")
    op.drop_index(
        op.f("opportunity_change_audit_is_loaded_to_version_table_idx"),
        table_name="opportunity_change_audit",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_index(
        op.f("opportunity_change_audit_opportunity_id_idx"),
        table_name="opportunity_change_audit",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_table(
        "opportunity_change_audit", schema="test_158415535871585582889006515973580025243_api"
    )
    op.drop_index(
        op.f("sam_gov_entity_ebiz_poc_email_idx"),
        table_name="sam_gov_entity",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_index(
        op.f("sam_gov_entity_uei_idx"),
        table_name="sam_gov_entity",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_table("sam_gov_entity", schema="test_200494001685262614012745264629780230410_api")
    op.drop_index(
        op.f("tsubscription_transformed_at_idx"),
        table_name="tsubscription",
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.drop_table("tsubscription", schema="test_158415535871585582889006515973580025243_staging")
    op.drop_index(
        op.f("tfundinstr_synopsis_hist_transformed_at_idx"),
        table_name="tfundinstr_synopsis_hist",
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.drop_table(
        "tfundinstr_synopsis_hist", schema="test_200494001685262614012745264629780230410_staging"
    )
    op.drop_table(
        "link_competition_open_to_applicant",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_table(
        "tapplicanttypes_synopsis", schema="test_200494001685262614012745264629780230410_legacy"
    )
    op.drop_index(
        op.f("tinstructions_transformed_at_idx"),
        table_name="tinstructions",
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.drop_table("tinstructions", schema="test_200494001685262614012745264629780230410_staging")
    op.drop_index(
        op.f("user_opportunity_notification_log_opportunity_id_idx"),
        table_name="user_opportunity_notification_log",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_index(
        op.f("user_opportunity_notification_log_user_id_idx"),
        table_name="user_opportunity_notification_log",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_table(
        "user_opportunity_notification_log",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_index(
        op.f("competition_form_family_id_idx"),
        table_name="competition",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_index(
        op.f("competition_legacy_competition_id_idx"),
        table_name="competition",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_index(
        op.f("competition_opportunity_id_idx"),
        table_name="competition",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_table("competition", schema="test_158415535871585582889006515973580025243_api")
    op.drop_table(
        "lk_opportunity_status", schema="test_158415535871585582889006515973580025243_api"
    )
    op.drop_index(
        op.f("opportunity_summary_legacy_opportunity_id_idx"),
        table_name="opportunity_summary",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_index(
        op.f("opportunity_summary_opportunity_id_idx"),
        table_name="opportunity_summary",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_table("opportunity_summary", schema="test_200494001685262614012745264629780230410_api")
    op.drop_table(
        "tfundactcat_forecast", schema="test_158415535871585582889006515973580025243_legacy"
    )
    op.drop_table("lk_form_family", schema="test_108608949803588358968494026131317405857_api")
    op.drop_table(
        "tsubscription_opportunity", schema="test_195495387774297757560388855302097562904_legacy"
    )
    op.drop_table(
        "lk_agency_submission_notification_setting",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_index(
        op.f("tuser_account_mapper_transformed_at_idx"),
        table_name="tuser_account_mapper",
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.drop_table(
        "tuser_account_mapper", schema="test_195495387774297757560388855302097562904_staging"
    )
    op.drop_index(
        op.f("opportunity_attachment_legacy_attachment_id_idx"),
        table_name="opportunity_attachment",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_index(
        op.f("opportunity_attachment_opportunity_id_idx"),
        table_name="opportunity_attachment",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_table(
        "opportunity_attachment", schema="test_108608949803588358968494026131317405857_api"
    )
    op.drop_index(
        op.f("topportunity_transformed_at_idx"),
        table_name="topportunity",
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.drop_table("topportunity", schema="test_195495387774297757560388855302097562904_staging")
    op.drop_index(
        op.f("sam_extract_file_extract_type_id_idx"),
        table_name="sam_extract_file",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_index(
        op.f("sam_extract_file_processing_status_id_idx"),
        table_name="sam_extract_file",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_table("sam_extract_file", schema="test_200494001685262614012745264629780230410_api")
    op.drop_index(
        op.f("tfundactcat_synopsis_hist_transformed_at_idx"),
        table_name="tfundactcat_synopsis_hist",
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.drop_table(
        "tfundactcat_synopsis_hist", schema="test_158415535871585582889006515973580025243_staging"
    )
    op.drop_table(
        "lk_sam_gov_extract_type", schema="test_195495387774297757560388855302097562904_api"
    )
    op.drop_table(
        "tfundinstr_forecast_hist", schema="test_195495387774297757560388855302097562904_legacy"
    )
    op.drop_index(
        op.f("topportunity_cfda_transformed_at_idx"),
        table_name="topportunity_cfda",
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.drop_table(
        "topportunity_cfda", schema="test_200494001685262614012745264629780230410_staging"
    )
    op.drop_table(
        "tuser_account_mapper", schema="test_200494001685262614012745264629780230410_legacy"
    )
    op.drop_index(
        op.f("tapplicanttypes_synopsis_hist_transformed_at_idx"),
        table_name="tapplicanttypes_synopsis_hist",
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.drop_table(
        "tapplicanttypes_synopsis_hist",
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.drop_table("topportunity", schema="test_200494001685262614012745264629780230410_legacy")
    op.drop_index(
        op.f("tfundactcat_forecast_hist_transformed_at_idx"),
        table_name="tfundactcat_forecast_hist",
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.drop_table(
        "tfundactcat_forecast_hist", schema="test_158415535871585582889006515973580025243_staging"
    )
    op.drop_table("lk_extract_type", schema="test_108608949803588358968494026131317405857_api")
    op.drop_table(
        "tfundactcat_forecast_hist", schema="test_195495387774297757560388855302097562904_legacy"
    )
    op.drop_table(
        "tsynopsisattachment", schema="test_200494001685262614012745264629780230410_legacy"
    )
    op.drop_index(
        op.f("form_legacy_form_id_idx"),
        table_name="form",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_table("form", schema="test_195495387774297757560388855302097562904_api")
    op.drop_table("tsynopsis", schema="test_195495387774297757560388855302097562904_legacy")
    op.drop_index(
        op.f("tuser_account_transformed_at_idx"),
        table_name="tuser_account",
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.drop_table("tuser_account", schema="test_158415535871585582889006515973580025243_staging")
    op.drop_table(
        "lk_funding_instrument", schema="test_195495387774297757560388855302097562904_api"
    )
    op.drop_table("lk_applicant_type", schema="test_195495387774297757560388855302097562904_api")
    op.drop_table(
        "application_submission", schema="test_200494001685262614012745264629780230410_api"
    )
    op.drop_index(
        op.f("user_saved_search_user_id_idx"),
        table_name="user_saved_search",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_table("user_saved_search", schema="test_108608949803588358968494026131317405857_api")
    op.drop_table("tgroups", schema="test_195495387774297757560388855302097562904_legacy")
    op.drop_table("tsynopsis_hist", schema="test_108608949803588358968494026131317405857_legacy")
    op.drop_index(
        op.f("organization_user_organization_id_idx"),
        table_name="organization_user",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_index(
        op.f("organization_user_user_id_idx"),
        table_name="organization_user",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_table("organization_user", schema="test_108608949803588358968494026131317405857_api")
    op.drop_table(
        "sam_gov_entity_import_type", schema="test_158415535871585582889006515973580025243_api"
    )
    op.drop_table("user_token_session", schema="test_200494001685262614012745264629780230410_api")
    op.drop_table(
        "competition_assistance_listing", schema="test_200494001685262614012745264629780230410_api"
    )
    op.drop_index(
        op.f("opportunity_assistance_listing_legacy_opportunity_assis_2774"),
        table_name="opportunity_assistance_listing",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_index(
        op.f("opportunity_assistance_listing_opportunity_id_idx"),
        table_name="opportunity_assistance_listing",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_table(
        "opportunity_assistance_listing", schema="test_108608949803588358968494026131317405857_api"
    )
    op.drop_table(
        "tfundactcat_synopsis", schema="test_195495387774297757560388855302097562904_legacy"
    )
    op.drop_index(
        op.f("link_opportunity_summary_funding_instrument_funding_ins_94c9"),
        table_name="link_opportunity_summary_funding_instrument",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_index(
        op.f("link_opportunity_summary_funding_instrument_opportunity_4597"),
        table_name="link_opportunity_summary_funding_instrument",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_table(
        "link_opportunity_summary_funding_instrument",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_table("organization", schema="test_108608949803588358968494026131317405857_api")
    op.drop_index(
        op.f("tsubscription_search_transformed_at_idx"),
        table_name="tsubscription_search",
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.drop_table(
        "tsubscription_search", schema="test_158415535871585582889006515973580025243_staging"
    )
    op.drop_index(
        op.f("tforecast_transformed_at_idx"),
        table_name="tforecast",
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.drop_table("tforecast", schema="test_158415535871585582889006515973580025243_staging")
    op.drop_table("tsynopsis_hist", schema="test_158415535871585582889006515973580025243_legacy")
    op.drop_table("lk_form_family", schema="test_158415535871585582889006515973580025243_api")
    op.drop_table(
        "tfundactcat_synopsis_hist", schema="test_200494001685262614012745264629780230410_legacy"
    )
    op.drop_index(
        op.f("tfundinstr_forecast_transformed_at_idx"),
        table_name="tfundinstr_forecast",
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.drop_table(
        "tfundinstr_forecast", schema="test_195495387774297757560388855302097562904_staging"
    )
    op.drop_index(
        op.f("tfundinstr_forecast_hist_transformed_at_idx"),
        table_name="tfundinstr_forecast_hist",
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.drop_table(
        "tfundinstr_forecast_hist", schema="test_200494001685262614012745264629780230410_staging"
    )
    op.drop_index(
        op.f("tcompetition_transformed_at_idx"),
        table_name="tcompetition",
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.drop_table("tcompetition", schema="test_158415535871585582889006515973580025243_staging")
    op.drop_index(
        op.f("opportunity_attachment_legacy_attachment_id_idx"),
        table_name="opportunity_attachment",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_index(
        op.f("opportunity_attachment_opportunity_id_idx"),
        table_name="opportunity_attachment",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_table(
        "opportunity_attachment", schema="test_158415535871585582889006515973580025243_api"
    )
    op.drop_index(
        op.f("user_notification_log_user_id_idx"),
        table_name="user_notification_log",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_table(
        "user_notification_log", schema="test_200494001685262614012745264629780230410_api"
    )
    op.drop_table(
        "tfundinstr_forecast", schema="test_200494001685262614012745264629780230410_legacy"
    )
    op.drop_index(
        op.f("tsynopsis_transformed_at_idx"),
        table_name="tsynopsis",
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.drop_table("tsynopsis", schema="test_200494001685262614012745264629780230410_staging")
    op.drop_table(
        "lk_sam_gov_import_type", schema="test_195495387774297757560388855302097562904_api"
    )
    op.drop_table(
        "tuser_account_mapper", schema="test_108608949803588358968494026131317405857_legacy"
    )
    op.drop_table("tuser_account", schema="test_200494001685262614012745264629780230410_legacy")
    op.drop_index(
        op.f("link_opportunity_summary_funding_category_funding_categ_17a0"),
        table_name="link_opportunity_summary_funding_category",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_index(
        op.f("link_opportunity_summary_funding_category_opportunity_s_9f79"),
        table_name="link_opportunity_summary_funding_category",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_table(
        "link_opportunity_summary_funding_category",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_table("form_instruction", schema="test_108608949803588358968494026131317405857_api")
    op.drop_table(
        "tfundinstr_synopsis", schema="test_195495387774297757560388855302097562904_legacy"
    )
    op.drop_index(
        op.f("link_external_user_email_idx"),
        table_name="link_external_user",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_index(
        op.f("link_external_user_external_user_id_idx"),
        table_name="link_external_user",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_index(
        op.f("link_external_user_external_user_type_id_idx"),
        table_name="link_external_user",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_index(
        op.f("link_external_user_user_id_idx"),
        table_name="link_external_user",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_table("link_external_user", schema="test_195495387774297757560388855302097562904_api")
    op.drop_table(
        "short_lived_internal_token", schema="test_200494001685262614012745264629780230410_api"
    )
    op.drop_table("lk_extract_type", schema="test_158415535871585582889006515973580025243_api")
    op.drop_table(
        "tsynopsisattachment", schema="test_108608949803588358968494026131317405857_legacy"
    )
    op.drop_index(
        op.f("tapplicanttypes_forecast_hist_transformed_at_idx"),
        table_name="tapplicanttypes_forecast_hist",
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.drop_table(
        "tapplicanttypes_forecast_hist",
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.drop_table("tsubscription", schema="test_108608949803588358968494026131317405857_legacy")
    op.drop_table("application_form", schema="test_108608949803588358968494026131317405857_api")
    op.drop_table(
        "lk_competition_open_to_applicant",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_index(
        op.f("organization_user_organization_id_idx"),
        table_name="organization_user",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_index(
        op.f("organization_user_user_id_idx"),
        table_name="organization_user",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_table("organization_user", schema="test_158415535871585582889006515973580025243_api")
    op.drop_index(
        op.f("tfundinstr_synopsis_hist_transformed_at_idx"),
        table_name="tfundinstr_synopsis_hist",
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.drop_table(
        "tfundinstr_synopsis_hist", schema="test_108608949803588358968494026131317405857_staging"
    )
    op.drop_index(
        op.f("tinstructions_transformed_at_idx"),
        table_name="tinstructions",
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.drop_table("tinstructions", schema="test_108608949803588358968494026131317405857_staging")
    op.drop_index(
        op.f("opportunity_assistance_listing_legacy_opportunity_assis_2774"),
        table_name="opportunity_assistance_listing",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_index(
        op.f("opportunity_assistance_listing_opportunity_id_idx"),
        table_name="opportunity_assistance_listing",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_table(
        "opportunity_assistance_listing", schema="test_158415535871585582889006515973580025243_api"
    )
    op.drop_table(
        "tsubscription_search", schema="test_200494001685262614012745264629780230410_legacy"
    )
    op.drop_table(
        "tfundactcat_forecast", schema="test_195495387774297757560388855302097562904_legacy"
    )
    op.drop_index(
        op.f("link_opportunity_summary_funding_instrument_funding_ins_94c9"),
        table_name="link_opportunity_summary_funding_instrument",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_index(
        op.f("link_opportunity_summary_funding_instrument_opportunity_4597"),
        table_name="link_opportunity_summary_funding_instrument",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_table(
        "link_opportunity_summary_funding_instrument",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_index(
        op.f("agency_agency_code_idx"),
        table_name="agency",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_table("agency", schema="test_195495387774297757560388855302097562904_api")
    op.drop_table(
        "user_saved_opportunity", schema="test_108608949803588358968494026131317405857_api"
    )
    op.drop_table("tsubscription", schema="test_158415535871585582889006515973580025243_legacy")
    op.drop_table(
        "lk_sam_gov_processing_status", schema="test_108608949803588358968494026131317405857_api"
    )
    op.drop_table("lk_job_status", schema="test_195495387774297757560388855302097562904_api")
    op.drop_table("organization", schema="test_158415535871585582889006515973580025243_api")
    op.drop_table(
        "tfundactcat_synopsis_hist", schema="test_108608949803588358968494026131317405857_legacy"
    )
    op.drop_table(
        "tsubscription_opportunity", schema="test_158415535871585582889006515973580025243_legacy"
    )
    op.drop_index(
        op.f("tapplicanttypes_forecast_transformed_at_idx"),
        table_name="tapplicanttypes_forecast",
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.drop_table(
        "tapplicanttypes_forecast", schema="test_200494001685262614012745264629780230410_staging"
    )
    op.drop_index(
        op.f("tfundinstr_synopsis_transformed_at_idx"),
        table_name="tfundinstr_synopsis",
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.drop_table(
        "tfundinstr_synopsis", schema="test_200494001685262614012745264629780230410_staging"
    )
    op.drop_table(
        "lk_opportunity_category", schema="test_108608949803588358968494026131317405857_api"
    )
    op.drop_table(
        "tfundactcat_forecast_hist", schema="test_108608949803588358968494026131317405857_legacy"
    )
    op.drop_table("tuser_account", schema="test_108608949803588358968494026131317405857_legacy")
    op.drop_table(
        "competition_instruction", schema="test_195495387774297757560388855302097562904_api"
    )
    op.drop_table("form_instruction", schema="test_158415535871585582889006515973580025243_api")
    op.drop_table(
        "tfundactcat_forecast_hist", schema="test_158415535871585582889006515973580025243_legacy"
    )
    op.drop_table("application_form", schema="test_158415535871585582889006515973580025243_api")
    op.drop_index(
        op.f("link_opportunity_summary_applicant_type_applicant_type_id_idx"),
        table_name="link_opportunity_summary_applicant_type",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_index(
        op.f("link_opportunity_summary_applicant_type_opportunity_sum_fee2"),
        table_name="link_opportunity_summary_applicant_type",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_table(
        "link_opportunity_summary_applicant_type",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_table(
        "tsubscription_search", schema="test_108608949803588358968494026131317405857_legacy"
    )
    op.drop_table("tforecast", schema="test_108608949803588358968494026131317405857_legacy")
    op.drop_table("tsynopsis_hist", schema="test_195495387774297757560388855302097562904_legacy")
    op.drop_table(
        "tfundactcat_synopsis", schema="test_158415535871585582889006515973580025243_legacy"
    )
    op.drop_table("tcompetition", schema="test_108608949803588358968494026131317405857_legacy")
    op.drop_index(
        op.f("tapplicanttypes_synopsis_hist_transformed_at_idx"),
        table_name="tapplicanttypes_synopsis_hist",
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.drop_table(
        "tapplicanttypes_synopsis_hist",
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.drop_table(
        "link_agency_download_file_type", schema="test_195495387774297757560388855302097562904_api"
    )
    op.drop_index(
        op.f("tapplicanttypes_synopsis_transformed_at_idx"),
        table_name="tapplicanttypes_synopsis",
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.drop_table(
        "tapplicanttypes_synopsis", schema="test_158415535871585582889006515973580025243_staging"
    )
    op.drop_table(
        "application_attachment", schema="test_195495387774297757560388855302097562904_api"
    )
    op.drop_index(
        op.f("tfundinstr_forecast_hist_transformed_at_idx"),
        table_name="tfundinstr_forecast_hist",
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.drop_table(
        "tfundinstr_forecast_hist", schema="test_108608949803588358968494026131317405857_staging"
    )
    op.drop_table(
        "tapplicanttypes_synopsis", schema="test_195495387774297757560388855302097562904_legacy"
    )
    op.drop_index(
        op.f("sam_gov_entity_ebiz_poc_email_idx"),
        table_name="sam_gov_entity",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_index(
        op.f("sam_gov_entity_uei_idx"),
        table_name="sam_gov_entity",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_table("sam_gov_entity", schema="test_195495387774297757560388855302097562904_api")
    op.drop_table(
        "lk_agency_download_file_type", schema="test_108608949803588358968494026131317405857_api"
    )
    op.drop_table(
        "tsubscription_search", schema="test_158415535871585582889006515973580025243_legacy"
    )
    op.drop_table("tforecast", schema="test_158415535871585582889006515973580025243_legacy")
    op.drop_table(
        "lk_application_status", schema="test_200494001685262614012745264629780230410_api"
    )
    op.drop_table(
        "tapplicanttypes_synopsis_hist",
        schema="test_200494001685262614012745264629780230410_legacy",
    )
    op.drop_index(
        op.f("tsynopsis_transformed_at_idx"),
        table_name="tsynopsis",
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.drop_table("tsynopsis", schema="test_108608949803588358968494026131317405857_staging")
    op.drop_index(
        op.f("tforecast_hist_transformed_at_idx"),
        table_name="tforecast_hist",
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.drop_table("tforecast_hist", schema="test_200494001685262614012745264629780230410_staging")
    op.drop_table(
        "lk_opportunity_category", schema="test_158415535871585582889006515973580025243_api"
    )
    op.drop_index(
        op.f("opportunity_summary_legacy_opportunity_id_idx"),
        table_name="opportunity_summary",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_index(
        op.f("opportunity_summary_opportunity_id_idx"),
        table_name="opportunity_summary",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_table("opportunity_summary", schema="test_195495387774297757560388855302097562904_api")
    op.drop_table("tcompetition", schema="test_158415535871585582889006515973580025243_legacy")
    op.drop_table("login_gov_state", schema="test_108608949803588358968494026131317405857_api")
    op.drop_table(
        "lk_agency_submission_notification_setting",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_table("opportunity_version", schema="test_108608949803588358968494026131317405857_api")
    op.drop_index(
        op.f("suppressed_email_email_idx"),
        table_name="suppressed_email",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_index(
        op.f("suppressed_email_last_update_time_idx"),
        table_name="suppressed_email",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_table("suppressed_email", schema="test_158415535871585582889006515973580025243_api")
    op.drop_index(
        op.f("sam_extract_file_extract_type_id_idx"),
        table_name="sam_extract_file",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_index(
        op.f("sam_extract_file_processing_status_id_idx"),
        table_name="sam_extract_file",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_table("sam_extract_file", schema="test_195495387774297757560388855302097562904_api")
    op.drop_index(
        op.f("tuser_account_mapper_transformed_at_idx"),
        table_name="tuser_account_mapper",
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.drop_table(
        "tuser_account_mapper", schema="test_158415535871585582889006515973580025243_staging"
    )
    op.drop_index(
        op.f("topportunity_transformed_at_idx"),
        table_name="topportunity",
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.drop_table("topportunity", schema="test_158415535871585582889006515973580025243_staging")
    op.drop_table(
        "tuser_account_mapper", schema="test_195495387774297757560388855302097562904_legacy"
    )
    op.drop_index(
        op.f("opportunity_agency_code_idx"),
        table_name="opportunity",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_index(
        op.f("opportunity_is_draft_idx"),
        table_name="opportunity",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_index(
        op.f("opportunity_legacy_opportunity_id_idx"),
        table_name="opportunity",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_index(
        op.f("opportunity_opportunity_category_id_idx"),
        table_name="opportunity",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_index(
        op.f("opportunity_opportunity_title_idx"),
        table_name="opportunity",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_table("opportunity", schema="test_108608949803588358968494026131317405857_api")
    op.drop_table("user", schema="test_200494001685262614012745264629780230410_api")
    op.drop_table(
        "tsynopsisattachment", schema="test_195495387774297757560388855302097562904_legacy"
    )
    op.drop_index(
        op.f("tforecast_hist_transformed_at_idx"),
        table_name="tforecast_hist",
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.drop_table("tforecast_hist", schema="test_195495387774297757560388855302097562904_staging")
    op.drop_table(
        "link_competition_open_to_applicant",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_table("job_log", schema="test_200494001685262614012745264629780230410_api")
    op.drop_table("tsubscription", schema="test_195495387774297757560388855302097562904_legacy")
    op.drop_table(
        "application_submission", schema="test_195495387774297757560388855302097562904_api"
    )
    op.drop_table("tforecast_hist", schema="test_200494001685262614012745264629780230410_legacy")
    op.drop_table(
        "lk_external_user_type", schema="test_158415535871585582889006515973580025243_api"
    )
    op.drop_index(
        op.f("competition_form_competition_id_idx"),
        table_name="competition_form",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_table("competition_form", schema="test_200494001685262614012745264629780230410_api")
    op.drop_table("user_token_session", schema="test_195495387774297757560388855302097562904_api")
    op.drop_table(
        "competition_assistance_listing", schema="test_195495387774297757560388855302097562904_api"
    )
    op.drop_index(
        op.f("application_competition_id_idx"),
        table_name="application",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_table("application", schema="test_200494001685262614012745264629780230410_api")
    op.drop_table("lk_funding_category", schema="test_200494001685262614012745264629780230410_api")
    op.drop_index(
        op.f("tapplicanttypes_forecast_hist_transformed_at_idx"),
        table_name="tapplicanttypes_forecast_hist",
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.drop_table(
        "tapplicanttypes_forecast_hist",
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.drop_index(
        op.f("tapplicanttypes_forecast_transformed_at_idx"),
        table_name="tapplicanttypes_forecast",
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.drop_table(
        "tapplicanttypes_forecast", schema="test_108608949803588358968494026131317405857_staging"
    )
    op.drop_index(
        op.f("user_api_key_user_id_idx"),
        table_name="user_api_key",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_table("user_api_key", schema="test_108608949803588358968494026131317405857_api")
    op.drop_index(
        op.f("tfundinstr_synopsis_transformed_at_idx"),
        table_name="tfundinstr_synopsis",
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.drop_table(
        "tfundinstr_synopsis", schema="test_108608949803588358968494026131317405857_staging"
    )
    op.drop_table(
        "lk_agency_download_file_type", schema="test_158415535871585582889006515973580025243_api"
    )
    op.drop_table(
        "lk_sam_gov_extract_type", schema="test_108608949803588358968494026131317405857_api"
    )
    op.drop_table("extract_metadata", schema="test_158415535871585582889006515973580025243_api")
    op.drop_index(
        op.f("opportunity_change_audit_is_loaded_to_version_table_idx"),
        table_name="opportunity_change_audit",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_index(
        op.f("opportunity_change_audit_opportunity_id_idx"),
        table_name="opportunity_change_audit",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_table(
        "opportunity_change_audit", schema="test_200494001685262614012745264629780230410_api"
    )
    op.drop_table(
        "tfundactcat_synopsis_hist", schema="test_195495387774297757560388855302097562904_legacy"
    )
    op.drop_index(
        op.f("tfundinstr_synopsis_hist_transformed_at_idx"),
        table_name="tfundinstr_synopsis_hist",
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.drop_table(
        "tfundinstr_synopsis_hist", schema="test_195495387774297757560388855302097562904_staging"
    )
    op.drop_table(
        "tapplicanttypes_forecast_hist",
        schema="test_200494001685262614012745264629780230410_legacy",
    )
    op.drop_index(
        op.f("tinstructions_transformed_at_idx"),
        table_name="tinstructions",
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.drop_table("tinstructions", schema="test_195495387774297757560388855302097562904_staging")
    op.drop_index(
        op.f("user_opportunity_notification_log_opportunity_id_idx"),
        table_name="user_opportunity_notification_log",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_index(
        op.f("user_opportunity_notification_log_user_id_idx"),
        table_name="user_opportunity_notification_log",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_table(
        "user_opportunity_notification_log",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_index(
        op.f("competition_form_family_id_idx"),
        table_name="competition",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_index(
        op.f("competition_legacy_competition_id_idx"),
        table_name="competition",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_index(
        op.f("competition_opportunity_id_idx"),
        table_name="competition",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_table("competition", schema="test_200494001685262614012745264629780230410_api")
    op.drop_table("agency_contact_info", schema="test_158415535871585582889006515973580025243_api")
    op.drop_table("login_gov_state", schema="test_158415535871585582889006515973580025243_api")
    op.drop_index(
        op.f("current_opportunity_summary_opportunity_id_idx"),
        table_name="current_opportunity_summary",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_index(
        op.f("current_opportunity_summary_opportunity_status_id_idx"),
        table_name="current_opportunity_summary",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_index(
        op.f("current_opportunity_summary_opportunity_summary_id_idx"),
        table_name="current_opportunity_summary",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_table(
        "current_opportunity_summary", schema="test_158415535871585582889006515973580025243_api"
    )
    op.drop_table(
        "lk_opportunity_status", schema="test_200494001685262614012745264629780230410_api"
    )
    op.drop_table("opportunity_version", schema="test_158415535871585582889006515973580025243_api")
    op.drop_index(
        op.f("tfundinstr_forecast_transformed_at_idx"),
        table_name="tfundinstr_forecast",
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.drop_table(
        "tfundinstr_forecast", schema="test_158415535871585582889006515973580025243_staging"
    )
    op.drop_index(
        op.f("form_legacy_form_id_idx"),
        table_name="form",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_table("form", schema="test_108608949803588358968494026131317405857_api")
    op.drop_index(
        op.f("user_notification_log_user_id_idx"),
        table_name="user_notification_log",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_table(
        "user_notification_log", schema="test_195495387774297757560388855302097562904_api"
    )
    op.drop_table(
        "tfundinstr_forecast", schema="test_195495387774297757560388855302097562904_legacy"
    )
    op.drop_table(
        "tfundinstr_synopsis_hist", schema="test_200494001685262614012745264629780230410_legacy"
    )
    op.drop_table("tinstructions", schema="test_200494001685262614012745264629780230410_legacy")
    op.drop_table("tuser_account", schema="test_195495387774297757560388855302097562904_legacy")
    op.drop_table(
        "lk_funding_instrument", schema="test_108608949803588358968494026131317405857_api"
    )
    op.drop_table("lk_applicant_type", schema="test_108608949803588358968494026131317405857_api")
    op.drop_index(
        op.f("opportunity_agency_code_idx"),
        table_name="opportunity",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_index(
        op.f("opportunity_is_draft_idx"),
        table_name="opportunity",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_index(
        op.f("opportunity_legacy_opportunity_id_idx"),
        table_name="opportunity",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_index(
        op.f("opportunity_opportunity_category_id_idx"),
        table_name="opportunity",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_index(
        op.f("opportunity_opportunity_title_idx"),
        table_name="opportunity",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_table("opportunity", schema="test_158415535871585582889006515973580025243_api")
    op.drop_index(
        op.f("application_user_application_id_idx"),
        table_name="application_user",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_index(
        op.f("application_user_user_id_idx"),
        table_name="application_user",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_table("application_user", schema="test_158415535871585582889006515973580025243_api")
    op.drop_table(
        "short_lived_internal_token", schema="test_195495387774297757560388855302097562904_api"
    )
    op.drop_table("agency_contact_info", schema="test_200494001685262614012745264629780230410_api")
    op.drop_index(
        op.f("tsubscription_opportunity_transformed_at_idx"),
        table_name="tsubscription_opportunity",
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.drop_table(
        "tsubscription_opportunity", schema="test_200494001685262614012745264629780230410_staging"
    )
    op.drop_table(
        "link_competition_open_to_applicant",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_index(
        op.f("current_opportunity_summary_opportunity_id_idx"),
        table_name="current_opportunity_summary",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_index(
        op.f("current_opportunity_summary_opportunity_status_id_idx"),
        table_name="current_opportunity_summary",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_index(
        op.f("current_opportunity_summary_opportunity_summary_id_idx"),
        table_name="current_opportunity_summary",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_table(
        "current_opportunity_summary", schema="test_200494001685262614012745264629780230410_api"
    )
    op.drop_table(
        "tapplicanttypes_synopsis", schema="test_108608949803588358968494026131317405857_legacy"
    )
    op.drop_index(
        op.f("topportunity_cfda_transformed_at_idx"),
        table_name="topportunity_cfda",
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.drop_table(
        "topportunity_cfda", schema="test_195495387774297757560388855302097562904_staging"
    )
    op.drop_table(
        "lk_competition_open_to_applicant",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_table(
        "tsubscription_search", schema="test_195495387774297757560388855302097562904_legacy"
    )
    op.drop_table("tforecast", schema="test_195495387774297757560388855302097562904_legacy")
    op.drop_table("topportunity_cfda", schema="test_200494001685262614012745264629780230410_legacy")
    op.drop_table(
        "tapplicanttypes_synopsis", schema="test_158415535871585582889006515973580025243_legacy"
    )
    op.drop_index(
        op.f("tforecast_hist_transformed_at_idx"),
        table_name="tforecast_hist",
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.drop_table("tforecast_hist", schema="test_108608949803588358968494026131317405857_staging")
    op.drop_table("tcompetition", schema="test_195495387774297757560388855302097562904_legacy")
    op.drop_table(
        "sam_gov_entity_import_type", schema="test_200494001685262614012745264629780230410_api"
    )
    op.drop_index(
        op.f("tfundactcat_forecast_hist_transformed_at_idx"),
        table_name="tfundactcat_forecast_hist",
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.drop_table(
        "tfundactcat_forecast_hist", schema="test_200494001685262614012745264629780230410_staging"
    )
    op.drop_index(
        op.f("tsubscription_opportunity_transformed_at_idx"),
        table_name="tsubscription_opportunity",
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.drop_table(
        "tsubscription_opportunity", schema="test_195495387774297757560388855302097562904_staging"
    )
    op.drop_table(
        "lk_sam_gov_import_type", schema="test_108608949803588358968494026131317405857_api"
    )
    op.drop_index(
        op.f("link_opportunity_summary_funding_category_funding_categ_17a0"),
        table_name="link_opportunity_summary_funding_category",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_index(
        op.f("link_opportunity_summary_funding_category_opportunity_s_9f79"),
        table_name="link_opportunity_summary_funding_category",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_table(
        "link_opportunity_summary_funding_category",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_table("topportunity", schema="test_108608949803588358968494026131317405857_legacy")
    op.drop_index(
        op.f("link_external_user_email_idx"),
        table_name="link_external_user",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_index(
        op.f("link_external_user_external_user_id_idx"),
        table_name="link_external_user",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_index(
        op.f("link_external_user_external_user_type_id_idx"),
        table_name="link_external_user",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_index(
        op.f("link_external_user_user_id_idx"),
        table_name="link_external_user",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_table("link_external_user", schema="test_108608949803588358968494026131317405857_api")
    op.drop_table("lk_form_family", schema="test_200494001685262614012745264629780230410_api")
    op.drop_index(
        op.f("form_legacy_form_id_idx"),
        table_name="form",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_table("form", schema="test_158415535871585582889006515973580025243_api")
    op.drop_index(
        op.f("tgroups_transformed_at_idx"),
        table_name="tgroups",
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.drop_table("tgroups", schema="test_200494001685262614012745264629780230410_staging")
    op.drop_index(
        op.f("tfundinstr_forecast_hist_transformed_at_idx"),
        table_name="tfundinstr_forecast_hist",
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.drop_table(
        "tfundinstr_forecast_hist", schema="test_195495387774297757560388855302097562904_staging"
    )
    op.drop_table(
        "lk_funding_instrument", schema="test_158415535871585582889006515973580025243_api"
    )
    op.drop_table("lk_applicant_type", schema="test_158415535871585582889006515973580025243_api")
    op.drop_index(
        op.f("opportunity_attachment_legacy_attachment_id_idx"),
        table_name="opportunity_attachment",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_index(
        op.f("opportunity_attachment_opportunity_id_idx"),
        table_name="opportunity_attachment",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_table(
        "opportunity_attachment", schema="test_200494001685262614012745264629780230410_api"
    )
    op.drop_index(
        op.f("tfundactcat_synopsis_transformed_at_idx"),
        table_name="tfundactcat_synopsis",
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.drop_table(
        "tfundactcat_synopsis", schema="test_200494001685262614012745264629780230410_staging"
    )
    op.drop_table(
        "tuser_account_mapper", schema="test_158415535871585582889006515973580025243_legacy"
    )
    op.drop_table("topportunity", schema="test_158415535871585582889006515973580025243_legacy")
    op.drop_index(
        op.f("user_saved_search_user_id_idx"),
        table_name="user_saved_search",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_table("user_saved_search", schema="test_158415535871585582889006515973580025243_api")
    op.drop_index(
        op.f("tsynopsis_transformed_at_idx"),
        table_name="tsynopsis",
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.drop_table("tsynopsis", schema="test_195495387774297757560388855302097562904_staging")
    op.drop_table(
        "tsynopsisattachment", schema="test_158415535871585582889006515973580025243_legacy"
    )
    op.drop_table(
        "tfundinstr_forecast_hist", schema="test_200494001685262614012745264629780230410_legacy"
    )
    op.drop_index(
        op.f("tforecast_transformed_at_idx"),
        table_name="tforecast",
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.drop_table("tforecast", schema="test_200494001685262614012745264629780230410_staging")
    op.drop_index(
        op.f("agency_agency_code_idx"),
        table_name="agency",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_table("agency", schema="test_108608949803588358968494026131317405857_api")
    op.drop_table("lk_extract_type", schema="test_200494001685262614012745264629780230410_api")
    op.drop_index(
        op.f("tgroups_transformed_at_idx"),
        table_name="tgroups",
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.drop_table("tgroups", schema="test_195495387774297757560388855302097562904_staging")
    op.drop_table("lk_job_status", schema="test_108608949803588358968494026131317405857_api")
    op.drop_table("tsynopsis", schema="test_200494001685262614012745264629780230410_legacy")
    op.drop_index(
        op.f("link_opportunity_summary_applicant_type_applicant_type_id_idx"),
        table_name="link_opportunity_summary_applicant_type",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_index(
        op.f("link_opportunity_summary_applicant_type_opportunity_sum_fee2"),
        table_name="link_opportunity_summary_applicant_type",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_table(
        "link_opportunity_summary_applicant_type",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_index(
        op.f("tfundactcat_synopsis_transformed_at_idx"),
        table_name="tfundactcat_synopsis",
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.drop_table(
        "tfundactcat_synopsis", schema="test_195495387774297757560388855302097562904_staging"
    )
    op.drop_index(
        op.f("user_saved_search_user_id_idx"),
        table_name="user_saved_search",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_table("user_saved_search", schema="test_200494001685262614012745264629780230410_api")
    op.drop_index(
        op.f("organization_user_organization_id_idx"),
        table_name="organization_user",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_index(
        op.f("organization_user_user_id_idx"),
        table_name="organization_user",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_table("organization_user", schema="test_200494001685262614012745264629780230410_api")
    op.drop_table("tgroups", schema="test_200494001685262614012745264629780230410_legacy")
    op.drop_index(
        op.f("opportunity_assistance_listing_legacy_opportunity_assis_2774"),
        table_name="opportunity_assistance_listing",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_index(
        op.f("opportunity_assistance_listing_opportunity_id_idx"),
        table_name="opportunity_assistance_listing",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_table(
        "opportunity_assistance_listing", schema="test_200494001685262614012745264629780230410_api"
    )
    op.drop_index(
        op.f("topportunity_cfda_transformed_at_idx"),
        table_name="topportunity_cfda",
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.drop_table(
        "topportunity_cfda", schema="test_108608949803588358968494026131317405857_staging"
    )
    op.drop_table(
        "lk_sam_gov_import_type", schema="test_158415535871585582889006515973580025243_api"
    )
    op.drop_table(
        "tfundinstr_forecast", schema="test_108608949803588358968494026131317405857_legacy"
    )
    op.drop_table(
        "tfundactcat_synopsis_hist", schema="test_158415535871585582889006515973580025243_legacy"
    )
    op.drop_index(
        op.f("tapplicanttypes_synopsis_hist_transformed_at_idx"),
        table_name="tapplicanttypes_synopsis_hist",
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.drop_table(
        "tapplicanttypes_synopsis_hist",
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.drop_index(
        op.f("link_opportunity_summary_funding_instrument_funding_ins_94c9"),
        table_name="link_opportunity_summary_funding_instrument",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_index(
        op.f("link_opportunity_summary_funding_instrument_opportunity_4597"),
        table_name="link_opportunity_summary_funding_instrument",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_table(
        "link_opportunity_summary_funding_instrument",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_index(
        op.f("link_opportunity_summary_funding_category_funding_categ_17a0"),
        table_name="link_opportunity_summary_funding_category",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_index(
        op.f("link_opportunity_summary_funding_category_opportunity_s_9f79"),
        table_name="link_opportunity_summary_funding_category",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_table(
        "link_opportunity_summary_funding_category",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_table(
        "competition_instruction", schema="test_108608949803588358968494026131317405857_api"
    )
    op.drop_index(
        op.f("link_external_user_email_idx"),
        table_name="link_external_user",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_index(
        op.f("link_external_user_external_user_id_idx"),
        table_name="link_external_user",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_index(
        op.f("link_external_user_external_user_type_id_idx"),
        table_name="link_external_user",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_index(
        op.f("link_external_user_user_id_idx"),
        table_name="link_external_user",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_table("link_external_user", schema="test_158415535871585582889006515973580025243_api")
    op.drop_table(
        "lk_application_status", schema="test_195495387774297757560388855302097562904_api"
    )
    op.drop_table("organization", schema="test_200494001685262614012745264629780230410_api")
    op.drop_table(
        "tfundinstr_forecast", schema="test_158415535871585582889006515973580025243_legacy"
    )
    op.drop_table("tuser_account", schema="test_158415535871585582889006515973580025243_legacy")
    op.drop_index(
        op.f("tapplicanttypes_forecast_transformed_at_idx"),
        table_name="tapplicanttypes_forecast",
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.drop_table(
        "tapplicanttypes_forecast", schema="test_195495387774297757560388855302097562904_staging"
    )
    op.drop_index(
        op.f("tfundinstr_synopsis_transformed_at_idx"),
        table_name="tfundinstr_synopsis",
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.drop_table(
        "tfundinstr_synopsis", schema="test_195495387774297757560388855302097562904_staging"
    )
    op.drop_index(
        op.f("tfundactcat_forecast_transformed_at_idx"),
        table_name="tfundactcat_forecast",
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.drop_table(
        "tfundactcat_forecast", schema="test_200494001685262614012745264629780230410_staging"
    )
    op.drop_index(
        op.f("tsubscription_opportunity_transformed_at_idx"),
        table_name="tsubscription_opportunity",
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.drop_table(
        "tsubscription_opportunity", schema="test_108608949803588358968494026131317405857_staging"
    )
    op.drop_index(
        op.f("agency_agency_code_idx"),
        table_name="agency",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_table("agency", schema="test_158415535871585582889006515973580025243_api")
    op.drop_table("form_instruction", schema="test_200494001685262614012745264629780230410_api")
    op.drop_table(
        "tapplicanttypes_forecast", schema="test_200494001685262614012745264629780230410_legacy"
    )
    op.drop_table(
        "tfundinstr_synopsis", schema="test_200494001685262614012745264629780230410_legacy"
    )
    op.drop_table(
        "user_saved_opportunity", schema="test_158415535871585582889006515973580025243_api"
    )
    op.drop_table("user", schema="test_195495387774297757560388855302097562904_api")
    op.drop_table(
        "link_agency_download_file_type", schema="test_108608949803588358968494026131317405857_api"
    )
    op.drop_table(
        "application_attachment", schema="test_108608949803588358968494026131317405857_api"
    )
    op.drop_table("lk_job_status", schema="test_158415535871585582889006515973580025243_api")
    op.drop_table(
        "lk_sam_gov_processing_status", schema="test_158415535871585582889006515973580025243_api"
    )
    op.drop_index(
        op.f("sam_gov_entity_ebiz_poc_email_idx"),
        table_name="sam_gov_entity",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_index(
        op.f("sam_gov_entity_uei_idx"),
        table_name="sam_gov_entity",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_table("sam_gov_entity", schema="test_108608949803588358968494026131317405857_api")
    op.drop_index(
        op.f("tforecast_hist_transformed_at_idx"),
        table_name="tforecast_hist",
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.drop_table("tforecast_hist", schema="test_158415535871585582889006515973580025243_staging")
    op.drop_table("job_log", schema="test_195495387774297757560388855302097562904_api")
    op.drop_index(
        op.f("tfundactcat_forecast_hist_transformed_at_idx"),
        table_name="tfundactcat_forecast_hist",
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.drop_table(
        "tfundactcat_forecast_hist", schema="test_108608949803588358968494026131317405857_staging"
    )
    op.drop_table("application_form", schema="test_200494001685262614012745264629780230410_api")
    op.drop_index(
        op.f("tfundactcat_forecast_transformed_at_idx"),
        table_name="tfundactcat_forecast",
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.drop_table(
        "tfundactcat_forecast", schema="test_195495387774297757560388855302097562904_staging"
    )
    op.drop_index(
        op.f("opportunity_summary_legacy_opportunity_id_idx"),
        table_name="opportunity_summary",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_index(
        op.f("opportunity_summary_opportunity_id_idx"),
        table_name="opportunity_summary",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_table("opportunity_summary", schema="test_108608949803588358968494026131317405857_api")
    op.drop_index(
        op.f("competition_form_competition_id_idx"),
        table_name="competition_form",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_table("competition_form", schema="test_195495387774297757560388855302097562904_api")
    op.drop_table(
        "lk_agency_submission_notification_setting",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_index(
        op.f("application_competition_id_idx"),
        table_name="application",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_table("application", schema="test_195495387774297757560388855302097562904_api")
    op.drop_table("lk_funding_category", schema="test_195495387774297757560388855302097562904_api")
    op.drop_table(
        "user_saved_opportunity", schema="test_200494001685262614012745264629780230410_api"
    )
    op.drop_table(
        "tfundactcat_forecast", schema="test_200494001685262614012745264629780230410_legacy"
    )
    op.drop_index(
        op.f("tgroups_transformed_at_idx"),
        table_name="tgroups",
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.drop_table("tgroups", schema="test_108608949803588358968494026131317405857_staging")
    op.drop_index(
        op.f("sam_extract_file_extract_type_id_idx"),
        table_name="sam_extract_file",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_index(
        op.f("sam_extract_file_processing_status_id_idx"),
        table_name="sam_extract_file",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_table("sam_extract_file", schema="test_108608949803588358968494026131317405857_api")
    op.drop_table(
        "competition_instruction", schema="test_158415535871585582889006515973580025243_api"
    )
    op.drop_table(
        "lk_sam_gov_processing_status", schema="test_200494001685262614012745264629780230410_api"
    )
    op.drop_index(
        op.f("tapplicanttypes_forecast_hist_transformed_at_idx"),
        table_name="tapplicanttypes_forecast_hist",
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.drop_table(
        "tapplicanttypes_forecast_hist",
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.drop_index(
        op.f("opportunity_change_audit_is_loaded_to_version_table_idx"),
        table_name="opportunity_change_audit",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_index(
        op.f("opportunity_change_audit_opportunity_id_idx"),
        table_name="opportunity_change_audit",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_table(
        "opportunity_change_audit", schema="test_195495387774297757560388855302097562904_api"
    )
    op.drop_index(
        op.f("tfundactcat_synopsis_transformed_at_idx"),
        table_name="tfundactcat_synopsis",
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.drop_table(
        "tfundactcat_synopsis", schema="test_108608949803588358968494026131317405857_staging"
    )
    op.drop_index(
        op.f("user_opportunity_notification_log_opportunity_id_idx"),
        table_name="user_opportunity_notification_log",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_index(
        op.f("user_opportunity_notification_log_user_id_idx"),
        table_name="user_opportunity_notification_log",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_table(
        "user_opportunity_notification_log",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_index(
        op.f("user_opportunity_notification_log_opportunity_id_idx"),
        table_name="user_opportunity_notification_log",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_index(
        op.f("user_opportunity_notification_log_user_id_idx"),
        table_name="user_opportunity_notification_log",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_table(
        "user_opportunity_notification_log",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_index(
        op.f("competition_form_family_id_idx"),
        table_name="competition",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_index(
        op.f("competition_legacy_competition_id_idx"),
        table_name="competition",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_index(
        op.f("competition_opportunity_id_idx"),
        table_name="competition",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_table("competition", schema="test_195495387774297757560388855302097562904_api")
    op.drop_table("topportunity", schema="test_195495387774297757560388855302097562904_legacy")
    op.drop_table(
        "lk_opportunity_status", schema="test_195495387774297757560388855302097562904_api"
    )
    op.drop_index(
        op.f("tfundinstr_synopsis_hist_transformed_at_idx"),
        table_name="tfundinstr_synopsis_hist",
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.drop_table(
        "tfundinstr_synopsis_hist", schema="test_158415535871585582889006515973580025243_staging"
    )
    op.drop_table(
        "lk_opportunity_category", schema="test_200494001685262614012745264629780230410_api"
    )
    op.drop_table(
        "lk_external_user_type", schema="test_195495387774297757560388855302097562904_api"
    )
    op.drop_index(
        op.f("tinstructions_transformed_at_idx"),
        table_name="tinstructions",
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.drop_table("tinstructions", schema="test_158415535871585582889006515973580025243_staging")
    op.drop_index(
        op.f("tsynopsis_hist_transformed_at_idx"),
        table_name="tsynopsis_hist",
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.drop_table("tsynopsis_hist", schema="test_200494001685262614012745264629780230410_staging")
    op.drop_index(
        op.f("tforecast_transformed_at_idx"),
        table_name="tforecast",
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.drop_table("tforecast", schema="test_108608949803588358968494026131317405857_staging")
    op.drop_table("tinstructions", schema="test_195495387774297757560388855302097562904_legacy")
    op.drop_index(
        op.f("tapplicanttypes_synopsis_transformed_at_idx"),
        table_name="tapplicanttypes_synopsis",
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.drop_table(
        "tapplicanttypes_synopsis", schema="test_200494001685262614012745264629780230410_staging"
    )
    op.drop_index(
        op.f("suppressed_email_email_idx"),
        table_name="suppressed_email",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_index(
        op.f("suppressed_email_last_update_time_idx"),
        table_name="suppressed_email",
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.drop_table("suppressed_email", schema="test_200494001685262614012745264629780230410_api")
    op.drop_table(
        "application_submission", schema="test_108608949803588358968494026131317405857_api"
    )
    op.drop_table(
        "link_agency_download_file_type", schema="test_158415535871585582889006515973580025243_api"
    )
    op.drop_table("user_token_session", schema="test_108608949803588358968494026131317405857_api")
    op.drop_table(
        "application_attachment", schema="test_158415535871585582889006515973580025243_api"
    )
    op.drop_table(
        "competition_assistance_listing", schema="test_108608949803588358968494026131317405857_api"
    )
    op.drop_table("agency_contact_info", schema="test_195495387774297757560388855302097562904_api")
    op.drop_index(
        op.f("current_opportunity_summary_opportunity_id_idx"),
        table_name="current_opportunity_summary",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_index(
        op.f("current_opportunity_summary_opportunity_status_id_idx"),
        table_name="current_opportunity_summary",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_index(
        op.f("current_opportunity_summary_opportunity_summary_id_idx"),
        table_name="current_opportunity_summary",
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_table(
        "current_opportunity_summary", schema="test_195495387774297757560388855302097562904_api"
    )
    op.drop_table(
        "tapplicanttypes_synopsis_hist",
        schema="test_108608949803588358968494026131317405857_legacy",
    )
    op.drop_index(
        op.f("tsynopsis_hist_transformed_at_idx"),
        table_name="tsynopsis_hist",
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.drop_table("tsynopsis_hist", schema="test_195495387774297757560388855302097562904_staging")
    op.drop_index(
        op.f("topportunity_cfda_transformed_at_idx"),
        table_name="topportunity_cfda",
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.drop_table(
        "topportunity_cfda", schema="test_158415535871585582889006515973580025243_staging"
    )
    op.drop_table(
        "lk_agency_submission_notification_setting",
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.drop_index(
        op.f("tuser_account_mapper_transformed_at_idx"),
        table_name="tuser_account_mapper",
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.drop_table(
        "tuser_account_mapper", schema="test_200494001685262614012745264629780230410_staging"
    )
    op.drop_index(
        op.f("topportunity_transformed_at_idx"),
        table_name="topportunity",
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.drop_table("topportunity", schema="test_200494001685262614012745264629780230410_staging")
    op.drop_table("tsynopsis_hist", schema="test_200494001685262614012745264629780230410_legacy")
    op.drop_index(
        op.f("user_notification_log_user_id_idx"),
        table_name="user_notification_log",
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.drop_table(
        "user_notification_log", schema="test_108608949803588358968494026131317405857_api"
    )
    op.drop_table(
        "lk_external_user_type", schema="test_200494001685262614012745264629780230410_api"
    )
    op.drop_table(
        "sam_gov_entity_import_type", schema="test_195495387774297757560388855302097562904_api"
    )
    op.drop_table(
        "tapplicanttypes_synopsis_hist",
        schema="test_158415535871585582889006515973580025243_legacy",
    )
    op.drop_index(
        op.f("tsynopsisattachment_transformed_at_idx"),
        table_name="tsynopsisattachment",
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.drop_table(
        "tsynopsisattachment", schema="test_200494001685262614012745264629780230410_staging"
    )
    op.drop_table(
        "lk_agency_download_file_type", schema="test_200494001685262614012745264629780230410_api"
    )
    op.drop_index(
        op.f("tfundactcat_forecast_transformed_at_idx"),
        table_name="tfundactcat_forecast",
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.drop_table(
        "tfundactcat_forecast", schema="test_108608949803588358968494026131317405857_staging"
    )
    op.drop_table("extract_metadata", schema="test_200494001685262614012745264629780230410_api")
    op.drop_index(
        op.f("tsubscription_opportunity_transformed_at_idx"),
        table_name="tsubscription_opportunity",
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.drop_table(
        "tsubscription_opportunity", schema="test_158415535871585582889006515973580025243_staging"
    )
    op.drop_index(
        op.f("tsubscription_transformed_at_idx"),
        table_name="tsubscription",
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.drop_table("tsubscription", schema="test_200494001685262614012745264629780230410_staging")
    op.drop_table(
        "short_lived_internal_token", schema="test_108608949803588358968494026131317405857_api"
    )
    op.drop_table("lk_form_family", schema="test_195495387774297757560388855302097562904_api")
    op.drop_table("login_gov_state", schema="test_200494001685262614012745264629780230410_api")
    op.drop_table("opportunity_version", schema="test_200494001685262614012745264629780230410_api")
    op.drop_table(
        "application_submission", schema="test_158415535871585582889006515973580025243_api"
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "application_submission",
        sa.Column("application_submission_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("application_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("file_location", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_size_bytes", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["application_id"],
            ["test_158415535871585582889006515973580025243_api.application.application_id"],
            name=op.f("application_submission_application_id_application_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "application_submission_id", name=op.f("application_submission_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "opportunity_version",
        sa.Column("opportunity_version_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "opportunity_data",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_200494001685262614012745264629780230410_api.opportunity.opportunity_id"],
            name=op.f("opportunity_version_opportunity_id_opportunity_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_version_id", "opportunity_id", name=op.f("opportunity_version_pkey")
        ),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "login_gov_state",
        sa.Column("login_gov_state_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("nonce", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("login_gov_state_id", name=op.f("login_gov_state_pkey")),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "lk_form_family",
        sa.Column(
            "form_family_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_195495387774297757560388855302097562904_api.lk_form_family_form_family_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("form_family_id", name="lk_form_family_pkey"),
        schema="test_195495387774297757560388855302097562904_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "short_lived_internal_token",
        sa.Column("short_lived_internal_token_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "expires_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("is_valid", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "short_lived_internal_token_id", name=op.f("short_lived_internal_token_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "tsubscription",
        sa.Column("subscription_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("user_account_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("newsletters", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("alerts", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("all_new_opps", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("opportunities", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("saved_searches", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_upd_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("subscription_id", name=op.f("tsubscription_pkey")),
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_index(
        op.f("tsubscription_transformed_at_idx"),
        "tsubscription",
        ["transformed_at"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_table(
        "tsubscription_opportunity",
        sa.Column("subscription_opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("subscription_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_opp_deleted", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_upd_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "subscription_opportunity_id", name=op.f("tsubscription_opportunity_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_index(
        op.f("tsubscription_opportunity_transformed_at_idx"),
        "tsubscription_opportunity",
        ["transformed_at"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_table(
        "extract_metadata",
        sa.Column("extract_metadata_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("extract_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("file_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_path", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_size_bytes", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["extract_type_id"],
            ["test_200494001685262614012745264629780230410_api.lk_extract_type.extract_type_id"],
            name=op.f("extract_metadata_extract_type_id_lk_extract_type_fkey"),
        ),
        sa.PrimaryKeyConstraint("extract_metadata_id", name=op.f("extract_metadata_pkey")),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "tfundactcat_forecast",
        sa.Column("fac_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_frcst_id", "fac_id", "opportunity_id", name=op.f("tfundactcat_forecast_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_index(
        op.f("tfundactcat_forecast_transformed_at_idx"),
        "tfundactcat_forecast",
        ["transformed_at"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_table(
        "lk_agency_download_file_type",
        sa.Column(
            "agency_download_file_type_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_200494001685262614012745264629780230410_api.lk_agency_download_file_type_agency_download_file_type_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "agency_download_file_type_id", name="lk_agency_download_file_type_pkey"
        ),
        schema="test_200494001685262614012745264629780230410_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "tsynopsisattachment",
        sa.Column("syn_att_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("att_revision_number", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("att_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("mime_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("file_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("file_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("file_lob", postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column("file_lob_size", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("syn_att_folder_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("syn_att_id", name=op.f("tsynopsisattachment_pkey")),
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_index(
        op.f("tsynopsisattachment_transformed_at_idx"),
        "tsynopsisattachment",
        ["transformed_at"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_table(
        "tapplicanttypes_synopsis_hist",
        sa.Column("at_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_syn_id",
            "at_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tapplicanttypes_synopsis_hist_pkey"),
        ),
        schema="test_158415535871585582889006515973580025243_legacy",
    )
    op.create_table(
        "sam_gov_entity_import_type",
        sa.Column("sam_gov_entity_import_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("sam_gov_entity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("sam_gov_import_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["sam_gov_entity_id"],
            ["test_195495387774297757560388855302097562904_api.sam_gov_entity.sam_gov_entity_id"],
            name=op.f("sam_gov_entity_import_type_sam_gov_entity_id_sam_gov_en_40a2"),
        ),
        sa.ForeignKeyConstraint(
            ["sam_gov_import_type_id"],
            [
                "test_195495387774297757560388855302097562904_api.lk_sam_gov_import_type.sam_gov_import_type_id"
            ],
            name=op.f("sam_gov_entity_import_type_sam_gov_import_type_id_lk_sa_1bd4"),
        ),
        sa.PrimaryKeyConstraint(
            "sam_gov_entity_import_id", name=op.f("sam_gov_entity_import_type_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "lk_external_user_type",
        sa.Column(
            "external_user_type_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_200494001685262614012745264629780230410_api.lk_external_user_type_external_user_type_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("external_user_type_id", name="lk_external_user_type_pkey"),
        schema="test_200494001685262614012745264629780230410_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "user_notification_log",
        sa.Column("user_notification_log_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("notification_reason", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("notification_sent", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_108608949803588358968494026131317405857_api.user.user_id"],
            name=op.f("user_notification_log_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "user_notification_log_id", name=op.f("user_notification_log_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("user_notification_log_user_id_idx"),
        "user_notification_log",
        ["user_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "tsynopsis_hist",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "response_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "unarchive_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("syn_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_addr_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_contact_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("a_sa_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("action_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "action_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "opportunity_id", "revision_number", name=op.f("tsynopsis_hist_pkey")
        ),
        schema="test_200494001685262614012745264629780230410_legacy",
    )
    op.create_table(
        "topportunity",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("oppnumber", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("opptitle", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("owningagency", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("listed", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oppcategory", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("initial_opportunity_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modified_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("flag_2006", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("category_explanation", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_draft", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("topportunity_pkey")),
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_index(
        op.f("topportunity_transformed_at_idx"),
        "topportunity",
        ["transformed_at"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_table(
        "tuser_account_mapper",
        sa.Column("user_account_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("ext_user_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("ext_issuer", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("ext_subject", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "last_auth_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("source_type", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "user_account_id", "source_type", name=op.f("tuser_account_mapper_pkey")
        ),
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_index(
        op.f("tuser_account_mapper_transformed_at_idx"),
        "tuser_account_mapper",
        ["transformed_at"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_table(
        "lk_agency_submission_notification_setting",
        sa.Column(
            "agency_submission_notification_setting_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_158415535871585582889006515973580025243_api.lk_agency_submission_notifica_agency_submission_notificatio_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "agency_submission_notification_setting_id",
            name="lk_agency_submission_notification_setting_pkey",
        ),
        schema="test_158415535871585582889006515973580025243_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "topportunity_cfda",
        sa.Column("opp_cfda_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("cfdanumber", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("programtitle", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("origtoppid", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("oppidcfdanum", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("origoppnum", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opp_cfda_id", name=op.f("topportunity_cfda_pkey")),
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_index(
        op.f("topportunity_cfda_transformed_at_idx"),
        "topportunity_cfda",
        ["transformed_at"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_table(
        "tsynopsis_hist",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "response_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "unarchive_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("syn_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_addr_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_contact_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("a_sa_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("action_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "action_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "opportunity_id", "revision_number", name=op.f("tsynopsis_hist_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_index(
        op.f("tsynopsis_hist_transformed_at_idx"),
        "tsynopsis_hist",
        ["transformed_at"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_table(
        "tapplicanttypes_synopsis_hist",
        sa.Column("at_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_syn_id",
            "at_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tapplicanttypes_synopsis_hist_pkey"),
        ),
        schema="test_108608949803588358968494026131317405857_legacy",
    )
    op.create_table(
        "current_opportunity_summary",
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_summary_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_status_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_195495387774297757560388855302097562904_api.opportunity.opportunity_id"],
            name=op.f("current_opportunity_summary_opportunity_id_opportunity_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_status_id"],
            [
                "test_195495387774297757560388855302097562904_api.lk_opportunity_status.opportunity_status_id"
            ],
            name=op.f("current_opportunity_summary_opportunity_status_id_lk_op_3147"),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_summary_id"],
            [
                "test_195495387774297757560388855302097562904_api.opportunity_summary.opportunity_summary_id"
            ],
            name=op.f("current_opportunity_summary_opportunity_summary_id_oppo_8251"),
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_id",
            "opportunity_summary_id",
            name=op.f("current_opportunity_summary_pkey"),
        ),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("current_opportunity_summary_opportunity_summary_id_idx"),
        "current_opportunity_summary",
        ["opportunity_summary_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("current_opportunity_summary_opportunity_status_id_idx"),
        "current_opportunity_summary",
        ["opportunity_status_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("current_opportunity_summary_opportunity_id_idx"),
        "current_opportunity_summary",
        ["opportunity_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "agency_contact_info",
        sa.Column("agency_contact_info_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("contact_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("address_line_1", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("address_line_2", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("city", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("state", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("zip_code", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("phone_number", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("primary_email", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("secondary_email", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("agency_contact_info_id", name="agency_contact_info_pkey"),
        schema="test_195495387774297757560388855302097562904_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "competition_assistance_listing",
        sa.Column("competition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "opportunity_assistance_listing_id", sa.UUID(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["test_108608949803588358968494026131317405857_api.competition.competition_id"],
            name=op.f("competition_assistance_listing_competition_id_competition_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_assistance_listing_id"],
            [
                "test_108608949803588358968494026131317405857_api.opportunity_assistance_listing.opportunity_assistance_listing_id"
            ],
            name=op.f("competition_assistance_listing_opportunity_assistance_l_6b02"),
        ),
        sa.PrimaryKeyConstraint(
            "competition_id",
            "opportunity_assistance_listing_id",
            name=op.f("competition_assistance_listing_pkey"),
        ),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "application_attachment",
        sa.Column("application_attachment_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("application_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("file_location", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("mime_type", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_size_bytes", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["application_id"],
            ["test_158415535871585582889006515973580025243_api.application.application_id"],
            name=op.f("application_attachment_application_id_application_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_158415535871585582889006515973580025243_api.user.user_id"],
            name=op.f("application_attachment_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "application_attachment_id", name=op.f("application_attachment_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "user_token_session",
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("token_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "expires_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("is_valid", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_108608949803588358968494026131317405857_api.user.user_id"],
            name=op.f("user_token_session_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint("user_id", "token_id", name=op.f("user_token_session_pkey")),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "link_agency_download_file_type",
        sa.Column("agency_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "agency_download_file_type_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["agency_download_file_type_id"],
            [
                "test_158415535871585582889006515973580025243_api.lk_agency_download_file_type.agency_download_file_type_id"
            ],
            name=op.f("link_agency_download_file_type_agency_download_file_typ_5f33"),
        ),
        sa.ForeignKeyConstraint(
            ["agency_id"],
            ["test_158415535871585582889006515973580025243_api.agency.agency_id"],
            name=op.f("link_agency_download_file_type_agency_id_agency_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "agency_id",
            "agency_download_file_type_id",
            name=op.f("link_agency_download_file_type_pkey"),
        ),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "application_submission",
        sa.Column("application_submission_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("application_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("file_location", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_size_bytes", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["application_id"],
            ["test_108608949803588358968494026131317405857_api.application.application_id"],
            name=op.f("application_submission_application_id_application_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "application_submission_id", name=op.f("application_submission_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "suppressed_email",
        sa.Column("suppressed_email_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("email", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("reason", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_update_time",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("suppressed_email_id", name=op.f("suppressed_email_pkey")),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("suppressed_email_last_update_time_idx"),
        "suppressed_email",
        ["last_update_time"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("suppressed_email_email_idx"),
        "suppressed_email",
        ["email"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "tapplicanttypes_synopsis",
        sa.Column("at_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_syn_id", "at_id", "opportunity_id", name=op.f("tapplicanttypes_synopsis_pkey")
        ),
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_index(
        op.f("tapplicanttypes_synopsis_transformed_at_idx"),
        "tapplicanttypes_synopsis",
        ["transformed_at"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_table(
        "tinstructions",
        sa.Column("comp_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("extension", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("mimetype", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("instructions", postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column(
            "last_update", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("comp_id", name=op.f("tinstructions_pkey")),
        schema="test_195495387774297757560388855302097562904_legacy",
    )
    op.create_table(
        "tforecast",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("forecast_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_synopsis_posting_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_appl_response_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("est_appl_response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_award_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_project_start_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("fiscal_year", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("tforecast_pkey")),
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_index(
        op.f("tforecast_transformed_at_idx"),
        "tforecast",
        ["transformed_at"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_table(
        "tsynopsis_hist",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "response_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "unarchive_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("syn_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_addr_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_contact_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("a_sa_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("action_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "action_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "opportunity_id", "revision_number", name=op.f("tsynopsis_hist_pkey")
        ),
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_index(
        op.f("tsynopsis_hist_transformed_at_idx"),
        "tsynopsis_hist",
        ["transformed_at"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_table(
        "tinstructions",
        sa.Column("comp_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("extension", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("mimetype", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("instructions", postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column(
            "last_update", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("comp_id", name=op.f("tinstructions_pkey")),
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_index(
        op.f("tinstructions_transformed_at_idx"),
        "tinstructions",
        ["transformed_at"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_table(
        "lk_external_user_type",
        sa.Column(
            "external_user_type_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_195495387774297757560388855302097562904_api.lk_external_user_type_external_user_type_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("external_user_type_id", name="lk_external_user_type_pkey"),
        schema="test_195495387774297757560388855302097562904_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "lk_opportunity_category",
        sa.Column(
            "opportunity_category_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_200494001685262614012745264629780230410_api.lk_opportunity_category_opportunity_category_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("opportunity_category_id", name="lk_opportunity_category_pkey"),
        schema="test_200494001685262614012745264629780230410_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "tfundinstr_synopsis_hist",
        sa.Column("fi_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_syn_id",
            "opportunity_id",
            "fi_id",
            "revision_number",
            name=op.f("tfundinstr_synopsis_hist_pkey"),
        ),
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_index(
        op.f("tfundinstr_synopsis_hist_transformed_at_idx"),
        "tfundinstr_synopsis_hist",
        ["transformed_at"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_table(
        "lk_opportunity_status",
        sa.Column("opportunity_status_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("opportunity_status_id", name=op.f("lk_opportunity_status_pkey")),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "topportunity",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("oppnumber", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("opptitle", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("owningagency", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("listed", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oppcategory", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("initial_opportunity_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modified_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("flag_2006", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("category_explanation", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_draft", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("topportunity_pkey")),
        schema="test_195495387774297757560388855302097562904_legacy",
    )
    op.create_table(
        "competition",
        sa.Column("competition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("legacy_competition_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("public_competition_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("legacy_package_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("competition_title", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("opening_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("closing_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("grace_period", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("contact_info", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("form_family_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "opportunity_assistance_listing_id", sa.UUID(), autoincrement=False, nullable=True
        ),
        sa.Column("is_electronic_required", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("expected_application_count", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("expected_application_size_mb", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_multi_package", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("agency_download_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "is_legacy_workspace_compatible", sa.BOOLEAN(), autoincrement=False, nullable=True
        ),
        sa.Column("can_send_mail", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("is_simpler_grants_enabled", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["form_family_id"],
            ["test_195495387774297757560388855302097562904_api.lk_form_family.form_family_id"],
            name="competition_form_family_id_lk_form_family_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_assistance_listing_id"],
            [
                "test_195495387774297757560388855302097562904_api.opportunity_assistance_listing.opportunity_assistance_listing_id"
            ],
            name="competition_opportunity_assistance_listing_id_opportuni_6423",
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_195495387774297757560388855302097562904_api.opportunity.opportunity_id"],
            name="competition_opportunity_id_opportunity_fkey",
        ),
        sa.PrimaryKeyConstraint("competition_id", name="competition_pkey"),
        schema="test_195495387774297757560388855302097562904_api",
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        op.f("competition_opportunity_id_idx"),
        "competition",
        ["opportunity_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("competition_legacy_competition_id_idx"),
        "competition",
        ["legacy_competition_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("competition_form_family_id_idx"),
        "competition",
        ["form_family_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "user_opportunity_notification_log",
        sa.Column(
            "user_opportunity_notification_log_id", sa.UUID(), autoincrement=False, nullable=False
        ),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_195495387774297757560388855302097562904_api.opportunity.opportunity_id"],
            name=op.f("user_opportunity_notification_log_opportunity_id_opport_1f35"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_195495387774297757560388855302097562904_api.user.user_id"],
            name=op.f("user_opportunity_notification_log_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "user_opportunity_notification_log_id",
            name=op.f("user_opportunity_notification_log_pkey"),
        ),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("user_opportunity_notification_log_user_id_idx"),
        "user_opportunity_notification_log",
        ["user_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("user_opportunity_notification_log_opportunity_id_idx"),
        "user_opportunity_notification_log",
        ["opportunity_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "user_opportunity_notification_log",
        sa.Column(
            "user_opportunity_notification_log_id", sa.UUID(), autoincrement=False, nullable=False
        ),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_108608949803588358968494026131317405857_api.opportunity.opportunity_id"],
            name=op.f("user_opportunity_notification_log_opportunity_id_opport_1f35"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_108608949803588358968494026131317405857_api.user.user_id"],
            name=op.f("user_opportunity_notification_log_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "user_opportunity_notification_log_id",
            name=op.f("user_opportunity_notification_log_pkey"),
        ),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("user_opportunity_notification_log_user_id_idx"),
        "user_opportunity_notification_log",
        ["user_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("user_opportunity_notification_log_opportunity_id_idx"),
        "user_opportunity_notification_log",
        ["opportunity_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "tfundactcat_synopsis",
        sa.Column("fac_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_syn_id", "fac_id", "opportunity_id", name=op.f("tfundactcat_synopsis_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_index(
        op.f("tfundactcat_synopsis_transformed_at_idx"),
        "tfundactcat_synopsis",
        ["transformed_at"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_table(
        "opportunity_change_audit",
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("is_loaded_to_search", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("is_loaded_to_version_table", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_195495387774297757560388855302097562904_api.opportunity.opportunity_id"],
            name=op.f("opportunity_change_audit_opportunity_id_opportunity_fkey"),
        ),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("opportunity_change_audit_pkey")),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("opportunity_change_audit_opportunity_id_idx"),
        "opportunity_change_audit",
        ["opportunity_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("opportunity_change_audit_is_loaded_to_version_table_idx"),
        "opportunity_change_audit",
        ["is_loaded_to_version_table"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "tapplicanttypes_forecast_hist",
        sa.Column("at_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_frcst_id",
            "at_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tapplicanttypes_forecast_hist_pkey"),
        ),
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_index(
        op.f("tapplicanttypes_forecast_hist_transformed_at_idx"),
        "tapplicanttypes_forecast_hist",
        ["transformed_at"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_table(
        "lk_sam_gov_processing_status",
        sa.Column(
            "sam_gov_processing_status_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_200494001685262614012745264629780230410_api.lk_sam_gov_processing_status_sam_gov_processing_status_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "sam_gov_processing_status_id", name="lk_sam_gov_processing_status_pkey"
        ),
        schema="test_200494001685262614012745264629780230410_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "competition_instruction",
        sa.Column("competition_instruction_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("competition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("file_location", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["test_158415535871585582889006515973580025243_api.competition.competition_id"],
            name=op.f("competition_instruction_competition_id_competition_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "competition_instruction_id",
            "competition_id",
            name=op.f("competition_instruction_pkey"),
        ),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "sam_extract_file",
        sa.Column("sam_extract_file_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("extract_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("extract_date", sa.DATE(), autoincrement=False, nullable=False),
        sa.Column("filename", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("s3_path", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("processing_status_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["extract_type_id"],
            [
                "test_108608949803588358968494026131317405857_api.lk_sam_gov_extract_type.sam_gov_extract_type_id"
            ],
            name=op.f("sam_extract_file_extract_type_id_lk_sam_gov_extract_type_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["processing_status_id"],
            [
                "test_108608949803588358968494026131317405857_api.lk_sam_gov_processing_status.sam_gov_processing_status_id"
            ],
            name=op.f("sam_extract_file_processing_status_id_lk_sam_gov_proces_24d0"),
        ),
        sa.PrimaryKeyConstraint("sam_extract_file_id", name=op.f("sam_extract_file_pkey")),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("sam_extract_file_processing_status_id_idx"),
        "sam_extract_file",
        ["processing_status_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("sam_extract_file_extract_type_id_idx"),
        "sam_extract_file",
        ["extract_type_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "tgroups",
        sa.Column("keyfield", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("value", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("keyfield", name=op.f("tgroups_pkey")),
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_index(
        op.f("tgroups_transformed_at_idx"),
        "tgroups",
        ["transformed_at"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_table(
        "tfundactcat_forecast",
        sa.Column("fac_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_frcst_id", "fac_id", "opportunity_id", name=op.f("tfundactcat_forecast_pkey")
        ),
        schema="test_200494001685262614012745264629780230410_legacy",
    )
    op.create_table(
        "user_saved_opportunity",
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "last_notified_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("'2025-08-12 01:29:38.451278+00'::timestamp with time zone"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_200494001685262614012745264629780230410_api.opportunity.opportunity_id"],
            name=op.f("user_saved_opportunity_opportunity_id_opportunity_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_200494001685262614012745264629780230410_api.user.user_id"],
            name=op.f("user_saved_opportunity_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "user_id", "opportunity_id", name=op.f("user_saved_opportunity_pkey")
        ),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "lk_funding_category",
        sa.Column(
            "funding_category_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_195495387774297757560388855302097562904_api.lk_funding_category_funding_category_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("funding_category_id", name="lk_funding_category_pkey"),
        schema="test_195495387774297757560388855302097562904_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "application",
        sa.Column("application_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("competition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("application_status_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("application_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("organization_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["application_status_id"],
            [
                "test_195495387774297757560388855302097562904_api.lk_application_status.application_status_id"
            ],
            name="application_application_status_id_lk_application_status_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["test_195495387774297757560388855302097562904_api.competition.competition_id"],
            name="application_competition_id_competition_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["test_195495387774297757560388855302097562904_api.organization.organization_id"],
            name="application_organization_id_organization_fkey",
        ),
        sa.PrimaryKeyConstraint("application_id", name="application_pkey"),
        schema="test_195495387774297757560388855302097562904_api",
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        op.f("application_competition_id_idx"),
        "application",
        ["competition_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "lk_agency_submission_notification_setting",
        sa.Column(
            "agency_submission_notification_setting_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_108608949803588358968494026131317405857_api.lk_agency_submission_notifica_agency_submission_notificatio_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "agency_submission_notification_setting_id",
            name="lk_agency_submission_notification_setting_pkey",
        ),
        schema="test_108608949803588358968494026131317405857_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "competition_form",
        sa.Column("competition_form_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("competition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("form_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("is_required", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["test_195495387774297757560388855302097562904_api.competition.competition_id"],
            name="competition_form_competition_id_competition_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["form_id"],
            ["test_195495387774297757560388855302097562904_api.form.form_id"],
            name="competition_form_form_id_form_fkey",
        ),
        sa.PrimaryKeyConstraint("competition_form_id", name="competition_form_pkey"),
        sa.UniqueConstraint(
            "competition_id",
            "form_id",
            name="competition_form_competition_id_uniq",
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_195495387774297757560388855302097562904_api",
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        op.f("competition_form_competition_id_idx"),
        "competition_form",
        ["competition_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "opportunity_summary",
        sa.Column("opportunity_summary_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("legacy_opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("summary_description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_cost_sharing", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("is_forecast", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("post_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("close_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("close_date_description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("archive_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("unarchive_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("expected_number_of_awards", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "estimated_total_program_funding", sa.BIGINT(), autoincrement=False, nullable=True
        ),
        sa.Column("award_floor", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("additional_info_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("additional_info_url_description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("forecasted_post_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("forecasted_close_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column(
            "forecasted_close_date_description", sa.TEXT(), autoincrement=False, nullable=True
        ),
        sa.Column("forecasted_award_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("forecasted_project_start_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("fiscal_year", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("funding_category_description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "applicant_eligibility_description", sa.TEXT(), autoincrement=False, nullable=True
        ),
        sa.Column("agency_phone_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_contact_description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_email_address", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "agency_email_address_description", sa.TEXT(), autoincrement=False, nullable=True
        ),
        sa.Column("version_number", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("can_send_mail", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("publisher_user_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_108608949803588358968494026131317405857_api.opportunity.opportunity_id"],
            name="opportunity_summary_opportunity_id_opportunity_fkey",
        ),
        sa.PrimaryKeyConstraint("opportunity_summary_id", name="opportunity_summary_pkey"),
        sa.UniqueConstraint(
            "is_forecast",
            "opportunity_id",
            name="opportunity_summary_is_forecast_uniq",
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_108608949803588358968494026131317405857_api",
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        op.f("opportunity_summary_opportunity_id_idx"),
        "opportunity_summary",
        ["opportunity_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("opportunity_summary_legacy_opportunity_id_idx"),
        "opportunity_summary",
        ["legacy_opportunity_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "tfundactcat_forecast",
        sa.Column("fac_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_frcst_id", "fac_id", "opportunity_id", name=op.f("tfundactcat_forecast_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_index(
        op.f("tfundactcat_forecast_transformed_at_idx"),
        "tfundactcat_forecast",
        ["transformed_at"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_table(
        "application_form",
        sa.Column("application_form_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("application_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("competition_form_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "application_response",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("is_included_in_submission", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["application_id"],
            ["test_200494001685262614012745264629780230410_api.application.application_id"],
            name=op.f("application_form_application_id_application_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["competition_form_id"],
            [
                "test_200494001685262614012745264629780230410_api.competition_form.competition_form_id"
            ],
            name=op.f("application_form_competition_form_id_competition_form_fkey"),
        ),
        sa.PrimaryKeyConstraint("application_form_id", name=op.f("application_form_pkey")),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "tfundactcat_forecast_hist",
        sa.Column("fac_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_frcst_id",
            "fac_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tfundactcat_forecast_hist_pkey"),
        ),
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_index(
        op.f("tfundactcat_forecast_hist_transformed_at_idx"),
        "tfundactcat_forecast_hist",
        ["transformed_at"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_table(
        "job_log",
        sa.Column("job_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("job_type", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("job_status_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "metrics", postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["job_status_id"],
            ["test_195495387774297757560388855302097562904_api.lk_job_status.job_status_id"],
            name=op.f("job_log_job_status_id_lk_job_status_fkey"),
        ),
        sa.PrimaryKeyConstraint("job_id", name=op.f("job_log_pkey")),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "tforecast_hist",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("forecast_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_synopsis_posting_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_appl_response_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("est_appl_response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_award_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_project_start_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("fiscal_year", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("action_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "action_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "opportunity_id", "revision_number", name=op.f("tforecast_hist_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_index(
        op.f("tforecast_hist_transformed_at_idx"),
        "tforecast_hist",
        ["transformed_at"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_table(
        "sam_gov_entity",
        sa.Column("sam_gov_entity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("uei", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("legal_business_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("expiration_date", sa.DATE(), autoincrement=False, nullable=False),
        sa.Column("initial_registration_date", sa.DATE(), autoincrement=False, nullable=False),
        sa.Column("last_update_date", sa.DATE(), autoincrement=False, nullable=False),
        sa.Column("ebiz_poc_email", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("ebiz_poc_first_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("ebiz_poc_last_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("has_debt_subject_to_offset", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("has_exclusion_status", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("eft_indicator", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_inactive", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("inactivated_at", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("sam_gov_entity_id", name="sam_gov_entity_pkey"),
        schema="test_108608949803588358968494026131317405857_api",
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        op.f("sam_gov_entity_uei_idx"),
        "sam_gov_entity",
        ["uei"],
        unique=True,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("sam_gov_entity_ebiz_poc_email_idx"),
        "sam_gov_entity",
        ["ebiz_poc_email"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "lk_sam_gov_processing_status",
        sa.Column(
            "sam_gov_processing_status_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_158415535871585582889006515973580025243_api.lk_sam_gov_processing_status_sam_gov_processing_status_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "sam_gov_processing_status_id", name="lk_sam_gov_processing_status_pkey"
        ),
        schema="test_158415535871585582889006515973580025243_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "lk_job_status",
        sa.Column(
            "job_status_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_158415535871585582889006515973580025243_api.lk_job_status_job_status_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("job_status_id", name="lk_job_status_pkey"),
        schema="test_158415535871585582889006515973580025243_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "application_attachment",
        sa.Column("application_attachment_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("application_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("file_location", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("mime_type", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_size_bytes", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["application_id"],
            ["test_108608949803588358968494026131317405857_api.application.application_id"],
            name=op.f("application_attachment_application_id_application_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_108608949803588358968494026131317405857_api.user.user_id"],
            name=op.f("application_attachment_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "application_attachment_id", name=op.f("application_attachment_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "link_agency_download_file_type",
        sa.Column("agency_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "agency_download_file_type_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["agency_download_file_type_id"],
            [
                "test_108608949803588358968494026131317405857_api.lk_agency_download_file_type.agency_download_file_type_id"
            ],
            name=op.f("link_agency_download_file_type_agency_download_file_typ_5f33"),
        ),
        sa.ForeignKeyConstraint(
            ["agency_id"],
            ["test_108608949803588358968494026131317405857_api.agency.agency_id"],
            name=op.f("link_agency_download_file_type_agency_id_agency_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "agency_id",
            "agency_download_file_type_id",
            name=op.f("link_agency_download_file_type_pkey"),
        ),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "user",
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("user_id", name="user_pkey"),
        schema="test_195495387774297757560388855302097562904_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "user_saved_opportunity",
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "last_notified_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("'2025-08-06 17:52:08.774333+00'::timestamp with time zone"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_158415535871585582889006515973580025243_api.opportunity.opportunity_id"],
            name=op.f("user_saved_opportunity_opportunity_id_opportunity_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_158415535871585582889006515973580025243_api.user.user_id"],
            name=op.f("user_saved_opportunity_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "user_id", "opportunity_id", name=op.f("user_saved_opportunity_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "tfundinstr_synopsis",
        sa.Column("fi_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_syn_id", "fi_id", "opportunity_id", name=op.f("tfundinstr_synopsis_pkey")
        ),
        schema="test_200494001685262614012745264629780230410_legacy",
    )
    op.create_table(
        "tapplicanttypes_forecast",
        sa.Column("at_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_frcst_id", "at_id", "opportunity_id", name=op.f("tapplicanttypes_forecast_pkey")
        ),
        schema="test_200494001685262614012745264629780230410_legacy",
    )
    op.create_table(
        "form_instruction",
        sa.Column("form_instruction_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("file_location", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("form_instruction_id", name="form_instruction_pkey"),
        schema="test_200494001685262614012745264629780230410_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "agency",
        sa.Column("agency_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("agency_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("sub_agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("assistance_listing_number", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "agency_submission_notification_setting_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("agency_contact_info_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("is_test_agency", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("ldap_group", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("label", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_multilevel_agency", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("is_multiproject", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "has_system_to_system_certificate", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "can_view_packages_in_grace_period", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.Column("is_image_workspace_enabled", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "is_validation_workspace_enabled", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.Column("top_level_agency_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["agency_contact_info_id"],
            [
                "test_158415535871585582889006515973580025243_api.agency_contact_info.agency_contact_info_id"
            ],
            name=op.f("agency_agency_contact_info_id_agency_contact_info_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["agency_submission_notification_setting_id"],
            [
                "test_158415535871585582889006515973580025243_api.lk_agency_submission_notification_setting.agency_submission_notification_setting_id"
            ],
            name=op.f("agency_agency_submission_notification_setting_id_lk_age_592f"),
        ),
        sa.ForeignKeyConstraint(
            ["top_level_agency_id"],
            ["test_158415535871585582889006515973580025243_api.agency.agency_id"],
            name=op.f("agency_top_level_agency_id_agency_fkey"),
        ),
        sa.PrimaryKeyConstraint("agency_id", name=op.f("agency_pkey")),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("agency_agency_code_idx"),
        "agency",
        ["agency_code"],
        unique=True,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "tsubscription_opportunity",
        sa.Column("subscription_opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("subscription_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_opp_deleted", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_upd_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "subscription_opportunity_id", name=op.f("tsubscription_opportunity_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_index(
        op.f("tsubscription_opportunity_transformed_at_idx"),
        "tsubscription_opportunity",
        ["transformed_at"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_table(
        "tfundactcat_forecast",
        sa.Column("fac_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_frcst_id", "fac_id", "opportunity_id", name=op.f("tfundactcat_forecast_pkey")
        ),
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_index(
        op.f("tfundactcat_forecast_transformed_at_idx"),
        "tfundactcat_forecast",
        ["transformed_at"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_table(
        "tfundinstr_synopsis",
        sa.Column("fi_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_syn_id", "fi_id", "opportunity_id", name=op.f("tfundinstr_synopsis_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_index(
        op.f("tfundinstr_synopsis_transformed_at_idx"),
        "tfundinstr_synopsis",
        ["transformed_at"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_table(
        "tapplicanttypes_forecast",
        sa.Column("at_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_frcst_id", "at_id", "opportunity_id", name=op.f("tapplicanttypes_forecast_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_index(
        op.f("tapplicanttypes_forecast_transformed_at_idx"),
        "tapplicanttypes_forecast",
        ["transformed_at"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_table(
        "tuser_account",
        sa.Column("user_account_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("full_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("email_address", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("phone_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("first_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("middle_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted_legacy", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_duplicate", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_active", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_email_confirm_pending", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "deactivated_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("mobile_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("user_account_id", name=op.f("tuser_account_pkey")),
        schema="test_158415535871585582889006515973580025243_legacy",
    )
    op.create_table(
        "tfundinstr_forecast",
        sa.Column("fi_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_frcst_id", "fi_id", "opportunity_id", name=op.f("tfundinstr_forecast_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_legacy",
    )
    op.create_table(
        "organization",
        sa.Column("organization_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("sam_gov_entity_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["sam_gov_entity_id"],
            ["test_200494001685262614012745264629780230410_api.sam_gov_entity.sam_gov_entity_id"],
            name="organization_sam_gov_entity_id_sam_gov_entity_fkey",
        ),
        sa.PrimaryKeyConstraint("organization_id", name="organization_pkey"),
        sa.UniqueConstraint(
            "sam_gov_entity_id",
            name="organization_sam_gov_entity_id_uniq",
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_200494001685262614012745264629780230410_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "lk_application_status",
        sa.Column(
            "application_status_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_195495387774297757560388855302097562904_api.lk_application_status_application_status_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("application_status_id", name="lk_application_status_pkey"),
        schema="test_195495387774297757560388855302097562904_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "link_external_user",
        sa.Column("link_external_user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("external_user_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("external_user_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("email", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["external_user_type_id"],
            [
                "test_158415535871585582889006515973580025243_api.lk_external_user_type.external_user_type_id"
            ],
            name=op.f("link_external_user_external_user_type_id_lk_external_us_be53"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_158415535871585582889006515973580025243_api.user.user_id"],
            name=op.f("link_external_user_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint("link_external_user_id", name=op.f("link_external_user_pkey")),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("link_external_user_user_id_idx"),
        "link_external_user",
        ["user_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("link_external_user_external_user_type_id_idx"),
        "link_external_user",
        ["external_user_type_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("link_external_user_external_user_id_idx"),
        "link_external_user",
        ["external_user_id"],
        unique=True,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("link_external_user_email_idx"),
        "link_external_user",
        ["email"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "competition_instruction",
        sa.Column("competition_instruction_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("competition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("file_location", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["test_108608949803588358968494026131317405857_api.competition.competition_id"],
            name=op.f("competition_instruction_competition_id_competition_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "competition_instruction_id",
            "competition_id",
            name=op.f("competition_instruction_pkey"),
        ),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "link_opportunity_summary_funding_category",
        sa.Column("opportunity_summary_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("funding_category_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("legacy_funding_category_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["funding_category_id"],
            [
                "test_158415535871585582889006515973580025243_api.lk_funding_category.funding_category_id"
            ],
            name=op.f("link_opportunity_summary_funding_category_funding_categ_dcd3"),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_summary_id"],
            [
                "test_158415535871585582889006515973580025243_api.opportunity_summary.opportunity_summary_id"
            ],
            name=op.f("link_opportunity_summary_funding_category_opportunity_s_5610"),
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_summary_id",
            "funding_category_id",
            name=op.f("link_opportunity_summary_funding_category_pkey"),
        ),
        sa.UniqueConstraint(
            "opportunity_summary_id",
            "legacy_funding_category_id",
            name=op.f("link_opportunity_summary_funding_category_opportunity_s_731c"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("link_opportunity_summary_funding_category_opportunity_s_9f79"),
        "link_opportunity_summary_funding_category",
        ["opportunity_summary_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("link_opportunity_summary_funding_category_funding_categ_17a0"),
        "link_opportunity_summary_funding_category",
        ["funding_category_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "link_opportunity_summary_funding_instrument",
        sa.Column("opportunity_summary_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("funding_instrument_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("legacy_funding_instrument_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["funding_instrument_id"],
            [
                "test_200494001685262614012745264629780230410_api.lk_funding_instrument.funding_instrument_id"
            ],
            name=op.f("link_opportunity_summary_funding_instrument_funding_ins_be1e"),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_summary_id"],
            [
                "test_200494001685262614012745264629780230410_api.opportunity_summary.opportunity_summary_id"
            ],
            name=op.f("link_opportunity_summary_funding_instrument_opportunity_010d"),
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_summary_id",
            "funding_instrument_id",
            name=op.f("link_opportunity_summary_funding_instrument_pkey"),
        ),
        sa.UniqueConstraint(
            "opportunity_summary_id",
            "legacy_funding_instrument_id",
            name=op.f("link_opportunity_summary_funding_instrument_opportunity_5b1c"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("link_opportunity_summary_funding_instrument_opportunity_4597"),
        "link_opportunity_summary_funding_instrument",
        ["opportunity_summary_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("link_opportunity_summary_funding_instrument_funding_ins_94c9"),
        "link_opportunity_summary_funding_instrument",
        ["funding_instrument_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "tapplicanttypes_synopsis_hist",
        sa.Column("at_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_syn_id",
            "at_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tapplicanttypes_synopsis_hist_pkey"),
        ),
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_index(
        op.f("tapplicanttypes_synopsis_hist_transformed_at_idx"),
        "tapplicanttypes_synopsis_hist",
        ["transformed_at"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_table(
        "tfundactcat_synopsis_hist",
        sa.Column("fac_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_syn_id",
            "fac_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tfundactcat_synopsis_hist_pkey"),
        ),
        schema="test_158415535871585582889006515973580025243_legacy",
    )
    op.create_table(
        "tfundinstr_forecast",
        sa.Column("fi_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_frcst_id", "fi_id", "opportunity_id", name=op.f("tfundinstr_forecast_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_legacy",
    )
    op.create_table(
        "lk_sam_gov_import_type",
        sa.Column(
            "sam_gov_import_type_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_158415535871585582889006515973580025243_api.lk_sam_gov_import_type_sam_gov_import_type_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("sam_gov_import_type_id", name="lk_sam_gov_import_type_pkey"),
        schema="test_158415535871585582889006515973580025243_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "topportunity_cfda",
        sa.Column("opp_cfda_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("cfdanumber", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("programtitle", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("origtoppid", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("oppidcfdanum", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("origoppnum", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opp_cfda_id", name=op.f("topportunity_cfda_pkey")),
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_index(
        op.f("topportunity_cfda_transformed_at_idx"),
        "topportunity_cfda",
        ["transformed_at"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_table(
        "opportunity_assistance_listing",
        sa.Column(
            "opportunity_assistance_listing_id", sa.UUID(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "legacy_opportunity_assistance_listing_id",
            sa.BIGINT(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("assistance_listing_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("program_title", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_200494001685262614012745264629780230410_api.opportunity.opportunity_id"],
            name="opportunity_assistance_listing_opportunity_id_opportunity_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_assistance_listing_id", name="opportunity_assistance_listing_pkey"
        ),
        schema="test_200494001685262614012745264629780230410_api",
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        op.f("opportunity_assistance_listing_opportunity_id_idx"),
        "opportunity_assistance_listing",
        ["opportunity_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("opportunity_assistance_listing_legacy_opportunity_assis_2774"),
        "opportunity_assistance_listing",
        ["legacy_opportunity_assistance_listing_id"],
        unique=True,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "tgroups",
        sa.Column("keyfield", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("value", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("keyfield", name=op.f("tgroups_pkey")),
        schema="test_200494001685262614012745264629780230410_legacy",
    )
    op.create_table(
        "organization_user",
        sa.Column("organization_user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("is_organization_owner", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("organization_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["test_200494001685262614012745264629780230410_api.organization.organization_id"],
            name=op.f("organization_user_organization_id_organization_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_200494001685262614012745264629780230410_api.user.user_id"],
            name=op.f("organization_user_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint("organization_user_id", name=op.f("organization_user_pkey")),
        sa.UniqueConstraint(
            "organization_id",
            "user_id",
            name=op.f("organization_user_organization_id_uniq"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("organization_user_user_id_idx"),
        "organization_user",
        ["user_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("organization_user_organization_id_idx"),
        "organization_user",
        ["organization_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "user_saved_search",
        sa.Column("saved_search_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "search_query",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_notified_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "searched_opportunity_ids",
            postgresql.ARRAY(sa.UUID()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_200494001685262614012745264629780230410_api.user.user_id"],
            name=op.f("user_saved_search_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint("saved_search_id", name=op.f("user_saved_search_pkey")),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("user_saved_search_user_id_idx"),
        "user_saved_search",
        ["user_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "tfundactcat_synopsis",
        sa.Column("fac_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_syn_id", "fac_id", "opportunity_id", name=op.f("tfundactcat_synopsis_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_index(
        op.f("tfundactcat_synopsis_transformed_at_idx"),
        "tfundactcat_synopsis",
        ["transformed_at"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_table(
        "link_opportunity_summary_applicant_type",
        sa.Column("opportunity_summary_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("applicant_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("legacy_applicant_type_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["applicant_type_id"],
            [
                "test_195495387774297757560388855302097562904_api.lk_applicant_type.applicant_type_id"
            ],
            name=op.f("link_opportunity_summary_applicant_type_applicant_type__c136"),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_summary_id"],
            [
                "test_195495387774297757560388855302097562904_api.opportunity_summary.opportunity_summary_id"
            ],
            name=op.f("link_opportunity_summary_applicant_type_opportunity_sum_f95d"),
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_summary_id",
            "applicant_type_id",
            name=op.f("link_opportunity_summary_applicant_type_pkey"),
        ),
        sa.UniqueConstraint(
            "opportunity_summary_id",
            "legacy_applicant_type_id",
            name=op.f("link_opportunity_summary_applicant_type_opportunity_sum_a7cd"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("link_opportunity_summary_applicant_type_opportunity_sum_fee2"),
        "link_opportunity_summary_applicant_type",
        ["opportunity_summary_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("link_opportunity_summary_applicant_type_applicant_type_id_idx"),
        "link_opportunity_summary_applicant_type",
        ["applicant_type_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "tsynopsis",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "response_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "unarchive_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("syn_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_addr_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_contact_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("a_sa_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("tsynopsis_pkey")),
        schema="test_200494001685262614012745264629780230410_legacy",
    )
    op.create_table(
        "lk_job_status",
        sa.Column(
            "job_status_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_108608949803588358968494026131317405857_api.lk_job_status_job_status_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("job_status_id", name="lk_job_status_pkey"),
        schema="test_108608949803588358968494026131317405857_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "tgroups",
        sa.Column("keyfield", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("value", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("keyfield", name=op.f("tgroups_pkey")),
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_index(
        op.f("tgroups_transformed_at_idx"),
        "tgroups",
        ["transformed_at"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_table(
        "lk_extract_type",
        sa.Column("extract_type_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("extract_type_id", name=op.f("lk_extract_type_pkey")),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "agency",
        sa.Column("agency_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("agency_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("sub_agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("assistance_listing_number", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "agency_submission_notification_setting_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("agency_contact_info_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("is_test_agency", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("ldap_group", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("label", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_multilevel_agency", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("is_multiproject", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "has_system_to_system_certificate", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "can_view_packages_in_grace_period", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.Column("is_image_workspace_enabled", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "is_validation_workspace_enabled", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.Column("top_level_agency_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["agency_contact_info_id"],
            [
                "test_108608949803588358968494026131317405857_api.agency_contact_info.agency_contact_info_id"
            ],
            name=op.f("agency_agency_contact_info_id_agency_contact_info_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["agency_submission_notification_setting_id"],
            [
                "test_108608949803588358968494026131317405857_api.lk_agency_submission_notification_setting.agency_submission_notification_setting_id"
            ],
            name=op.f("agency_agency_submission_notification_setting_id_lk_age_592f"),
        ),
        sa.ForeignKeyConstraint(
            ["top_level_agency_id"],
            ["test_108608949803588358968494026131317405857_api.agency.agency_id"],
            name=op.f("agency_top_level_agency_id_agency_fkey"),
        ),
        sa.PrimaryKeyConstraint("agency_id", name=op.f("agency_pkey")),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("agency_agency_code_idx"),
        "agency",
        ["agency_code"],
        unique=True,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "tforecast",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("forecast_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_synopsis_posting_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_appl_response_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("est_appl_response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_award_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_project_start_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("fiscal_year", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("tforecast_pkey")),
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_index(
        op.f("tforecast_transformed_at_idx"),
        "tforecast",
        ["transformed_at"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_table(
        "tfundinstr_forecast_hist",
        sa.Column("fi_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_frcst_id",
            "fi_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tfundinstr_forecast_hist_pkey"),
        ),
        schema="test_200494001685262614012745264629780230410_legacy",
    )
    op.create_table(
        "tsynopsisattachment",
        sa.Column("syn_att_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("att_revision_number", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("att_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("mime_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("file_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("file_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("file_lob", postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column("file_lob_size", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("syn_att_folder_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("syn_att_id", name=op.f("tsynopsisattachment_pkey")),
        schema="test_158415535871585582889006515973580025243_legacy",
    )
    op.create_table(
        "tsynopsis",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "response_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "unarchive_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("syn_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_addr_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_contact_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("a_sa_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("tsynopsis_pkey")),
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_index(
        op.f("tsynopsis_transformed_at_idx"),
        "tsynopsis",
        ["transformed_at"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_table(
        "user_saved_search",
        sa.Column("saved_search_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "search_query",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_notified_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "searched_opportunity_ids",
            postgresql.ARRAY(sa.UUID()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_158415535871585582889006515973580025243_api.user.user_id"],
            name=op.f("user_saved_search_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint("saved_search_id", name=op.f("user_saved_search_pkey")),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("user_saved_search_user_id_idx"),
        "user_saved_search",
        ["user_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "topportunity",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("oppnumber", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("opptitle", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("owningagency", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("listed", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oppcategory", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("initial_opportunity_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modified_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("flag_2006", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("category_explanation", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_draft", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("topportunity_pkey")),
        schema="test_158415535871585582889006515973580025243_legacy",
    )
    op.create_table(
        "tuser_account_mapper",
        sa.Column("user_account_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("ext_user_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("ext_issuer", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("ext_subject", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "last_auth_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("source_type", sa.TEXT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint(
            "user_account_id", "source_type", name=op.f("tuser_account_mapper_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_legacy",
    )
    op.create_table(
        "tfundactcat_synopsis",
        sa.Column("fac_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_syn_id", "fac_id", "opportunity_id", name=op.f("tfundactcat_synopsis_pkey")
        ),
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_index(
        op.f("tfundactcat_synopsis_transformed_at_idx"),
        "tfundactcat_synopsis",
        ["transformed_at"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_table(
        "opportunity_attachment",
        sa.Column("attachment_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("legacy_attachment_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("file_location", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("mime_type", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_size_bytes", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("legacy_folder_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_200494001685262614012745264629780230410_api.opportunity.opportunity_id"],
            name=op.f("opportunity_attachment_opportunity_id_opportunity_fkey"),
        ),
        sa.PrimaryKeyConstraint("attachment_id", name=op.f("opportunity_attachment_pkey")),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("opportunity_attachment_opportunity_id_idx"),
        "opportunity_attachment",
        ["opportunity_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("opportunity_attachment_legacy_attachment_id_idx"),
        "opportunity_attachment",
        ["legacy_attachment_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "lk_applicant_type",
        sa.Column(
            "applicant_type_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_158415535871585582889006515973580025243_api.lk_applicant_type_applicant_type_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("applicant_type_id", name="lk_applicant_type_pkey"),
        schema="test_158415535871585582889006515973580025243_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "lk_funding_instrument",
        sa.Column(
            "funding_instrument_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_158415535871585582889006515973580025243_api.lk_funding_instrument_funding_instrument_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("funding_instrument_id", name="lk_funding_instrument_pkey"),
        schema="test_158415535871585582889006515973580025243_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "tfundinstr_forecast_hist",
        sa.Column("fi_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_frcst_id",
            "fi_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tfundinstr_forecast_hist_pkey"),
        ),
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_index(
        op.f("tfundinstr_forecast_hist_transformed_at_idx"),
        "tfundinstr_forecast_hist",
        ["transformed_at"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_table(
        "tgroups",
        sa.Column("keyfield", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("value", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("keyfield", name=op.f("tgroups_pkey")),
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_index(
        op.f("tgroups_transformed_at_idx"),
        "tgroups",
        ["transformed_at"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_table(
        "form",
        sa.Column("form_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("form_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("short_form_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("form_version", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("omb_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("legacy_form_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "active_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "inactive_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "form_json_schema",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "form_ui_schema",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("form_instruction_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "form_rule_schema",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["form_instruction_id"],
            [
                "test_158415535871585582889006515973580025243_api.form_instruction.form_instruction_id"
            ],
            name="form_form_instruction_id_form_instruction_fkey",
        ),
        sa.PrimaryKeyConstraint("form_id", name="form_pkey"),
        schema="test_158415535871585582889006515973580025243_api",
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        op.f("form_legacy_form_id_idx"),
        "form",
        ["legacy_form_id"],
        unique=True,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "lk_form_family",
        sa.Column(
            "form_family_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_200494001685262614012745264629780230410_api.lk_form_family_form_family_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("form_family_id", name="lk_form_family_pkey"),
        schema="test_200494001685262614012745264629780230410_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "link_external_user",
        sa.Column("link_external_user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("external_user_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("external_user_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("email", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["external_user_type_id"],
            [
                "test_108608949803588358968494026131317405857_api.lk_external_user_type.external_user_type_id"
            ],
            name=op.f("link_external_user_external_user_type_id_lk_external_us_be53"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_108608949803588358968494026131317405857_api.user.user_id"],
            name=op.f("link_external_user_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint("link_external_user_id", name=op.f("link_external_user_pkey")),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("link_external_user_user_id_idx"),
        "link_external_user",
        ["user_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("link_external_user_external_user_type_id_idx"),
        "link_external_user",
        ["external_user_type_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("link_external_user_external_user_id_idx"),
        "link_external_user",
        ["external_user_id"],
        unique=True,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("link_external_user_email_idx"),
        "link_external_user",
        ["email"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "topportunity",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("oppnumber", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("opptitle", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("owningagency", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("listed", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oppcategory", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("initial_opportunity_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modified_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("flag_2006", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("category_explanation", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_draft", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("topportunity_pkey")),
        schema="test_108608949803588358968494026131317405857_legacy",
    )
    op.create_table(
        "link_opportunity_summary_funding_category",
        sa.Column("opportunity_summary_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("funding_category_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("legacy_funding_category_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["funding_category_id"],
            [
                "test_108608949803588358968494026131317405857_api.lk_funding_category.funding_category_id"
            ],
            name=op.f("link_opportunity_summary_funding_category_funding_categ_dcd3"),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_summary_id"],
            [
                "test_108608949803588358968494026131317405857_api.opportunity_summary.opportunity_summary_id"
            ],
            name=op.f("link_opportunity_summary_funding_category_opportunity_s_5610"),
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_summary_id",
            "funding_category_id",
            name=op.f("link_opportunity_summary_funding_category_pkey"),
        ),
        sa.UniqueConstraint(
            "opportunity_summary_id",
            "legacy_funding_category_id",
            name=op.f("link_opportunity_summary_funding_category_opportunity_s_731c"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("link_opportunity_summary_funding_category_opportunity_s_9f79"),
        "link_opportunity_summary_funding_category",
        ["opportunity_summary_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("link_opportunity_summary_funding_category_funding_categ_17a0"),
        "link_opportunity_summary_funding_category",
        ["funding_category_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "lk_sam_gov_import_type",
        sa.Column(
            "sam_gov_import_type_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_108608949803588358968494026131317405857_api.lk_sam_gov_import_type_sam_gov_import_type_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("sam_gov_import_type_id", name="lk_sam_gov_import_type_pkey"),
        schema="test_108608949803588358968494026131317405857_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "tsubscription_opportunity",
        sa.Column("subscription_opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("subscription_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_opp_deleted", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_upd_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "subscription_opportunity_id", name=op.f("tsubscription_opportunity_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_index(
        op.f("tsubscription_opportunity_transformed_at_idx"),
        "tsubscription_opportunity",
        ["transformed_at"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_table(
        "tfundactcat_forecast_hist",
        sa.Column("fac_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_frcst_id",
            "fac_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tfundactcat_forecast_hist_pkey"),
        ),
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_index(
        op.f("tfundactcat_forecast_hist_transformed_at_idx"),
        "tfundactcat_forecast_hist",
        ["transformed_at"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_table(
        "sam_gov_entity_import_type",
        sa.Column("sam_gov_entity_import_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("sam_gov_entity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("sam_gov_import_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["sam_gov_entity_id"],
            ["test_200494001685262614012745264629780230410_api.sam_gov_entity.sam_gov_entity_id"],
            name=op.f("sam_gov_entity_import_type_sam_gov_entity_id_sam_gov_en_40a2"),
        ),
        sa.ForeignKeyConstraint(
            ["sam_gov_import_type_id"],
            [
                "test_200494001685262614012745264629780230410_api.lk_sam_gov_import_type.sam_gov_import_type_id"
            ],
            name=op.f("sam_gov_entity_import_type_sam_gov_import_type_id_lk_sa_1bd4"),
        ),
        sa.PrimaryKeyConstraint(
            "sam_gov_entity_import_id", name=op.f("sam_gov_entity_import_type_pkey")
        ),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "tcompetition",
        sa.Column("comp_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("opp_cfda_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("competitionid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("familyid", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("competitiontitle", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("openingdate", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("closingdate", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("contactinfo", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("graceperiod", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("opentoapplicanttype", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("dialect", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_update", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("electronic_required", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("expected_appl_num", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("expected_appl_size", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("origcfdanum", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("origoppnumber", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ismulti", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_dwnld_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("package_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_wrkspc_compatible", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("comp_id", name=op.f("tcompetition_pkey")),
        schema="test_195495387774297757560388855302097562904_legacy",
    )
    op.create_table(
        "tforecast_hist",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("forecast_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_synopsis_posting_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_appl_response_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("est_appl_response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_award_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_project_start_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("fiscal_year", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("action_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "action_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "opportunity_id", "revision_number", name=op.f("tforecast_hist_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_index(
        op.f("tforecast_hist_transformed_at_idx"),
        "tforecast_hist",
        ["transformed_at"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_table(
        "tapplicanttypes_synopsis",
        sa.Column("at_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_syn_id", "at_id", "opportunity_id", name=op.f("tapplicanttypes_synopsis_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_legacy",
    )
    op.create_table(
        "topportunity_cfda",
        sa.Column("opp_cfda_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("cfdanumber", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("programtitle", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("origtoppid", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("oppidcfdanum", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("origoppnum", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opp_cfda_id", name=op.f("topportunity_cfda_pkey")),
        schema="test_200494001685262614012745264629780230410_legacy",
    )
    op.create_table(
        "tforecast",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("forecast_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_synopsis_posting_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_appl_response_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("est_appl_response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_award_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_project_start_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("fiscal_year", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("tforecast_pkey")),
        schema="test_195495387774297757560388855302097562904_legacy",
    )
    op.create_table(
        "tsubscription_search",
        sa.Column("subscription_search_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("subscription_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("search_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("search_params", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_upd_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("subscription_search_id", name=op.f("tsubscription_search_pkey")),
        schema="test_195495387774297757560388855302097562904_legacy",
    )
    op.create_table(
        "lk_competition_open_to_applicant",
        sa.Column(
            "competition_open_to_applicant_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_195495387774297757560388855302097562904_api.lk_competition_open_to_applic_competition_open_to_applicant_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "competition_open_to_applicant_id", name="lk_competition_open_to_applicant_pkey"
        ),
        schema="test_195495387774297757560388855302097562904_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "topportunity_cfda",
        sa.Column("opp_cfda_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("cfdanumber", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("programtitle", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("origtoppid", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("oppidcfdanum", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("origoppnum", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opp_cfda_id", name=op.f("topportunity_cfda_pkey")),
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_index(
        op.f("topportunity_cfda_transformed_at_idx"),
        "topportunity_cfda",
        ["transformed_at"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_table(
        "tapplicanttypes_synopsis",
        sa.Column("at_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_syn_id", "at_id", "opportunity_id", name=op.f("tapplicanttypes_synopsis_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_legacy",
    )
    op.create_table(
        "current_opportunity_summary",
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_summary_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_status_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_200494001685262614012745264629780230410_api.opportunity.opportunity_id"],
            name=op.f("current_opportunity_summary_opportunity_id_opportunity_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_status_id"],
            [
                "test_200494001685262614012745264629780230410_api.lk_opportunity_status.opportunity_status_id"
            ],
            name=op.f("current_opportunity_summary_opportunity_status_id_lk_op_3147"),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_summary_id"],
            [
                "test_200494001685262614012745264629780230410_api.opportunity_summary.opportunity_summary_id"
            ],
            name=op.f("current_opportunity_summary_opportunity_summary_id_oppo_8251"),
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_id",
            "opportunity_summary_id",
            name=op.f("current_opportunity_summary_pkey"),
        ),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("current_opportunity_summary_opportunity_summary_id_idx"),
        "current_opportunity_summary",
        ["opportunity_summary_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("current_opportunity_summary_opportunity_status_id_idx"),
        "current_opportunity_summary",
        ["opportunity_status_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("current_opportunity_summary_opportunity_id_idx"),
        "current_opportunity_summary",
        ["opportunity_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "link_competition_open_to_applicant",
        sa.Column("competition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "competition_open_to_applicant_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["test_158415535871585582889006515973580025243_api.competition.competition_id"],
            name=op.f("link_competition_open_to_applicant_competition_id_compe_e8fc"),
        ),
        sa.ForeignKeyConstraint(
            ["competition_open_to_applicant_id"],
            [
                "test_158415535871585582889006515973580025243_api.lk_competition_open_to_applicant.competition_open_to_applicant_id"
            ],
            name=op.f("link_competition_open_to_applicant_competition_open_to__7a3d"),
        ),
        sa.PrimaryKeyConstraint(
            "competition_id",
            "competition_open_to_applicant_id",
            name=op.f("link_competition_open_to_applicant_pkey"),
        ),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "tsubscription_opportunity",
        sa.Column("subscription_opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("subscription_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_opp_deleted", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_upd_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "subscription_opportunity_id", name=op.f("tsubscription_opportunity_pkey")
        ),
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_index(
        op.f("tsubscription_opportunity_transformed_at_idx"),
        "tsubscription_opportunity",
        ["transformed_at"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_table(
        "agency_contact_info",
        sa.Column("agency_contact_info_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("contact_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("address_line_1", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("address_line_2", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("city", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("state", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("zip_code", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("phone_number", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("primary_email", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("secondary_email", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("agency_contact_info_id", name="agency_contact_info_pkey"),
        schema="test_200494001685262614012745264629780230410_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "short_lived_internal_token",
        sa.Column("short_lived_internal_token_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "expires_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("is_valid", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "short_lived_internal_token_id", name=op.f("short_lived_internal_token_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "application_user",
        sa.Column("application_user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("application_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("is_application_owner", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["application_id"],
            ["test_158415535871585582889006515973580025243_api.application.application_id"],
            name=op.f("application_user_application_id_application_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_158415535871585582889006515973580025243_api.user.user_id"],
            name=op.f("application_user_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint("application_user_id", name=op.f("application_user_pkey")),
        sa.UniqueConstraint(
            "application_id",
            "user_id",
            name=op.f("application_user_application_id_uniq"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("application_user_user_id_idx"),
        "application_user",
        ["user_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("application_user_application_id_idx"),
        "application_user",
        ["application_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "opportunity",
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("legacy_opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("opportunity_title", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("opportunity_category_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("category_explanation", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_draft", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("modified_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_user_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_category_id"],
            [
                "test_158415535871585582889006515973580025243_api.lk_opportunity_category.opportunity_category_id"
            ],
            name="opportunity_opportunity_category_id_lk_opportunity_cate_c6e9",
        ),
        sa.PrimaryKeyConstraint("opportunity_id", name="opportunity_pkey"),
        schema="test_158415535871585582889006515973580025243_api",
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        op.f("opportunity_opportunity_title_idx"),
        "opportunity",
        ["opportunity_title"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("opportunity_opportunity_category_id_idx"),
        "opportunity",
        ["opportunity_category_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("opportunity_legacy_opportunity_id_idx"),
        "opportunity",
        ["legacy_opportunity_id"],
        unique=True,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("opportunity_is_draft_idx"),
        "opportunity",
        ["is_draft"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("opportunity_agency_code_idx"),
        "opportunity",
        ["agency_code"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "lk_applicant_type",
        sa.Column(
            "applicant_type_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_108608949803588358968494026131317405857_api.lk_applicant_type_applicant_type_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("applicant_type_id", name="lk_applicant_type_pkey"),
        schema="test_108608949803588358968494026131317405857_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "lk_funding_instrument",
        sa.Column(
            "funding_instrument_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_108608949803588358968494026131317405857_api.lk_funding_instrument_funding_instrument_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("funding_instrument_id", name="lk_funding_instrument_pkey"),
        schema="test_108608949803588358968494026131317405857_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "tuser_account",
        sa.Column("user_account_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("full_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("email_address", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("phone_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("first_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("middle_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted_legacy", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_duplicate", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_active", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_email_confirm_pending", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "deactivated_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("mobile_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("user_account_id", name=op.f("tuser_account_pkey")),
        schema="test_195495387774297757560388855302097562904_legacy",
    )
    op.create_table(
        "tinstructions",
        sa.Column("comp_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("extension", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("mimetype", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("instructions", postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column(
            "last_update", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("comp_id", name=op.f("tinstructions_pkey")),
        schema="test_200494001685262614012745264629780230410_legacy",
    )
    op.create_table(
        "tfundinstr_synopsis_hist",
        sa.Column("fi_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_syn_id",
            "opportunity_id",
            "fi_id",
            "revision_number",
            name=op.f("tfundinstr_synopsis_hist_pkey"),
        ),
        schema="test_200494001685262614012745264629780230410_legacy",
    )
    op.create_table(
        "tfundinstr_forecast",
        sa.Column("fi_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_frcst_id", "fi_id", "opportunity_id", name=op.f("tfundinstr_forecast_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_legacy",
    )
    op.create_table(
        "user_notification_log",
        sa.Column("user_notification_log_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("notification_reason", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("notification_sent", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_195495387774297757560388855302097562904_api.user.user_id"],
            name=op.f("user_notification_log_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "user_notification_log_id", name=op.f("user_notification_log_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("user_notification_log_user_id_idx"),
        "user_notification_log",
        ["user_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "form",
        sa.Column("form_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("form_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("short_form_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("form_version", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("omb_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("legacy_form_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "active_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "inactive_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "form_json_schema",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "form_ui_schema",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("form_instruction_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "form_rule_schema",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["form_instruction_id"],
            [
                "test_108608949803588358968494026131317405857_api.form_instruction.form_instruction_id"
            ],
            name="form_form_instruction_id_form_instruction_fkey",
        ),
        sa.PrimaryKeyConstraint("form_id", name="form_pkey"),
        schema="test_108608949803588358968494026131317405857_api",
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        op.f("form_legacy_form_id_idx"),
        "form",
        ["legacy_form_id"],
        unique=True,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "tfundinstr_forecast",
        sa.Column("fi_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_frcst_id", "fi_id", "opportunity_id", name=op.f("tfundinstr_forecast_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_index(
        op.f("tfundinstr_forecast_transformed_at_idx"),
        "tfundinstr_forecast",
        ["transformed_at"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_table(
        "opportunity_version",
        sa.Column("opportunity_version_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "opportunity_data",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_158415535871585582889006515973580025243_api.opportunity.opportunity_id"],
            name=op.f("opportunity_version_opportunity_id_opportunity_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_version_id", "opportunity_id", name=op.f("opportunity_version_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "lk_opportunity_status",
        sa.Column("opportunity_status_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("opportunity_status_id", name=op.f("lk_opportunity_status_pkey")),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "current_opportunity_summary",
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_summary_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_status_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_158415535871585582889006515973580025243_api.opportunity.opportunity_id"],
            name=op.f("current_opportunity_summary_opportunity_id_opportunity_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_status_id"],
            [
                "test_158415535871585582889006515973580025243_api.lk_opportunity_status.opportunity_status_id"
            ],
            name=op.f("current_opportunity_summary_opportunity_status_id_lk_op_3147"),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_summary_id"],
            [
                "test_158415535871585582889006515973580025243_api.opportunity_summary.opportunity_summary_id"
            ],
            name=op.f("current_opportunity_summary_opportunity_summary_id_oppo_8251"),
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_id",
            "opportunity_summary_id",
            name=op.f("current_opportunity_summary_pkey"),
        ),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("current_opportunity_summary_opportunity_summary_id_idx"),
        "current_opportunity_summary",
        ["opportunity_summary_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("current_opportunity_summary_opportunity_status_id_idx"),
        "current_opportunity_summary",
        ["opportunity_status_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("current_opportunity_summary_opportunity_id_idx"),
        "current_opportunity_summary",
        ["opportunity_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "login_gov_state",
        sa.Column("login_gov_state_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("nonce", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("login_gov_state_id", name=op.f("login_gov_state_pkey")),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "agency_contact_info",
        sa.Column("agency_contact_info_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("contact_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("address_line_1", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("address_line_2", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("city", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("state", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("zip_code", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("phone_number", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("primary_email", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("secondary_email", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("agency_contact_info_id", name=op.f("agency_contact_info_pkey")),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "competition",
        sa.Column("competition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("legacy_competition_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("public_competition_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("legacy_package_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("competition_title", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("opening_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("closing_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("grace_period", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("contact_info", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("form_family_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "opportunity_assistance_listing_id", sa.UUID(), autoincrement=False, nullable=True
        ),
        sa.Column("is_electronic_required", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("expected_application_count", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("expected_application_size_mb", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_multi_package", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("agency_download_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "is_legacy_workspace_compatible", sa.BOOLEAN(), autoincrement=False, nullable=True
        ),
        sa.Column("can_send_mail", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("is_simpler_grants_enabled", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["form_family_id"],
            ["test_200494001685262614012745264629780230410_api.lk_form_family.form_family_id"],
            name="competition_form_family_id_lk_form_family_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_assistance_listing_id"],
            [
                "test_200494001685262614012745264629780230410_api.opportunity_assistance_listing.opportunity_assistance_listing_id"
            ],
            name="competition_opportunity_assistance_listing_id_opportuni_6423",
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_200494001685262614012745264629780230410_api.opportunity.opportunity_id"],
            name="competition_opportunity_id_opportunity_fkey",
        ),
        sa.PrimaryKeyConstraint("competition_id", name="competition_pkey"),
        schema="test_200494001685262614012745264629780230410_api",
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        op.f("competition_opportunity_id_idx"),
        "competition",
        ["opportunity_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("competition_legacy_competition_id_idx"),
        "competition",
        ["legacy_competition_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("competition_form_family_id_idx"),
        "competition",
        ["form_family_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "user_opportunity_notification_log",
        sa.Column(
            "user_opportunity_notification_log_id", sa.UUID(), autoincrement=False, nullable=False
        ),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_200494001685262614012745264629780230410_api.opportunity.opportunity_id"],
            name=op.f("user_opportunity_notification_log_opportunity_id_opport_1f35"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_200494001685262614012745264629780230410_api.user.user_id"],
            name=op.f("user_opportunity_notification_log_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "user_opportunity_notification_log_id",
            name=op.f("user_opportunity_notification_log_pkey"),
        ),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("user_opportunity_notification_log_user_id_idx"),
        "user_opportunity_notification_log",
        ["user_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("user_opportunity_notification_log_opportunity_id_idx"),
        "user_opportunity_notification_log",
        ["opportunity_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "tinstructions",
        sa.Column("comp_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("extension", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("mimetype", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("instructions", postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column(
            "last_update", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("comp_id", name=op.f("tinstructions_pkey")),
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_index(
        op.f("tinstructions_transformed_at_idx"),
        "tinstructions",
        ["transformed_at"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_table(
        "tapplicanttypes_forecast_hist",
        sa.Column("at_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_frcst_id",
            "at_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tapplicanttypes_forecast_hist_pkey"),
        ),
        schema="test_200494001685262614012745264629780230410_legacy",
    )
    op.create_table(
        "tfundinstr_synopsis_hist",
        sa.Column("fi_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_syn_id",
            "opportunity_id",
            "fi_id",
            "revision_number",
            name=op.f("tfundinstr_synopsis_hist_pkey"),
        ),
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_index(
        op.f("tfundinstr_synopsis_hist_transformed_at_idx"),
        "tfundinstr_synopsis_hist",
        ["transformed_at"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_table(
        "tfundactcat_synopsis_hist",
        sa.Column("fac_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_syn_id",
            "fac_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tfundactcat_synopsis_hist_pkey"),
        ),
        schema="test_195495387774297757560388855302097562904_legacy",
    )
    op.create_table(
        "opportunity_change_audit",
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("is_loaded_to_search", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("is_loaded_to_version_table", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_200494001685262614012745264629780230410_api.opportunity.opportunity_id"],
            name=op.f("opportunity_change_audit_opportunity_id_opportunity_fkey"),
        ),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("opportunity_change_audit_pkey")),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("opportunity_change_audit_opportunity_id_idx"),
        "opportunity_change_audit",
        ["opportunity_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("opportunity_change_audit_is_loaded_to_version_table_idx"),
        "opportunity_change_audit",
        ["is_loaded_to_version_table"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "extract_metadata",
        sa.Column("extract_metadata_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("extract_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("file_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_path", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_size_bytes", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["extract_type_id"],
            ["test_158415535871585582889006515973580025243_api.lk_extract_type.extract_type_id"],
            name=op.f("extract_metadata_extract_type_id_lk_extract_type_fkey"),
        ),
        sa.PrimaryKeyConstraint("extract_metadata_id", name=op.f("extract_metadata_pkey")),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "lk_sam_gov_extract_type",
        sa.Column("sam_gov_extract_type_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "sam_gov_extract_type_id", name=op.f("lk_sam_gov_extract_type_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "lk_agency_download_file_type",
        sa.Column("agency_download_file_type_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "agency_download_file_type_id", name=op.f("lk_agency_download_file_type_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "tfundinstr_synopsis",
        sa.Column("fi_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_syn_id", "fi_id", "opportunity_id", name=op.f("tfundinstr_synopsis_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_index(
        op.f("tfundinstr_synopsis_transformed_at_idx"),
        "tfundinstr_synopsis",
        ["transformed_at"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_table(
        "user_api_key",
        sa.Column("api_key_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("key_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "key_id",
            sa.TEXT(),
            autoincrement=False,
            nullable=False,
            comment="AWS API Gateway key identifier",
        ),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "last_used", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_108608949803588358968494026131317405857_api.user.user_id"],
            name=op.f("user_api_key_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint("api_key_id", name=op.f("user_api_key_pkey")),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("user_api_key_user_id_idx"),
        "user_api_key",
        ["user_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "tapplicanttypes_forecast",
        sa.Column("at_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_frcst_id", "at_id", "opportunity_id", name=op.f("tapplicanttypes_forecast_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_index(
        op.f("tapplicanttypes_forecast_transformed_at_idx"),
        "tapplicanttypes_forecast",
        ["transformed_at"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_table(
        "tapplicanttypes_forecast_hist",
        sa.Column("at_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_frcst_id",
            "at_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tapplicanttypes_forecast_hist_pkey"),
        ),
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_index(
        op.f("tapplicanttypes_forecast_hist_transformed_at_idx"),
        "tapplicanttypes_forecast_hist",
        ["transformed_at"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_table(
        "lk_funding_category",
        sa.Column(
            "funding_category_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_200494001685262614012745264629780230410_api.lk_funding_category_funding_category_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("funding_category_id", name="lk_funding_category_pkey"),
        schema="test_200494001685262614012745264629780230410_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "application",
        sa.Column("application_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("competition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("application_status_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("application_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("organization_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["application_status_id"],
            [
                "test_200494001685262614012745264629780230410_api.lk_application_status.application_status_id"
            ],
            name="application_application_status_id_lk_application_status_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["test_200494001685262614012745264629780230410_api.competition.competition_id"],
            name="application_competition_id_competition_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["test_200494001685262614012745264629780230410_api.organization.organization_id"],
            name="application_organization_id_organization_fkey",
        ),
        sa.PrimaryKeyConstraint("application_id", name="application_pkey"),
        schema="test_200494001685262614012745264629780230410_api",
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        op.f("application_competition_id_idx"),
        "application",
        ["competition_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "competition_assistance_listing",
        sa.Column("competition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "opportunity_assistance_listing_id", sa.UUID(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["test_195495387774297757560388855302097562904_api.competition.competition_id"],
            name=op.f("competition_assistance_listing_competition_id_competition_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_assistance_listing_id"],
            [
                "test_195495387774297757560388855302097562904_api.opportunity_assistance_listing.opportunity_assistance_listing_id"
            ],
            name=op.f("competition_assistance_listing_opportunity_assistance_l_6b02"),
        ),
        sa.PrimaryKeyConstraint(
            "competition_id",
            "opportunity_assistance_listing_id",
            name=op.f("competition_assistance_listing_pkey"),
        ),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "user_token_session",
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("token_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "expires_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("is_valid", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_195495387774297757560388855302097562904_api.user.user_id"],
            name=op.f("user_token_session_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint("user_id", "token_id", name=op.f("user_token_session_pkey")),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "competition_form",
        sa.Column("competition_form_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("competition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("form_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("is_required", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["test_200494001685262614012745264629780230410_api.competition.competition_id"],
            name=op.f("competition_form_competition_id_competition_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["form_id"],
            ["test_200494001685262614012745264629780230410_api.form.form_id"],
            name=op.f("competition_form_form_id_form_fkey"),
        ),
        sa.PrimaryKeyConstraint("competition_form_id", name=op.f("competition_form_pkey")),
        sa.UniqueConstraint(
            "competition_id",
            "form_id",
            name=op.f("competition_form_competition_id_uniq"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("competition_form_competition_id_idx"),
        "competition_form",
        ["competition_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "lk_external_user_type",
        sa.Column("external_user_type_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("external_user_type_id", name=op.f("lk_external_user_type_pkey")),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "tforecast_hist",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("forecast_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_synopsis_posting_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_appl_response_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("est_appl_response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_award_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_project_start_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("fiscal_year", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("action_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "action_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "opportunity_id", "revision_number", name=op.f("tforecast_hist_pkey")
        ),
        schema="test_200494001685262614012745264629780230410_legacy",
    )
    op.create_table(
        "application_submission",
        sa.Column("application_submission_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("application_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("file_location", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_size_bytes", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["application_id"],
            ["test_195495387774297757560388855302097562904_api.application.application_id"],
            name=op.f("application_submission_application_id_application_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "application_submission_id", name=op.f("application_submission_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "tsubscription",
        sa.Column("subscription_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("user_account_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("newsletters", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("alerts", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("all_new_opps", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("opportunities", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("saved_searches", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_upd_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("subscription_id", name=op.f("tsubscription_pkey")),
        schema="test_195495387774297757560388855302097562904_legacy",
    )
    op.create_table(
        "job_log",
        sa.Column("job_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("job_type", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("job_status_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "metrics", postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["job_status_id"],
            ["test_200494001685262614012745264629780230410_api.lk_job_status.job_status_id"],
            name=op.f("job_log_job_status_id_lk_job_status_fkey"),
        ),
        sa.PrimaryKeyConstraint("job_id", name=op.f("job_log_pkey")),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "link_competition_open_to_applicant",
        sa.Column("competition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "competition_open_to_applicant_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["test_108608949803588358968494026131317405857_api.competition.competition_id"],
            name=op.f("link_competition_open_to_applicant_competition_id_compe_e8fc"),
        ),
        sa.ForeignKeyConstraint(
            ["competition_open_to_applicant_id"],
            [
                "test_108608949803588358968494026131317405857_api.lk_competition_open_to_applicant.competition_open_to_applicant_id"
            ],
            name=op.f("link_competition_open_to_applicant_competition_open_to__7a3d"),
        ),
        sa.PrimaryKeyConstraint(
            "competition_id",
            "competition_open_to_applicant_id",
            name=op.f("link_competition_open_to_applicant_pkey"),
        ),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "tforecast_hist",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("forecast_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_synopsis_posting_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_appl_response_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("est_appl_response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_award_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_project_start_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("fiscal_year", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("action_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "action_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "opportunity_id", "revision_number", name=op.f("tforecast_hist_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_index(
        op.f("tforecast_hist_transformed_at_idx"),
        "tforecast_hist",
        ["transformed_at"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_table(
        "tsynopsisattachment",
        sa.Column("syn_att_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("att_revision_number", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("att_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("mime_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("file_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("file_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("file_lob", postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column("file_lob_size", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("syn_att_folder_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("syn_att_id", name=op.f("tsynopsisattachment_pkey")),
        schema="test_195495387774297757560388855302097562904_legacy",
    )
    op.create_table(
        "user",
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("user_id", name="user_pkey"),
        schema="test_200494001685262614012745264629780230410_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "opportunity",
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("legacy_opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("opportunity_title", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("opportunity_category_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("category_explanation", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_draft", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("modified_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_user_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_category_id"],
            [
                "test_108608949803588358968494026131317405857_api.lk_opportunity_category.opportunity_category_id"
            ],
            name="opportunity_opportunity_category_id_lk_opportunity_cate_c6e9",
        ),
        sa.PrimaryKeyConstraint("opportunity_id", name="opportunity_pkey"),
        schema="test_108608949803588358968494026131317405857_api",
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        op.f("opportunity_opportunity_title_idx"),
        "opportunity",
        ["opportunity_title"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("opportunity_opportunity_category_id_idx"),
        "opportunity",
        ["opportunity_category_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("opportunity_legacy_opportunity_id_idx"),
        "opportunity",
        ["legacy_opportunity_id"],
        unique=True,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("opportunity_is_draft_idx"),
        "opportunity",
        ["is_draft"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("opportunity_agency_code_idx"),
        "opportunity",
        ["agency_code"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "tuser_account_mapper",
        sa.Column("user_account_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("ext_user_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("ext_issuer", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("ext_subject", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "last_auth_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("source_type", sa.TEXT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint(
            "user_account_id", "source_type", name=op.f("tuser_account_mapper_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_legacy",
    )
    op.create_table(
        "topportunity",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("oppnumber", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("opptitle", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("owningagency", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("listed", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oppcategory", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("initial_opportunity_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modified_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("flag_2006", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("category_explanation", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_draft", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("topportunity_pkey")),
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_index(
        op.f("topportunity_transformed_at_idx"),
        "topportunity",
        ["transformed_at"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_table(
        "tuser_account_mapper",
        sa.Column("user_account_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("ext_user_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("ext_issuer", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("ext_subject", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "last_auth_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("source_type", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "user_account_id", "source_type", name=op.f("tuser_account_mapper_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_index(
        op.f("tuser_account_mapper_transformed_at_idx"),
        "tuser_account_mapper",
        ["transformed_at"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_table(
        "sam_extract_file",
        sa.Column("sam_extract_file_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("extract_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("extract_date", sa.DATE(), autoincrement=False, nullable=False),
        sa.Column("filename", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("s3_path", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("processing_status_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["extract_type_id"],
            [
                "test_195495387774297757560388855302097562904_api.lk_sam_gov_extract_type.sam_gov_extract_type_id"
            ],
            name=op.f("sam_extract_file_extract_type_id_lk_sam_gov_extract_type_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["processing_status_id"],
            [
                "test_195495387774297757560388855302097562904_api.lk_sam_gov_processing_status.sam_gov_processing_status_id"
            ],
            name=op.f("sam_extract_file_processing_status_id_lk_sam_gov_proces_24d0"),
        ),
        sa.PrimaryKeyConstraint("sam_extract_file_id", name=op.f("sam_extract_file_pkey")),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("sam_extract_file_processing_status_id_idx"),
        "sam_extract_file",
        ["processing_status_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("sam_extract_file_extract_type_id_idx"),
        "sam_extract_file",
        ["extract_type_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "suppressed_email",
        sa.Column("suppressed_email_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("email", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("reason", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_update_time",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("suppressed_email_id", name=op.f("suppressed_email_pkey")),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("suppressed_email_last_update_time_idx"),
        "suppressed_email",
        ["last_update_time"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("suppressed_email_email_idx"),
        "suppressed_email",
        ["email"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "opportunity_version",
        sa.Column("opportunity_version_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "opportunity_data",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_108608949803588358968494026131317405857_api.opportunity.opportunity_id"],
            name=op.f("opportunity_version_opportunity_id_opportunity_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_version_id", "opportunity_id", name=op.f("opportunity_version_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "lk_agency_submission_notification_setting",
        sa.Column(
            "agency_submission_notification_setting_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_195495387774297757560388855302097562904_api.lk_agency_submission_notifica_agency_submission_notificatio_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "agency_submission_notification_setting_id",
            name="lk_agency_submission_notification_setting_pkey",
        ),
        schema="test_195495387774297757560388855302097562904_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "login_gov_state",
        sa.Column("login_gov_state_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("nonce", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("login_gov_state_id", name=op.f("login_gov_state_pkey")),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "tcompetition",
        sa.Column("comp_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("opp_cfda_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("competitionid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("familyid", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("competitiontitle", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("openingdate", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("closingdate", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("contactinfo", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("graceperiod", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("opentoapplicanttype", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("dialect", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_update", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("electronic_required", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("expected_appl_num", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("expected_appl_size", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("origcfdanum", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("origoppnumber", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ismulti", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_dwnld_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("package_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_wrkspc_compatible", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("comp_id", name=op.f("tcompetition_pkey")),
        schema="test_158415535871585582889006515973580025243_legacy",
    )
    op.create_table(
        "opportunity_summary",
        sa.Column("opportunity_summary_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("legacy_opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("summary_description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_cost_sharing", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("is_forecast", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("post_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("close_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("close_date_description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("archive_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("unarchive_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("expected_number_of_awards", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "estimated_total_program_funding", sa.BIGINT(), autoincrement=False, nullable=True
        ),
        sa.Column("award_floor", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("additional_info_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("additional_info_url_description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("forecasted_post_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("forecasted_close_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column(
            "forecasted_close_date_description", sa.TEXT(), autoincrement=False, nullable=True
        ),
        sa.Column("forecasted_award_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("forecasted_project_start_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("fiscal_year", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("funding_category_description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "applicant_eligibility_description", sa.TEXT(), autoincrement=False, nullable=True
        ),
        sa.Column("agency_phone_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_contact_description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_email_address", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "agency_email_address_description", sa.TEXT(), autoincrement=False, nullable=True
        ),
        sa.Column("version_number", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("can_send_mail", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("publisher_user_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_195495387774297757560388855302097562904_api.opportunity.opportunity_id"],
            name="opportunity_summary_opportunity_id_opportunity_fkey",
        ),
        sa.PrimaryKeyConstraint("opportunity_summary_id", name="opportunity_summary_pkey"),
        sa.UniqueConstraint(
            "is_forecast",
            "opportunity_id",
            name="opportunity_summary_is_forecast_uniq",
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_195495387774297757560388855302097562904_api",
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        op.f("opportunity_summary_opportunity_id_idx"),
        "opportunity_summary",
        ["opportunity_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("opportunity_summary_legacy_opportunity_id_idx"),
        "opportunity_summary",
        ["legacy_opportunity_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "lk_opportunity_category",
        sa.Column(
            "opportunity_category_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_158415535871585582889006515973580025243_api.lk_opportunity_category_opportunity_category_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("opportunity_category_id", name="lk_opportunity_category_pkey"),
        schema="test_158415535871585582889006515973580025243_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "tforecast_hist",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("forecast_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_synopsis_posting_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_appl_response_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("est_appl_response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_award_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_project_start_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("fiscal_year", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("action_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "action_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "opportunity_id", "revision_number", name=op.f("tforecast_hist_pkey")
        ),
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_index(
        op.f("tforecast_hist_transformed_at_idx"),
        "tforecast_hist",
        ["transformed_at"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_table(
        "tsynopsis",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "response_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "unarchive_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("syn_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_addr_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_contact_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("a_sa_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("tsynopsis_pkey")),
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_index(
        op.f("tsynopsis_transformed_at_idx"),
        "tsynopsis",
        ["transformed_at"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_table(
        "tapplicanttypes_synopsis_hist",
        sa.Column("at_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_syn_id",
            "at_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tapplicanttypes_synopsis_hist_pkey"),
        ),
        schema="test_200494001685262614012745264629780230410_legacy",
    )
    op.create_table(
        "lk_application_status",
        sa.Column(
            "application_status_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_200494001685262614012745264629780230410_api.lk_application_status_application_status_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("application_status_id", name="lk_application_status_pkey"),
        schema="test_200494001685262614012745264629780230410_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "tforecast",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("forecast_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_synopsis_posting_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_appl_response_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("est_appl_response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_award_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_project_start_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("fiscal_year", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("tforecast_pkey")),
        schema="test_158415535871585582889006515973580025243_legacy",
    )
    op.create_table(
        "tsubscription_search",
        sa.Column("subscription_search_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("subscription_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("search_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("search_params", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_upd_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("subscription_search_id", name=op.f("tsubscription_search_pkey")),
        schema="test_158415535871585582889006515973580025243_legacy",
    )
    op.create_table(
        "lk_agency_download_file_type",
        sa.Column("agency_download_file_type_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "agency_download_file_type_id", name=op.f("lk_agency_download_file_type_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "sam_gov_entity",
        sa.Column("sam_gov_entity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("uei", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("legal_business_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("expiration_date", sa.DATE(), autoincrement=False, nullable=False),
        sa.Column("initial_registration_date", sa.DATE(), autoincrement=False, nullable=False),
        sa.Column("last_update_date", sa.DATE(), autoincrement=False, nullable=False),
        sa.Column("ebiz_poc_email", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("ebiz_poc_first_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("ebiz_poc_last_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("has_debt_subject_to_offset", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("has_exclusion_status", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("eft_indicator", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_inactive", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("inactivated_at", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("sam_gov_entity_id", name="sam_gov_entity_pkey"),
        schema="test_195495387774297757560388855302097562904_api",
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        op.f("sam_gov_entity_uei_idx"),
        "sam_gov_entity",
        ["uei"],
        unique=True,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("sam_gov_entity_ebiz_poc_email_idx"),
        "sam_gov_entity",
        ["ebiz_poc_email"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "tapplicanttypes_synopsis",
        sa.Column("at_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_syn_id", "at_id", "opportunity_id", name=op.f("tapplicanttypes_synopsis_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_legacy",
    )
    op.create_table(
        "tfundinstr_forecast_hist",
        sa.Column("fi_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_frcst_id",
            "fi_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tfundinstr_forecast_hist_pkey"),
        ),
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_index(
        op.f("tfundinstr_forecast_hist_transformed_at_idx"),
        "tfundinstr_forecast_hist",
        ["transformed_at"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_table(
        "application_attachment",
        sa.Column("application_attachment_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("application_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("file_location", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("mime_type", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_size_bytes", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["application_id"],
            ["test_195495387774297757560388855302097562904_api.application.application_id"],
            name=op.f("application_attachment_application_id_application_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_195495387774297757560388855302097562904_api.user.user_id"],
            name=op.f("application_attachment_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "application_attachment_id", name=op.f("application_attachment_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "tapplicanttypes_synopsis",
        sa.Column("at_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_syn_id", "at_id", "opportunity_id", name=op.f("tapplicanttypes_synopsis_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_index(
        op.f("tapplicanttypes_synopsis_transformed_at_idx"),
        "tapplicanttypes_synopsis",
        ["transformed_at"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_table(
        "link_agency_download_file_type",
        sa.Column("agency_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "agency_download_file_type_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["agency_download_file_type_id"],
            [
                "test_195495387774297757560388855302097562904_api.lk_agency_download_file_type.agency_download_file_type_id"
            ],
            name=op.f("link_agency_download_file_type_agency_download_file_typ_5f33"),
        ),
        sa.ForeignKeyConstraint(
            ["agency_id"],
            ["test_195495387774297757560388855302097562904_api.agency.agency_id"],
            name=op.f("link_agency_download_file_type_agency_id_agency_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "agency_id",
            "agency_download_file_type_id",
            name=op.f("link_agency_download_file_type_pkey"),
        ),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "tapplicanttypes_synopsis_hist",
        sa.Column("at_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_syn_id",
            "at_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tapplicanttypes_synopsis_hist_pkey"),
        ),
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_index(
        op.f("tapplicanttypes_synopsis_hist_transformed_at_idx"),
        "tapplicanttypes_synopsis_hist",
        ["transformed_at"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_table(
        "tcompetition",
        sa.Column("comp_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("opp_cfda_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("competitionid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("familyid", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("competitiontitle", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("openingdate", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("closingdate", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("contactinfo", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("graceperiod", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("opentoapplicanttype", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("dialect", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_update", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("electronic_required", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("expected_appl_num", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("expected_appl_size", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("origcfdanum", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("origoppnumber", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ismulti", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_dwnld_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("package_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_wrkspc_compatible", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("comp_id", name=op.f("tcompetition_pkey")),
        schema="test_108608949803588358968494026131317405857_legacy",
    )
    op.create_table(
        "tfundactcat_synopsis",
        sa.Column("fac_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_syn_id", "fac_id", "opportunity_id", name=op.f("tfundactcat_synopsis_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_legacy",
    )
    op.create_table(
        "tsynopsis_hist",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "response_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "unarchive_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("syn_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_addr_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_contact_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("a_sa_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("action_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "action_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "opportunity_id", "revision_number", name=op.f("tsynopsis_hist_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_legacy",
    )
    op.create_table(
        "tforecast",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("forecast_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_synopsis_posting_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_appl_response_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("est_appl_response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_award_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_project_start_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("fiscal_year", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("tforecast_pkey")),
        schema="test_108608949803588358968494026131317405857_legacy",
    )
    op.create_table(
        "tsubscription_search",
        sa.Column("subscription_search_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("subscription_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("search_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("search_params", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_upd_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("subscription_search_id", name=op.f("tsubscription_search_pkey")),
        schema="test_108608949803588358968494026131317405857_legacy",
    )
    op.create_table(
        "link_opportunity_summary_applicant_type",
        sa.Column("opportunity_summary_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("applicant_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("legacy_applicant_type_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["applicant_type_id"],
            [
                "test_200494001685262614012745264629780230410_api.lk_applicant_type.applicant_type_id"
            ],
            name=op.f("link_opportunity_summary_applicant_type_applicant_type__c136"),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_summary_id"],
            [
                "test_200494001685262614012745264629780230410_api.opportunity_summary.opportunity_summary_id"
            ],
            name=op.f("link_opportunity_summary_applicant_type_opportunity_sum_f95d"),
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_summary_id",
            "applicant_type_id",
            name=op.f("link_opportunity_summary_applicant_type_pkey"),
        ),
        sa.UniqueConstraint(
            "opportunity_summary_id",
            "legacy_applicant_type_id",
            name=op.f("link_opportunity_summary_applicant_type_opportunity_sum_a7cd"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("link_opportunity_summary_applicant_type_opportunity_sum_fee2"),
        "link_opportunity_summary_applicant_type",
        ["opportunity_summary_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("link_opportunity_summary_applicant_type_applicant_type_id_idx"),
        "link_opportunity_summary_applicant_type",
        ["applicant_type_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "application_form",
        sa.Column("application_form_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("application_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("competition_form_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "application_response",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("is_included_in_submission", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["application_id"],
            ["test_158415535871585582889006515973580025243_api.application.application_id"],
            name=op.f("application_form_application_id_application_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["competition_form_id"],
            [
                "test_158415535871585582889006515973580025243_api.competition_form.competition_form_id"
            ],
            name=op.f("application_form_competition_form_id_competition_form_fkey"),
        ),
        sa.PrimaryKeyConstraint("application_form_id", name=op.f("application_form_pkey")),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "tfundactcat_forecast_hist",
        sa.Column("fac_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_frcst_id",
            "fac_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tfundactcat_forecast_hist_pkey"),
        ),
        schema="test_158415535871585582889006515973580025243_legacy",
    )
    op.create_table(
        "form_instruction",
        sa.Column("form_instruction_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("file_location", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("form_instruction_id", name="form_instruction_pkey"),
        schema="test_158415535871585582889006515973580025243_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "competition_instruction",
        sa.Column("competition_instruction_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("competition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("file_location", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["test_195495387774297757560388855302097562904_api.competition.competition_id"],
            name=op.f("competition_instruction_competition_id_competition_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "competition_instruction_id",
            "competition_id",
            name=op.f("competition_instruction_pkey"),
        ),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "tuser_account",
        sa.Column("user_account_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("full_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("email_address", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("phone_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("first_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("middle_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted_legacy", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_duplicate", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_active", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_email_confirm_pending", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "deactivated_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("mobile_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("user_account_id", name=op.f("tuser_account_pkey")),
        schema="test_108608949803588358968494026131317405857_legacy",
    )
    op.create_table(
        "tfundactcat_forecast_hist",
        sa.Column("fac_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_frcst_id",
            "fac_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tfundactcat_forecast_hist_pkey"),
        ),
        schema="test_108608949803588358968494026131317405857_legacy",
    )
    op.create_table(
        "lk_opportunity_category",
        sa.Column(
            "opportunity_category_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_108608949803588358968494026131317405857_api.lk_opportunity_category_opportunity_category_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("opportunity_category_id", name="lk_opportunity_category_pkey"),
        schema="test_108608949803588358968494026131317405857_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "tfundinstr_synopsis",
        sa.Column("fi_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_syn_id", "fi_id", "opportunity_id", name=op.f("tfundinstr_synopsis_pkey")
        ),
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_index(
        op.f("tfundinstr_synopsis_transformed_at_idx"),
        "tfundinstr_synopsis",
        ["transformed_at"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_table(
        "tapplicanttypes_forecast",
        sa.Column("at_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_frcst_id", "at_id", "opportunity_id", name=op.f("tapplicanttypes_forecast_pkey")
        ),
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_index(
        op.f("tapplicanttypes_forecast_transformed_at_idx"),
        "tapplicanttypes_forecast",
        ["transformed_at"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_table(
        "tsubscription_opportunity",
        sa.Column("subscription_opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("subscription_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_opp_deleted", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_upd_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint(
            "subscription_opportunity_id", name=op.f("tsubscription_opportunity_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_legacy",
    )
    op.create_table(
        "tfundactcat_synopsis_hist",
        sa.Column("fac_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_syn_id",
            "fac_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tfundactcat_synopsis_hist_pkey"),
        ),
        schema="test_108608949803588358968494026131317405857_legacy",
    )
    op.create_table(
        "organization",
        sa.Column("organization_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("sam_gov_entity_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["sam_gov_entity_id"],
            ["test_158415535871585582889006515973580025243_api.sam_gov_entity.sam_gov_entity_id"],
            name="organization_sam_gov_entity_id_sam_gov_entity_fkey",
        ),
        sa.PrimaryKeyConstraint("organization_id", name="organization_pkey"),
        sa.UniqueConstraint(
            "sam_gov_entity_id",
            name="organization_sam_gov_entity_id_uniq",
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_158415535871585582889006515973580025243_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "lk_job_status",
        sa.Column("job_status_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("job_status_id", name=op.f("lk_job_status_pkey")),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "lk_sam_gov_processing_status",
        sa.Column("sam_gov_processing_status_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "sam_gov_processing_status_id", name=op.f("lk_sam_gov_processing_status_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "tsubscription",
        sa.Column("subscription_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("user_account_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("newsletters", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("alerts", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("all_new_opps", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("opportunities", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("saved_searches", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_upd_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("subscription_id", name=op.f("tsubscription_pkey")),
        schema="test_158415535871585582889006515973580025243_legacy",
    )
    op.create_table(
        "user_saved_opportunity",
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "last_notified_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("'2025-08-12 02:26:00.195946+00'::timestamp with time zone"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_108608949803588358968494026131317405857_api.opportunity.opportunity_id"],
            name=op.f("user_saved_opportunity_opportunity_id_opportunity_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_108608949803588358968494026131317405857_api.user.user_id"],
            name=op.f("user_saved_opportunity_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "user_id", "opportunity_id", name=op.f("user_saved_opportunity_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "agency",
        sa.Column("agency_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("agency_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("sub_agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("assistance_listing_number", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "agency_submission_notification_setting_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("agency_contact_info_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("is_test_agency", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("ldap_group", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("label", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_multilevel_agency", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("is_multiproject", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "has_system_to_system_certificate", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "can_view_packages_in_grace_period", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.Column("is_image_workspace_enabled", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "is_validation_workspace_enabled", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.Column("top_level_agency_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["agency_contact_info_id"],
            [
                "test_195495387774297757560388855302097562904_api.agency_contact_info.agency_contact_info_id"
            ],
            name=op.f("agency_agency_contact_info_id_agency_contact_info_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["agency_submission_notification_setting_id"],
            [
                "test_195495387774297757560388855302097562904_api.lk_agency_submission_notification_setting.agency_submission_notification_setting_id"
            ],
            name=op.f("agency_agency_submission_notification_setting_id_lk_age_592f"),
        ),
        sa.ForeignKeyConstraint(
            ["top_level_agency_id"],
            ["test_195495387774297757560388855302097562904_api.agency.agency_id"],
            name=op.f("agency_top_level_agency_id_agency_fkey"),
        ),
        sa.PrimaryKeyConstraint("agency_id", name=op.f("agency_pkey")),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("agency_agency_code_idx"),
        "agency",
        ["agency_code"],
        unique=True,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "link_opportunity_summary_funding_instrument",
        sa.Column("opportunity_summary_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("funding_instrument_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("legacy_funding_instrument_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["funding_instrument_id"],
            [
                "test_158415535871585582889006515973580025243_api.lk_funding_instrument.funding_instrument_id"
            ],
            name=op.f("link_opportunity_summary_funding_instrument_funding_ins_be1e"),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_summary_id"],
            [
                "test_158415535871585582889006515973580025243_api.opportunity_summary.opportunity_summary_id"
            ],
            name=op.f("link_opportunity_summary_funding_instrument_opportunity_010d"),
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_summary_id",
            "funding_instrument_id",
            name=op.f("link_opportunity_summary_funding_instrument_pkey"),
        ),
        sa.UniqueConstraint(
            "opportunity_summary_id",
            "legacy_funding_instrument_id",
            name=op.f("link_opportunity_summary_funding_instrument_opportunity_5b1c"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("link_opportunity_summary_funding_instrument_opportunity_4597"),
        "link_opportunity_summary_funding_instrument",
        ["opportunity_summary_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("link_opportunity_summary_funding_instrument_funding_ins_94c9"),
        "link_opportunity_summary_funding_instrument",
        ["funding_instrument_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "tfundactcat_forecast",
        sa.Column("fac_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_frcst_id", "fac_id", "opportunity_id", name=op.f("tfundactcat_forecast_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_legacy",
    )
    op.create_table(
        "tsubscription_search",
        sa.Column("subscription_search_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("subscription_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("search_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("search_params", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_upd_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("subscription_search_id", name=op.f("tsubscription_search_pkey")),
        schema="test_200494001685262614012745264629780230410_legacy",
    )
    op.create_table(
        "opportunity_assistance_listing",
        sa.Column(
            "opportunity_assistance_listing_id", sa.UUID(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "legacy_opportunity_assistance_listing_id",
            sa.BIGINT(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("assistance_listing_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("program_title", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_158415535871585582889006515973580025243_api.opportunity.opportunity_id"],
            name="opportunity_assistance_listing_opportunity_id_opportunity_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_assistance_listing_id", name="opportunity_assistance_listing_pkey"
        ),
        schema="test_158415535871585582889006515973580025243_api",
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        op.f("opportunity_assistance_listing_opportunity_id_idx"),
        "opportunity_assistance_listing",
        ["opportunity_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("opportunity_assistance_listing_legacy_opportunity_assis_2774"),
        "opportunity_assistance_listing",
        ["legacy_opportunity_assistance_listing_id"],
        unique=True,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "tinstructions",
        sa.Column("comp_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("extension", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("mimetype", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("instructions", postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column(
            "last_update", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("comp_id", name=op.f("tinstructions_pkey")),
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_index(
        op.f("tinstructions_transformed_at_idx"),
        "tinstructions",
        ["transformed_at"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_table(
        "tfundinstr_synopsis_hist",
        sa.Column("fi_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_syn_id",
            "opportunity_id",
            "fi_id",
            "revision_number",
            name=op.f("tfundinstr_synopsis_hist_pkey"),
        ),
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_index(
        op.f("tfundinstr_synopsis_hist_transformed_at_idx"),
        "tfundinstr_synopsis_hist",
        ["transformed_at"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_table(
        "organization_user",
        sa.Column("organization_user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("is_organization_owner", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("organization_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["test_158415535871585582889006515973580025243_api.organization.organization_id"],
            name=op.f("organization_user_organization_id_organization_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_158415535871585582889006515973580025243_api.user.user_id"],
            name=op.f("organization_user_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint("organization_user_id", name=op.f("organization_user_pkey")),
        sa.UniqueConstraint(
            "organization_id",
            "user_id",
            name=op.f("organization_user_organization_id_uniq"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("organization_user_user_id_idx"),
        "organization_user",
        ["user_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("organization_user_organization_id_idx"),
        "organization_user",
        ["organization_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "lk_competition_open_to_applicant",
        sa.Column(
            "competition_open_to_applicant_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_200494001685262614012745264629780230410_api.lk_competition_open_to_applic_competition_open_to_applicant_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "competition_open_to_applicant_id", name="lk_competition_open_to_applicant_pkey"
        ),
        schema="test_200494001685262614012745264629780230410_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "application_form",
        sa.Column("application_form_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("application_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("competition_form_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "application_response",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("is_included_in_submission", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["application_id"],
            ["test_108608949803588358968494026131317405857_api.application.application_id"],
            name=op.f("application_form_application_id_application_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["competition_form_id"],
            [
                "test_108608949803588358968494026131317405857_api.competition_form.competition_form_id"
            ],
            name=op.f("application_form_competition_form_id_competition_form_fkey"),
        ),
        sa.PrimaryKeyConstraint("application_form_id", name=op.f("application_form_pkey")),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "tsubscription",
        sa.Column("subscription_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("user_account_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("newsletters", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("alerts", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("all_new_opps", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("opportunities", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("saved_searches", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_upd_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("subscription_id", name=op.f("tsubscription_pkey")),
        schema="test_108608949803588358968494026131317405857_legacy",
    )
    op.create_table(
        "tapplicanttypes_forecast_hist",
        sa.Column("at_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_frcst_id",
            "at_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tapplicanttypes_forecast_hist_pkey"),
        ),
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_index(
        op.f("tapplicanttypes_forecast_hist_transformed_at_idx"),
        "tapplicanttypes_forecast_hist",
        ["transformed_at"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_table(
        "tsynopsisattachment",
        sa.Column("syn_att_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("att_revision_number", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("att_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("mime_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("file_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("file_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("file_lob", postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column("file_lob_size", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("syn_att_folder_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("syn_att_id", name=op.f("tsynopsisattachment_pkey")),
        schema="test_108608949803588358968494026131317405857_legacy",
    )
    op.create_table(
        "lk_extract_type",
        sa.Column("extract_type_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("extract_type_id", name=op.f("lk_extract_type_pkey")),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "short_lived_internal_token",
        sa.Column("short_lived_internal_token_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "expires_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("is_valid", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "short_lived_internal_token_id", name=op.f("short_lived_internal_token_pkey")
        ),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "link_external_user",
        sa.Column("link_external_user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("external_user_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("external_user_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("email", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["external_user_type_id"],
            [
                "test_195495387774297757560388855302097562904_api.lk_external_user_type.external_user_type_id"
            ],
            name=op.f("link_external_user_external_user_type_id_lk_external_us_be53"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_195495387774297757560388855302097562904_api.user.user_id"],
            name=op.f("link_external_user_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint("link_external_user_id", name=op.f("link_external_user_pkey")),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("link_external_user_user_id_idx"),
        "link_external_user",
        ["user_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("link_external_user_external_user_type_id_idx"),
        "link_external_user",
        ["external_user_type_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("link_external_user_external_user_id_idx"),
        "link_external_user",
        ["external_user_id"],
        unique=True,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("link_external_user_email_idx"),
        "link_external_user",
        ["email"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "tfundinstr_synopsis",
        sa.Column("fi_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_syn_id", "fi_id", "opportunity_id", name=op.f("tfundinstr_synopsis_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_legacy",
    )
    op.create_table(
        "form_instruction",
        sa.Column("form_instruction_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("file_location", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("form_instruction_id", name="form_instruction_pkey"),
        schema="test_108608949803588358968494026131317405857_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "link_opportunity_summary_funding_category",
        sa.Column("opportunity_summary_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("funding_category_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("legacy_funding_category_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["funding_category_id"],
            [
                "test_195495387774297757560388855302097562904_api.lk_funding_category.funding_category_id"
            ],
            name=op.f("link_opportunity_summary_funding_category_funding_categ_dcd3"),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_summary_id"],
            [
                "test_195495387774297757560388855302097562904_api.opportunity_summary.opportunity_summary_id"
            ],
            name=op.f("link_opportunity_summary_funding_category_opportunity_s_5610"),
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_summary_id",
            "funding_category_id",
            name=op.f("link_opportunity_summary_funding_category_pkey"),
        ),
        sa.UniqueConstraint(
            "opportunity_summary_id",
            "legacy_funding_category_id",
            name=op.f("link_opportunity_summary_funding_category_opportunity_s_731c"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("link_opportunity_summary_funding_category_opportunity_s_9f79"),
        "link_opportunity_summary_funding_category",
        ["opportunity_summary_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("link_opportunity_summary_funding_category_funding_categ_17a0"),
        "link_opportunity_summary_funding_category",
        ["funding_category_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "tuser_account",
        sa.Column("user_account_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("full_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("email_address", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("phone_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("first_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("middle_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted_legacy", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_duplicate", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_active", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_email_confirm_pending", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "deactivated_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("mobile_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("user_account_id", name=op.f("tuser_account_pkey")),
        schema="test_200494001685262614012745264629780230410_legacy",
    )
    op.create_table(
        "tuser_account_mapper",
        sa.Column("user_account_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("ext_user_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("ext_issuer", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("ext_subject", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "last_auth_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("source_type", sa.TEXT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint(
            "user_account_id", "source_type", name=op.f("tuser_account_mapper_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_legacy",
    )
    op.create_table(
        "lk_sam_gov_import_type",
        sa.Column("sam_gov_import_type_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("sam_gov_import_type_id", name=op.f("lk_sam_gov_import_type_pkey")),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "tsynopsis",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "response_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "unarchive_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("syn_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_addr_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_contact_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("a_sa_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("tsynopsis_pkey")),
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_index(
        op.f("tsynopsis_transformed_at_idx"),
        "tsynopsis",
        ["transformed_at"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_table(
        "tfundinstr_forecast",
        sa.Column("fi_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_frcst_id", "fi_id", "opportunity_id", name=op.f("tfundinstr_forecast_pkey")
        ),
        schema="test_200494001685262614012745264629780230410_legacy",
    )
    op.create_table(
        "user_notification_log",
        sa.Column("user_notification_log_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("notification_reason", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("notification_sent", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_200494001685262614012745264629780230410_api.user.user_id"],
            name=op.f("user_notification_log_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "user_notification_log_id", name=op.f("user_notification_log_pkey")
        ),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("user_notification_log_user_id_idx"),
        "user_notification_log",
        ["user_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "opportunity_attachment",
        sa.Column("attachment_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("legacy_attachment_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("file_location", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("mime_type", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_size_bytes", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("legacy_folder_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_158415535871585582889006515973580025243_api.opportunity.opportunity_id"],
            name=op.f("opportunity_attachment_opportunity_id_opportunity_fkey"),
        ),
        sa.PrimaryKeyConstraint("attachment_id", name=op.f("opportunity_attachment_pkey")),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("opportunity_attachment_opportunity_id_idx"),
        "opportunity_attachment",
        ["opportunity_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("opportunity_attachment_legacy_attachment_id_idx"),
        "opportunity_attachment",
        ["legacy_attachment_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "tcompetition",
        sa.Column("comp_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("opp_cfda_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("competitionid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("familyid", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("competitiontitle", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("openingdate", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("closingdate", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("contactinfo", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("graceperiod", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("opentoapplicanttype", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("dialect", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_update", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("electronic_required", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("expected_appl_num", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("expected_appl_size", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("origcfdanum", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("origoppnumber", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ismulti", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_dwnld_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("package_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_wrkspc_compatible", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("comp_id", name=op.f("tcompetition_pkey")),
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_index(
        op.f("tcompetition_transformed_at_idx"),
        "tcompetition",
        ["transformed_at"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_table(
        "tfundinstr_forecast_hist",
        sa.Column("fi_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_frcst_id",
            "fi_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tfundinstr_forecast_hist_pkey"),
        ),
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_index(
        op.f("tfundinstr_forecast_hist_transformed_at_idx"),
        "tfundinstr_forecast_hist",
        ["transformed_at"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_table(
        "tfundinstr_forecast",
        sa.Column("fi_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_frcst_id", "fi_id", "opportunity_id", name=op.f("tfundinstr_forecast_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_index(
        op.f("tfundinstr_forecast_transformed_at_idx"),
        "tfundinstr_forecast",
        ["transformed_at"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_table(
        "tfundactcat_synopsis_hist",
        sa.Column("fac_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_syn_id",
            "fac_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tfundactcat_synopsis_hist_pkey"),
        ),
        schema="test_200494001685262614012745264629780230410_legacy",
    )
    op.create_table(
        "lk_form_family",
        sa.Column(
            "form_family_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_158415535871585582889006515973580025243_api.lk_form_family_form_family_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("form_family_id", name="lk_form_family_pkey"),
        schema="test_158415535871585582889006515973580025243_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "tsynopsis_hist",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "response_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "unarchive_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("syn_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_addr_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_contact_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("a_sa_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("action_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "action_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "opportunity_id", "revision_number", name=op.f("tsynopsis_hist_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_legacy",
    )
    op.create_table(
        "tforecast",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("forecast_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_synopsis_posting_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_appl_response_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("est_appl_response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_award_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_project_start_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("fiscal_year", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("tforecast_pkey")),
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_index(
        op.f("tforecast_transformed_at_idx"),
        "tforecast",
        ["transformed_at"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_table(
        "tsubscription_search",
        sa.Column("subscription_search_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("subscription_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("search_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("search_params", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_upd_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("subscription_search_id", name=op.f("tsubscription_search_pkey")),
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_index(
        op.f("tsubscription_search_transformed_at_idx"),
        "tsubscription_search",
        ["transformed_at"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_table(
        "organization",
        sa.Column("organization_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("sam_gov_entity_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["sam_gov_entity_id"],
            ["test_108608949803588358968494026131317405857_api.sam_gov_entity.sam_gov_entity_id"],
            name="organization_sam_gov_entity_id_sam_gov_entity_fkey",
        ),
        sa.PrimaryKeyConstraint("organization_id", name="organization_pkey"),
        sa.UniqueConstraint(
            "sam_gov_entity_id",
            name="organization_sam_gov_entity_id_uniq",
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_108608949803588358968494026131317405857_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "link_opportunity_summary_funding_instrument",
        sa.Column("opportunity_summary_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("funding_instrument_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("legacy_funding_instrument_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["funding_instrument_id"],
            [
                "test_108608949803588358968494026131317405857_api.lk_funding_instrument.funding_instrument_id"
            ],
            name=op.f("link_opportunity_summary_funding_instrument_funding_ins_be1e"),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_summary_id"],
            [
                "test_108608949803588358968494026131317405857_api.opportunity_summary.opportunity_summary_id"
            ],
            name=op.f("link_opportunity_summary_funding_instrument_opportunity_010d"),
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_summary_id",
            "funding_instrument_id",
            name=op.f("link_opportunity_summary_funding_instrument_pkey"),
        ),
        sa.UniqueConstraint(
            "opportunity_summary_id",
            "legacy_funding_instrument_id",
            name=op.f("link_opportunity_summary_funding_instrument_opportunity_5b1c"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("link_opportunity_summary_funding_instrument_opportunity_4597"),
        "link_opportunity_summary_funding_instrument",
        ["opportunity_summary_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("link_opportunity_summary_funding_instrument_funding_ins_94c9"),
        "link_opportunity_summary_funding_instrument",
        ["funding_instrument_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "tfundactcat_synopsis",
        sa.Column("fac_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_syn_id", "fac_id", "opportunity_id", name=op.f("tfundactcat_synopsis_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_legacy",
    )
    op.create_table(
        "opportunity_assistance_listing",
        sa.Column(
            "opportunity_assistance_listing_id", sa.UUID(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "legacy_opportunity_assistance_listing_id",
            sa.BIGINT(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("assistance_listing_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("program_title", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_108608949803588358968494026131317405857_api.opportunity.opportunity_id"],
            name="opportunity_assistance_listing_opportunity_id_opportunity_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_assistance_listing_id", name="opportunity_assistance_listing_pkey"
        ),
        schema="test_108608949803588358968494026131317405857_api",
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        op.f("opportunity_assistance_listing_opportunity_id_idx"),
        "opportunity_assistance_listing",
        ["opportunity_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("opportunity_assistance_listing_legacy_opportunity_assis_2774"),
        "opportunity_assistance_listing",
        ["legacy_opportunity_assistance_listing_id"],
        unique=True,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "competition_assistance_listing",
        sa.Column("competition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "opportunity_assistance_listing_id", sa.UUID(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["test_200494001685262614012745264629780230410_api.competition.competition_id"],
            name=op.f("competition_assistance_listing_competition_id_competition_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_assistance_listing_id"],
            [
                "test_200494001685262614012745264629780230410_api.opportunity_assistance_listing.opportunity_assistance_listing_id"
            ],
            name=op.f("competition_assistance_listing_opportunity_assistance_l_6b02"),
        ),
        sa.PrimaryKeyConstraint(
            "competition_id",
            "opportunity_assistance_listing_id",
            name=op.f("competition_assistance_listing_pkey"),
        ),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "user_token_session",
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("token_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "expires_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("is_valid", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_200494001685262614012745264629780230410_api.user.user_id"],
            name=op.f("user_token_session_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint("user_id", "token_id", name=op.f("user_token_session_pkey")),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "sam_gov_entity_import_type",
        sa.Column("sam_gov_entity_import_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("sam_gov_entity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("sam_gov_import_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["sam_gov_entity_id"],
            ["test_158415535871585582889006515973580025243_api.sam_gov_entity.sam_gov_entity_id"],
            name=op.f("sam_gov_entity_import_type_sam_gov_entity_id_sam_gov_en_40a2"),
        ),
        sa.ForeignKeyConstraint(
            ["sam_gov_import_type_id"],
            [
                "test_158415535871585582889006515973580025243_api.lk_sam_gov_import_type.sam_gov_import_type_id"
            ],
            name=op.f("sam_gov_entity_import_type_sam_gov_import_type_id_lk_sa_1bd4"),
        ),
        sa.PrimaryKeyConstraint(
            "sam_gov_entity_import_id", name=op.f("sam_gov_entity_import_type_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "organization_user",
        sa.Column("organization_user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("is_organization_owner", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("organization_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["test_108608949803588358968494026131317405857_api.organization.organization_id"],
            name=op.f("organization_user_organization_id_organization_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_108608949803588358968494026131317405857_api.user.user_id"],
            name=op.f("organization_user_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint("organization_user_id", name=op.f("organization_user_pkey")),
        sa.UniqueConstraint(
            "organization_id",
            "user_id",
            name=op.f("organization_user_organization_id_uniq"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("organization_user_user_id_idx"),
        "organization_user",
        ["user_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("organization_user_organization_id_idx"),
        "organization_user",
        ["organization_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "tsynopsis_hist",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "response_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "unarchive_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("syn_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_addr_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_contact_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("a_sa_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("action_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "action_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "opportunity_id", "revision_number", name=op.f("tsynopsis_hist_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_legacy",
    )
    op.create_table(
        "tgroups",
        sa.Column("keyfield", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("value", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("keyfield", name=op.f("tgroups_pkey")),
        schema="test_195495387774297757560388855302097562904_legacy",
    )
    op.create_table(
        "user_saved_search",
        sa.Column("saved_search_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "search_query",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_notified_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "searched_opportunity_ids",
            postgresql.ARRAY(sa.UUID()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_108608949803588358968494026131317405857_api.user.user_id"],
            name=op.f("user_saved_search_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint("saved_search_id", name=op.f("user_saved_search_pkey")),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("user_saved_search_user_id_idx"),
        "user_saved_search",
        ["user_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "application_submission",
        sa.Column("application_submission_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("application_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("file_location", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_size_bytes", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["application_id"],
            ["test_200494001685262614012745264629780230410_api.application.application_id"],
            name=op.f("application_submission_application_id_application_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "application_submission_id", name=op.f("application_submission_pkey")
        ),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "lk_applicant_type",
        sa.Column("applicant_type_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("applicant_type_id", name=op.f("lk_applicant_type_pkey")),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "lk_funding_instrument",
        sa.Column(
            "funding_instrument_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_195495387774297757560388855302097562904_api.lk_funding_instrument_funding_instrument_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("funding_instrument_id", name="lk_funding_instrument_pkey"),
        schema="test_195495387774297757560388855302097562904_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "tuser_account",
        sa.Column("user_account_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("full_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("email_address", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("phone_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("first_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("middle_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted_legacy", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_duplicate", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_active", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_email_confirm_pending", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "deactivated_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("mobile_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("user_account_id", name=op.f("tuser_account_pkey")),
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_index(
        op.f("tuser_account_transformed_at_idx"),
        "tuser_account",
        ["transformed_at"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_table(
        "tsynopsis",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "response_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "unarchive_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("syn_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_addr_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_contact_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("a_sa_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("tsynopsis_pkey")),
        schema="test_195495387774297757560388855302097562904_legacy",
    )
    op.create_table(
        "form",
        sa.Column("form_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("form_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("short_form_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("form_version", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("omb_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("legacy_form_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "active_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "inactive_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "form_json_schema",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "form_ui_schema",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("form_instruction_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "form_rule_schema",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["form_instruction_id"],
            [
                "test_195495387774297757560388855302097562904_api.form_instruction.form_instruction_id"
            ],
            name="form_form_instruction_id_form_instruction_fkey",
        ),
        sa.PrimaryKeyConstraint("form_id", name="form_pkey"),
        schema="test_195495387774297757560388855302097562904_api",
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        op.f("form_legacy_form_id_idx"),
        "form",
        ["legacy_form_id"],
        unique=True,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "tsynopsisattachment",
        sa.Column("syn_att_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("att_revision_number", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("att_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("mime_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("file_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("file_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("file_lob", postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column("file_lob_size", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("syn_att_folder_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("syn_att_id", name=op.f("tsynopsisattachment_pkey")),
        schema="test_200494001685262614012745264629780230410_legacy",
    )
    op.create_table(
        "tfundactcat_forecast_hist",
        sa.Column("fac_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_frcst_id",
            "fac_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tfundactcat_forecast_hist_pkey"),
        ),
        schema="test_195495387774297757560388855302097562904_legacy",
    )
    op.create_table(
        "lk_extract_type",
        sa.Column(
            "extract_type_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_108608949803588358968494026131317405857_api.lk_extract_type_extract_type_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("extract_type_id", name="lk_extract_type_pkey"),
        schema="test_108608949803588358968494026131317405857_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "tfundactcat_forecast_hist",
        sa.Column("fac_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_frcst_id",
            "fac_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tfundactcat_forecast_hist_pkey"),
        ),
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_index(
        op.f("tfundactcat_forecast_hist_transformed_at_idx"),
        "tfundactcat_forecast_hist",
        ["transformed_at"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_table(
        "topportunity",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("oppnumber", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("opptitle", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("owningagency", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("listed", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oppcategory", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("initial_opportunity_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modified_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("flag_2006", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("category_explanation", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_draft", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("topportunity_pkey")),
        schema="test_200494001685262614012745264629780230410_legacy",
    )
    op.create_table(
        "tapplicanttypes_synopsis_hist",
        sa.Column("at_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_syn_id",
            "at_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tapplicanttypes_synopsis_hist_pkey"),
        ),
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_index(
        op.f("tapplicanttypes_synopsis_hist_transformed_at_idx"),
        "tapplicanttypes_synopsis_hist",
        ["transformed_at"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_table(
        "tuser_account_mapper",
        sa.Column("user_account_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("ext_user_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("ext_issuer", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("ext_subject", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "last_auth_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("source_type", sa.TEXT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint(
            "user_account_id", "source_type", name=op.f("tuser_account_mapper_pkey")
        ),
        schema="test_200494001685262614012745264629780230410_legacy",
    )
    op.create_table(
        "topportunity_cfda",
        sa.Column("opp_cfda_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("cfdanumber", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("programtitle", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("origtoppid", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("oppidcfdanum", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("origoppnum", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opp_cfda_id", name=op.f("topportunity_cfda_pkey")),
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_index(
        op.f("topportunity_cfda_transformed_at_idx"),
        "topportunity_cfda",
        ["transformed_at"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_table(
        "tfundinstr_forecast_hist",
        sa.Column("fi_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_frcst_id",
            "fi_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tfundinstr_forecast_hist_pkey"),
        ),
        schema="test_195495387774297757560388855302097562904_legacy",
    )
    op.create_table(
        "lk_sam_gov_extract_type",
        sa.Column("sam_gov_extract_type_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "sam_gov_extract_type_id", name=op.f("lk_sam_gov_extract_type_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "tfundactcat_synopsis_hist",
        sa.Column("fac_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_syn_id",
            "fac_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tfundactcat_synopsis_hist_pkey"),
        ),
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_index(
        op.f("tfundactcat_synopsis_hist_transformed_at_idx"),
        "tfundactcat_synopsis_hist",
        ["transformed_at"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_table(
        "sam_extract_file",
        sa.Column("sam_extract_file_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("extract_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("extract_date", sa.DATE(), autoincrement=False, nullable=False),
        sa.Column("filename", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("s3_path", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("processing_status_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["extract_type_id"],
            [
                "test_200494001685262614012745264629780230410_api.lk_sam_gov_extract_type.sam_gov_extract_type_id"
            ],
            name=op.f("sam_extract_file_extract_type_id_lk_sam_gov_extract_type_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["processing_status_id"],
            [
                "test_200494001685262614012745264629780230410_api.lk_sam_gov_processing_status.sam_gov_processing_status_id"
            ],
            name=op.f("sam_extract_file_processing_status_id_lk_sam_gov_proces_24d0"),
        ),
        sa.PrimaryKeyConstraint("sam_extract_file_id", name=op.f("sam_extract_file_pkey")),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("sam_extract_file_processing_status_id_idx"),
        "sam_extract_file",
        ["processing_status_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("sam_extract_file_extract_type_id_idx"),
        "sam_extract_file",
        ["extract_type_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "topportunity",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("oppnumber", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("opptitle", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("owningagency", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("listed", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oppcategory", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("initial_opportunity_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modified_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("flag_2006", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("category_explanation", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_draft", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("topportunity_pkey")),
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_index(
        op.f("topportunity_transformed_at_idx"),
        "topportunity",
        ["transformed_at"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_table(
        "opportunity_attachment",
        sa.Column("attachment_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("legacy_attachment_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("file_location", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("mime_type", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_size_bytes", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("legacy_folder_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_108608949803588358968494026131317405857_api.opportunity.opportunity_id"],
            name=op.f("opportunity_attachment_opportunity_id_opportunity_fkey"),
        ),
        sa.PrimaryKeyConstraint("attachment_id", name=op.f("opportunity_attachment_pkey")),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("opportunity_attachment_opportunity_id_idx"),
        "opportunity_attachment",
        ["opportunity_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("opportunity_attachment_legacy_attachment_id_idx"),
        "opportunity_attachment",
        ["legacy_attachment_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "tuser_account_mapper",
        sa.Column("user_account_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("ext_user_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("ext_issuer", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("ext_subject", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "last_auth_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("source_type", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "user_account_id", "source_type", name=op.f("tuser_account_mapper_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_index(
        op.f("tuser_account_mapper_transformed_at_idx"),
        "tuser_account_mapper",
        ["transformed_at"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_table(
        "lk_agency_submission_notification_setting",
        sa.Column(
            "agency_submission_notification_setting_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_200494001685262614012745264629780230410_api.lk_agency_submission_notifica_agency_submission_notificatio_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "agency_submission_notification_setting_id",
            name="lk_agency_submission_notification_setting_pkey",
        ),
        schema="test_200494001685262614012745264629780230410_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "tsubscription_opportunity",
        sa.Column("subscription_opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("subscription_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_opp_deleted", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_upd_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint(
            "subscription_opportunity_id", name=op.f("tsubscription_opportunity_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_legacy",
    )
    op.create_table(
        "lk_form_family",
        sa.Column(
            "form_family_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_108608949803588358968494026131317405857_api.lk_form_family_form_family_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("form_family_id", name="lk_form_family_pkey"),
        schema="test_108608949803588358968494026131317405857_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "tfundactcat_forecast",
        sa.Column("fac_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_frcst_id", "fac_id", "opportunity_id", name=op.f("tfundactcat_forecast_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_legacy",
    )
    op.create_table(
        "opportunity_summary",
        sa.Column("opportunity_summary_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("legacy_opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("summary_description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_cost_sharing", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("is_forecast", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("post_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("close_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("close_date_description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("archive_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("unarchive_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("expected_number_of_awards", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "estimated_total_program_funding", sa.BIGINT(), autoincrement=False, nullable=True
        ),
        sa.Column("award_floor", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("additional_info_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("additional_info_url_description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("forecasted_post_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("forecasted_close_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column(
            "forecasted_close_date_description", sa.TEXT(), autoincrement=False, nullable=True
        ),
        sa.Column("forecasted_award_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("forecasted_project_start_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("fiscal_year", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("funding_category_description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "applicant_eligibility_description", sa.TEXT(), autoincrement=False, nullable=True
        ),
        sa.Column("agency_phone_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_contact_description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_email_address", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "agency_email_address_description", sa.TEXT(), autoincrement=False, nullable=True
        ),
        sa.Column("version_number", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("can_send_mail", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("publisher_user_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_200494001685262614012745264629780230410_api.opportunity.opportunity_id"],
            name="opportunity_summary_opportunity_id_opportunity_fkey",
        ),
        sa.PrimaryKeyConstraint("opportunity_summary_id", name="opportunity_summary_pkey"),
        sa.UniqueConstraint(
            "is_forecast",
            "opportunity_id",
            name="opportunity_summary_is_forecast_uniq",
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_200494001685262614012745264629780230410_api",
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        op.f("opportunity_summary_opportunity_id_idx"),
        "opportunity_summary",
        ["opportunity_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("opportunity_summary_legacy_opportunity_id_idx"),
        "opportunity_summary",
        ["legacy_opportunity_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "lk_opportunity_status",
        sa.Column("opportunity_status_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("opportunity_status_id", name=op.f("lk_opportunity_status_pkey")),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "competition",
        sa.Column("competition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("legacy_competition_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("public_competition_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("legacy_package_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("competition_title", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("opening_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("closing_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("grace_period", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("contact_info", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("form_family_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "opportunity_assistance_listing_id", sa.UUID(), autoincrement=False, nullable=True
        ),
        sa.Column("is_electronic_required", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("expected_application_count", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("expected_application_size_mb", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_multi_package", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("agency_download_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "is_legacy_workspace_compatible", sa.BOOLEAN(), autoincrement=False, nullable=True
        ),
        sa.Column("can_send_mail", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("is_simpler_grants_enabled", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["form_family_id"],
            ["test_158415535871585582889006515973580025243_api.lk_form_family.form_family_id"],
            name="competition_form_family_id_lk_form_family_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_assistance_listing_id"],
            [
                "test_158415535871585582889006515973580025243_api.opportunity_assistance_listing.opportunity_assistance_listing_id"
            ],
            name="competition_opportunity_assistance_listing_id_opportuni_6423",
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_158415535871585582889006515973580025243_api.opportunity.opportunity_id"],
            name="competition_opportunity_id_opportunity_fkey",
        ),
        sa.PrimaryKeyConstraint("competition_id", name="competition_pkey"),
        schema="test_158415535871585582889006515973580025243_api",
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        op.f("competition_opportunity_id_idx"),
        "competition",
        ["opportunity_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("competition_legacy_competition_id_idx"),
        "competition",
        ["legacy_competition_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("competition_form_family_id_idx"),
        "competition",
        ["form_family_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "user_opportunity_notification_log",
        sa.Column(
            "user_opportunity_notification_log_id", sa.UUID(), autoincrement=False, nullable=False
        ),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_158415535871585582889006515973580025243_api.opportunity.opportunity_id"],
            name=op.f("user_opportunity_notification_log_opportunity_id_opport_1f35"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_158415535871585582889006515973580025243_api.user.user_id"],
            name=op.f("user_opportunity_notification_log_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "user_opportunity_notification_log_id",
            name=op.f("user_opportunity_notification_log_pkey"),
        ),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("user_opportunity_notification_log_user_id_idx"),
        "user_opportunity_notification_log",
        ["user_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("user_opportunity_notification_log_opportunity_id_idx"),
        "user_opportunity_notification_log",
        ["opportunity_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "tinstructions",
        sa.Column("comp_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("extension", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("mimetype", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("instructions", postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column(
            "last_update", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("comp_id", name=op.f("tinstructions_pkey")),
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_index(
        op.f("tinstructions_transformed_at_idx"),
        "tinstructions",
        ["transformed_at"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_table(
        "tapplicanttypes_synopsis",
        sa.Column("at_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_syn_id", "at_id", "opportunity_id", name=op.f("tapplicanttypes_synopsis_pkey")
        ),
        schema="test_200494001685262614012745264629780230410_legacy",
    )
    op.create_table(
        "link_competition_open_to_applicant",
        sa.Column("competition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "competition_open_to_applicant_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["test_195495387774297757560388855302097562904_api.competition.competition_id"],
            name=op.f("link_competition_open_to_applicant_competition_id_compe_e8fc"),
        ),
        sa.ForeignKeyConstraint(
            ["competition_open_to_applicant_id"],
            [
                "test_195495387774297757560388855302097562904_api.lk_competition_open_to_applicant.competition_open_to_applicant_id"
            ],
            name=op.f("link_competition_open_to_applicant_competition_open_to__7a3d"),
        ),
        sa.PrimaryKeyConstraint(
            "competition_id",
            "competition_open_to_applicant_id",
            name=op.f("link_competition_open_to_applicant_pkey"),
        ),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "tfundinstr_synopsis_hist",
        sa.Column("fi_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_syn_id",
            "opportunity_id",
            "fi_id",
            "revision_number",
            name=op.f("tfundinstr_synopsis_hist_pkey"),
        ),
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_index(
        op.f("tfundinstr_synopsis_hist_transformed_at_idx"),
        "tfundinstr_synopsis_hist",
        ["transformed_at"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_table(
        "tsubscription",
        sa.Column("subscription_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("user_account_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("newsletters", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("alerts", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("all_new_opps", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("opportunities", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("saved_searches", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_upd_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("subscription_id", name=op.f("tsubscription_pkey")),
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_index(
        op.f("tsubscription_transformed_at_idx"),
        "tsubscription",
        ["transformed_at"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_table(
        "sam_gov_entity",
        sa.Column("sam_gov_entity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("uei", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("legal_business_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("expiration_date", sa.DATE(), autoincrement=False, nullable=False),
        sa.Column("initial_registration_date", sa.DATE(), autoincrement=False, nullable=False),
        sa.Column("last_update_date", sa.DATE(), autoincrement=False, nullable=False),
        sa.Column("ebiz_poc_email", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("ebiz_poc_first_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("ebiz_poc_last_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("has_debt_subject_to_offset", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("has_exclusion_status", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("eft_indicator", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_inactive", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("inactivated_at", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("sam_gov_entity_id", name="sam_gov_entity_pkey"),
        schema="test_200494001685262614012745264629780230410_api",
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        op.f("sam_gov_entity_uei_idx"),
        "sam_gov_entity",
        ["uei"],
        unique=True,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("sam_gov_entity_ebiz_poc_email_idx"),
        "sam_gov_entity",
        ["ebiz_poc_email"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "opportunity_change_audit",
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("is_loaded_to_search", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("is_loaded_to_version_table", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_158415535871585582889006515973580025243_api.opportunity.opportunity_id"],
            name=op.f("opportunity_change_audit_opportunity_id_opportunity_fkey"),
        ),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("opportunity_change_audit_pkey")),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("opportunity_change_audit_opportunity_id_idx"),
        "opportunity_change_audit",
        ["opportunity_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("opportunity_change_audit_is_loaded_to_version_table_idx"),
        "opportunity_change_audit",
        ["is_loaded_to_version_table"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "sam_extract_file",
        sa.Column("sam_extract_file_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("extract_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("extract_date", sa.DATE(), autoincrement=False, nullable=False),
        sa.Column("filename", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("s3_path", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("processing_status_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["extract_type_id"],
            [
                "test_158415535871585582889006515973580025243_api.lk_sam_gov_extract_type.sam_gov_extract_type_id"
            ],
            name=op.f("sam_extract_file_extract_type_id_lk_sam_gov_extract_type_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["processing_status_id"],
            [
                "test_158415535871585582889006515973580025243_api.lk_sam_gov_processing_status.sam_gov_processing_status_id"
            ],
            name=op.f("sam_extract_file_processing_status_id_lk_sam_gov_proces_24d0"),
        ),
        sa.PrimaryKeyConstraint("sam_extract_file_id", name=op.f("sam_extract_file_pkey")),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("sam_extract_file_processing_status_id_idx"),
        "sam_extract_file",
        ["processing_status_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("sam_extract_file_extract_type_id_idx"),
        "sam_extract_file",
        ["extract_type_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "application_attachment",
        sa.Column("application_attachment_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("application_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("file_location", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("mime_type", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_size_bytes", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["application_id"],
            ["test_200494001685262614012745264629780230410_api.application.application_id"],
            name=op.f("application_attachment_application_id_application_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_200494001685262614012745264629780230410_api.user.user_id"],
            name=op.f("application_attachment_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "application_attachment_id", name=op.f("application_attachment_pkey")
        ),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "sam_gov_entity_import_type",
        sa.Column("sam_gov_entity_import_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("sam_gov_entity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("sam_gov_import_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["sam_gov_entity_id"],
            ["test_108608949803588358968494026131317405857_api.sam_gov_entity.sam_gov_entity_id"],
            name=op.f("sam_gov_entity_import_type_sam_gov_entity_id_sam_gov_en_40a2"),
        ),
        sa.ForeignKeyConstraint(
            ["sam_gov_import_type_id"],
            [
                "test_108608949803588358968494026131317405857_api.lk_sam_gov_import_type.sam_gov_import_type_id"
            ],
            name=op.f("sam_gov_entity_import_type_sam_gov_import_type_id_lk_sa_1bd4"),
        ),
        sa.PrimaryKeyConstraint(
            "sam_gov_entity_import_id", name=op.f("sam_gov_entity_import_type_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "link_agency_download_file_type",
        sa.Column("agency_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "agency_download_file_type_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["agency_download_file_type_id"],
            [
                "test_200494001685262614012745264629780230410_api.lk_agency_download_file_type.agency_download_file_type_id"
            ],
            name=op.f("link_agency_download_file_type_agency_download_file_typ_5f33"),
        ),
        sa.ForeignKeyConstraint(
            ["agency_id"],
            ["test_200494001685262614012745264629780230410_api.agency.agency_id"],
            name=op.f("link_agency_download_file_type_agency_id_agency_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "agency_id",
            "agency_download_file_type_id",
            name=op.f("link_agency_download_file_type_pkey"),
        ),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "application_user",
        sa.Column("application_user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("application_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("is_application_owner", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["application_id"],
            ["test_195495387774297757560388855302097562904_api.application.application_id"],
            name=op.f("application_user_application_id_application_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_195495387774297757560388855302097562904_api.user.user_id"],
            name=op.f("application_user_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint("application_user_id", name=op.f("application_user_pkey")),
        sa.UniqueConstraint(
            "application_id",
            "user_id",
            name=op.f("application_user_application_id_uniq"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("application_user_user_id_idx"),
        "application_user",
        ["user_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("application_user_application_id_idx"),
        "application_user",
        ["application_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "tfundactcat_forecast",
        sa.Column("fac_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_frcst_id", "fac_id", "opportunity_id", name=op.f("tfundactcat_forecast_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_legacy",
    )
    op.create_table(
        "application_user",
        sa.Column("application_user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("application_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("is_application_owner", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["application_id"],
            ["test_108608949803588358968494026131317405857_api.application.application_id"],
            name=op.f("application_user_application_id_application_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_108608949803588358968494026131317405857_api.user.user_id"],
            name=op.f("application_user_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint("application_user_id", name=op.f("application_user_pkey")),
        sa.UniqueConstraint(
            "application_id",
            "user_id",
            name=op.f("application_user_application_id_uniq"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("application_user_user_id_idx"),
        "application_user",
        ["user_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("application_user_application_id_idx"),
        "application_user",
        ["application_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "tsynopsisattachment",
        sa.Column("syn_att_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("att_revision_number", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("att_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("mime_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("file_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("file_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("file_lob", postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column("file_lob_size", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("syn_att_folder_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("syn_att_id", name=op.f("tsynopsisattachment_pkey")),
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_index(
        op.f("tsynopsisattachment_transformed_at_idx"),
        "tsynopsisattachment",
        ["transformed_at"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_table(
        "opportunity",
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("legacy_opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("opportunity_title", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("opportunity_category_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("category_explanation", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_draft", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("modified_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_user_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_category_id"],
            [
                "test_195495387774297757560388855302097562904_api.lk_opportunity_category.opportunity_category_id"
            ],
            name="opportunity_opportunity_category_id_lk_opportunity_cate_c6e9",
        ),
        sa.PrimaryKeyConstraint("opportunity_id", name="opportunity_pkey"),
        schema="test_195495387774297757560388855302097562904_api",
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        op.f("opportunity_opportunity_title_idx"),
        "opportunity",
        ["opportunity_title"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("opportunity_opportunity_category_id_idx"),
        "opportunity",
        ["opportunity_category_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("opportunity_legacy_opportunity_id_idx"),
        "opportunity",
        ["legacy_opportunity_id"],
        unique=True,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("opportunity_is_draft_idx"),
        "opportunity",
        ["is_draft"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("opportunity_agency_code_idx"),
        "opportunity",
        ["agency_code"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "lk_funding_category",
        sa.Column("funding_category_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("funding_category_id", name=op.f("lk_funding_category_pkey")),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "application",
        sa.Column("application_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("competition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("application_status_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("application_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("organization_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["application_status_id"],
            [
                "test_158415535871585582889006515973580025243_api.lk_application_status.application_status_id"
            ],
            name=op.f("application_application_status_id_lk_application_status_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["test_158415535871585582889006515973580025243_api.competition.competition_id"],
            name=op.f("application_competition_id_competition_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["test_158415535871585582889006515973580025243_api.organization.organization_id"],
            name=op.f("application_organization_id_organization_fkey"),
        ),
        sa.PrimaryKeyConstraint("application_id", name=op.f("application_pkey")),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("application_competition_id_idx"),
        "application",
        ["competition_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "tapplicanttypes_synopsis",
        sa.Column("at_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_syn_id", "at_id", "opportunity_id", name=op.f("tapplicanttypes_synopsis_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_index(
        op.f("tapplicanttypes_synopsis_transformed_at_idx"),
        "tapplicanttypes_synopsis",
        ["transformed_at"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_table(
        "tapplicanttypes_forecast_hist",
        sa.Column("at_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_frcst_id",
            "at_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tapplicanttypes_forecast_hist_pkey"),
        ),
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_index(
        op.f("tapplicanttypes_forecast_hist_transformed_at_idx"),
        "tapplicanttypes_forecast_hist",
        ["transformed_at"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_table(
        "topportunity_cfda",
        sa.Column("opp_cfda_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("cfdanumber", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("programtitle", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("origtoppid", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("oppidcfdanum", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("origoppnum", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opp_cfda_id", name=op.f("topportunity_cfda_pkey")),
        schema="test_195495387774297757560388855302097562904_legacy",
    )
    op.create_table(
        "competition_form",
        sa.Column("competition_form_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("competition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("form_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("is_required", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["test_158415535871585582889006515973580025243_api.competition.competition_id"],
            name=op.f("competition_form_competition_id_competition_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["form_id"],
            ["test_158415535871585582889006515973580025243_api.form.form_id"],
            name=op.f("competition_form_form_id_form_fkey"),
        ),
        sa.PrimaryKeyConstraint("competition_form_id", name=op.f("competition_form_pkey")),
        sa.UniqueConstraint(
            "competition_id",
            "form_id",
            name=op.f("competition_form_competition_id_uniq"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("competition_form_competition_id_idx"),
        "competition_form",
        ["competition_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "opportunity_summary",
        sa.Column("opportunity_summary_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("legacy_opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("summary_description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_cost_sharing", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("is_forecast", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("post_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("close_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("close_date_description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("archive_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("unarchive_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("expected_number_of_awards", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "estimated_total_program_funding", sa.BIGINT(), autoincrement=False, nullable=True
        ),
        sa.Column("award_floor", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("additional_info_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("additional_info_url_description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("forecasted_post_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("forecasted_close_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column(
            "forecasted_close_date_description", sa.TEXT(), autoincrement=False, nullable=True
        ),
        sa.Column("forecasted_award_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("forecasted_project_start_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("fiscal_year", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("funding_category_description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "applicant_eligibility_description", sa.TEXT(), autoincrement=False, nullable=True
        ),
        sa.Column("agency_phone_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_contact_description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_email_address", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "agency_email_address_description", sa.TEXT(), autoincrement=False, nullable=True
        ),
        sa.Column("version_number", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("can_send_mail", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("publisher_user_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_158415535871585582889006515973580025243_api.opportunity.opportunity_id"],
            name="opportunity_summary_opportunity_id_opportunity_fkey",
        ),
        sa.PrimaryKeyConstraint("opportunity_summary_id", name="opportunity_summary_pkey"),
        sa.UniqueConstraint(
            "is_forecast",
            "opportunity_id",
            name="opportunity_summary_is_forecast_uniq",
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_158415535871585582889006515973580025243_api",
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        op.f("opportunity_summary_opportunity_id_idx"),
        "opportunity_summary",
        ["opportunity_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("opportunity_summary_legacy_opportunity_id_idx"),
        "opportunity_summary",
        ["legacy_opportunity_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "tfundinstr_synopsis",
        sa.Column("fi_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_syn_id", "fi_id", "opportunity_id", name=op.f("tfundinstr_synopsis_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_legacy",
    )
    op.create_table(
        "tapplicanttypes_forecast",
        sa.Column("at_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_frcst_id", "at_id", "opportunity_id", name=op.f("tapplicanttypes_forecast_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_legacy",
    )
    op.create_table(
        "opportunity_version",
        sa.Column("opportunity_version_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "opportunity_data",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_195495387774297757560388855302097562904_api.opportunity.opportunity_id"],
            name=op.f("opportunity_version_opportunity_id_opportunity_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_version_id", "opportunity_id", name=op.f("opportunity_version_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "login_gov_state",
        sa.Column("login_gov_state_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("nonce", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("login_gov_state_id", name=op.f("login_gov_state_pkey")),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "job_log",
        sa.Column("job_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("job_type", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("job_status_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "metrics", postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["job_status_id"],
            ["test_158415535871585582889006515973580025243_api.lk_job_status.job_status_id"],
            name=op.f("job_log_job_status_id_lk_job_status_fkey"),
        ),
        sa.PrimaryKeyConstraint("job_id", name=op.f("job_log_pkey")),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "sam_gov_entity",
        sa.Column("sam_gov_entity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("uei", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("legal_business_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("expiration_date", sa.DATE(), autoincrement=False, nullable=False),
        sa.Column("initial_registration_date", sa.DATE(), autoincrement=False, nullable=False),
        sa.Column("last_update_date", sa.DATE(), autoincrement=False, nullable=False),
        sa.Column("ebiz_poc_email", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("ebiz_poc_first_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("ebiz_poc_last_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("has_debt_subject_to_offset", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("has_exclusion_status", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("eft_indicator", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_inactive", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("inactivated_at", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("sam_gov_entity_id", name=op.f("sam_gov_entity_pkey")),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("sam_gov_entity_uei_idx"),
        "sam_gov_entity",
        ["uei"],
        unique=True,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("sam_gov_entity_ebiz_poc_email_idx"),
        "sam_gov_entity",
        ["ebiz_poc_email"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "current_opportunity_summary",
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_summary_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_status_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_108608949803588358968494026131317405857_api.opportunity.opportunity_id"],
            name=op.f("current_opportunity_summary_opportunity_id_opportunity_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_status_id"],
            [
                "test_108608949803588358968494026131317405857_api.lk_opportunity_status.opportunity_status_id"
            ],
            name=op.f("current_opportunity_summary_opportunity_status_id_lk_op_3147"),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_summary_id"],
            [
                "test_108608949803588358968494026131317405857_api.opportunity_summary.opportunity_summary_id"
            ],
            name=op.f("current_opportunity_summary_opportunity_summary_id_oppo_8251"),
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_id",
            "opportunity_summary_id",
            name=op.f("current_opportunity_summary_pkey"),
        ),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("current_opportunity_summary_opportunity_summary_id_idx"),
        "current_opportunity_summary",
        ["opportunity_summary_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("current_opportunity_summary_opportunity_status_id_idx"),
        "current_opportunity_summary",
        ["opportunity_status_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("current_opportunity_summary_opportunity_id_idx"),
        "current_opportunity_summary",
        ["opportunity_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "agency_contact_info",
        sa.Column("agency_contact_info_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("contact_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("address_line_1", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("address_line_2", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("city", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("state", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("zip_code", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("phone_number", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("primary_email", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("secondary_email", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("agency_contact_info_id", name=op.f("agency_contact_info_pkey")),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "user",
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("user_id", name="user_pkey"),
        schema="test_158415535871585582889006515973580025243_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "tfundinstr_synopsis",
        sa.Column("fi_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_syn_id", "fi_id", "opportunity_id", name=op.f("tfundinstr_synopsis_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_legacy",
    )
    op.create_table(
        "extract_metadata",
        sa.Column("extract_metadata_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("extract_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("file_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_path", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_size_bytes", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["extract_type_id"],
            ["test_195495387774297757560388855302097562904_api.lk_extract_type.extract_type_id"],
            name=op.f("extract_metadata_extract_type_id_lk_extract_type_fkey"),
        ),
        sa.PrimaryKeyConstraint("extract_metadata_id", name=op.f("extract_metadata_pkey")),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "tapplicanttypes_forecast",
        sa.Column("at_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_frcst_id", "at_id", "opportunity_id", name=op.f("tapplicanttypes_forecast_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_legacy",
    )
    op.create_table(
        "competition_instruction",
        sa.Column("competition_instruction_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("competition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("file_location", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["test_200494001685262614012745264629780230410_api.competition.competition_id"],
            name=op.f("competition_instruction_competition_id_competition_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "competition_instruction_id",
            "competition_id",
            name=op.f("competition_instruction_pkey"),
        ),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "tcompetition",
        sa.Column("comp_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("opp_cfda_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("competitionid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("familyid", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("competitiontitle", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("openingdate", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("closingdate", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("contactinfo", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("graceperiod", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("opentoapplicanttype", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("dialect", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_update", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("electronic_required", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("expected_appl_num", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("expected_appl_size", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("origcfdanum", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("origoppnumber", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ismulti", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_dwnld_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("package_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_wrkspc_compatible", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("comp_id", name=op.f("tcompetition_pkey")),
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_index(
        op.f("tcompetition_transformed_at_idx"),
        "tcompetition",
        ["transformed_at"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_table(
        "lk_agency_download_file_type",
        sa.Column("agency_download_file_type_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "agency_download_file_type_id", name=op.f("lk_agency_download_file_type_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "extract_metadata",
        sa.Column("extract_metadata_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("extract_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("file_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_path", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_size_bytes", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["extract_type_id"],
            ["test_108608949803588358968494026131317405857_api.lk_extract_type.extract_type_id"],
            name=op.f("extract_metadata_extract_type_id_lk_extract_type_fkey"),
        ),
        sa.PrimaryKeyConstraint("extract_metadata_id", name=op.f("extract_metadata_pkey")),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "tsubscription_search",
        sa.Column("subscription_search_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("subscription_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("search_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("search_params", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_upd_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("subscription_search_id", name=op.f("tsubscription_search_pkey")),
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_index(
        op.f("tsubscription_search_transformed_at_idx"),
        "tsubscription_search",
        ["transformed_at"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_table(
        "tfundinstr_synopsis_hist",
        sa.Column("fi_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_syn_id",
            "opportunity_id",
            "fi_id",
            "revision_number",
            name=op.f("tfundinstr_synopsis_hist_pkey"),
        ),
        schema="test_195495387774297757560388855302097562904_legacy",
    )
    op.create_table(
        "lk_external_user_type",
        sa.Column("external_user_type_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("external_user_type_id", name=op.f("lk_external_user_type_pkey")),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "lk_opportunity_status",
        sa.Column("opportunity_status_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("opportunity_status_id", name=op.f("lk_opportunity_status_pkey")),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "tsynopsis_hist",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "response_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "unarchive_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("syn_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_addr_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_contact_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("a_sa_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("action_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "action_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "opportunity_id", "revision_number", name=op.f("tsynopsis_hist_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_index(
        op.f("tsynopsis_hist_transformed_at_idx"),
        "tsynopsis_hist",
        ["transformed_at"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_table(
        "competition",
        sa.Column("competition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("legacy_competition_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("public_competition_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("legacy_package_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("competition_title", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("opening_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("closing_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("grace_period", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("contact_info", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("form_family_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "opportunity_assistance_listing_id", sa.UUID(), autoincrement=False, nullable=True
        ),
        sa.Column("is_electronic_required", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("expected_application_count", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("expected_application_size_mb", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_multi_package", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("agency_download_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "is_legacy_workspace_compatible", sa.BOOLEAN(), autoincrement=False, nullable=True
        ),
        sa.Column("can_send_mail", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("is_simpler_grants_enabled", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["form_family_id"],
            ["test_108608949803588358968494026131317405857_api.lk_form_family.form_family_id"],
            name="competition_form_family_id_lk_form_family_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_assistance_listing_id"],
            [
                "test_108608949803588358968494026131317405857_api.opportunity_assistance_listing.opportunity_assistance_listing_id"
            ],
            name="competition_opportunity_assistance_listing_id_opportuni_6423",
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_108608949803588358968494026131317405857_api.opportunity.opportunity_id"],
            name="competition_opportunity_id_opportunity_fkey",
        ),
        sa.PrimaryKeyConstraint("competition_id", name="competition_pkey"),
        schema="test_108608949803588358968494026131317405857_api",
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        op.f("competition_opportunity_id_idx"),
        "competition",
        ["opportunity_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("competition_legacy_competition_id_idx"),
        "competition",
        ["legacy_competition_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("competition_form_family_id_idx"),
        "competition",
        ["form_family_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "tapplicanttypes_forecast_hist",
        sa.Column("at_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_frcst_id",
            "at_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tapplicanttypes_forecast_hist_pkey"),
        ),
        schema="test_195495387774297757560388855302097562904_legacy",
    )
    op.create_table(
        "tgroups",
        sa.Column("keyfield", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("value", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("keyfield", name=op.f("tgroups_pkey")),
        schema="test_158415535871585582889006515973580025243_legacy",
    )
    op.create_table(
        "opportunity_change_audit",
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("is_loaded_to_search", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("is_loaded_to_version_table", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_108608949803588358968494026131317405857_api.opportunity.opportunity_id"],
            name=op.f("opportunity_change_audit_opportunity_id_opportunity_fkey"),
        ),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("opportunity_change_audit_pkey")),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("opportunity_change_audit_opportunity_id_idx"),
        "opportunity_change_audit",
        ["opportunity_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("opportunity_change_audit_is_loaded_to_version_table_idx"),
        "opportunity_change_audit",
        ["is_loaded_to_version_table"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "lk_job_status",
        sa.Column("job_status_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("job_status_id", name=op.f("lk_job_status_pkey")),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "lk_application_status",
        sa.Column("application_status_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("application_status_id", name=op.f("lk_application_status_pkey")),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "agency",
        sa.Column("agency_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("agency_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("sub_agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("assistance_listing_number", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "agency_submission_notification_setting_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("agency_contact_info_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("is_test_agency", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("ldap_group", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("label", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_multilevel_agency", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("is_multiproject", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "has_system_to_system_certificate", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "can_view_packages_in_grace_period", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.Column("is_image_workspace_enabled", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "is_validation_workspace_enabled", sa.BOOLEAN(), autoincrement=False, nullable=False
        ),
        sa.Column("top_level_agency_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["agency_contact_info_id"],
            [
                "test_200494001685262614012745264629780230410_api.agency_contact_info.agency_contact_info_id"
            ],
            name=op.f("agency_agency_contact_info_id_agency_contact_info_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["agency_submission_notification_setting_id"],
            [
                "test_200494001685262614012745264629780230410_api.lk_agency_submission_notification_setting.agency_submission_notification_setting_id"
            ],
            name=op.f("agency_agency_submission_notification_setting_id_lk_age_592f"),
        ),
        sa.ForeignKeyConstraint(
            ["top_level_agency_id"],
            ["test_200494001685262614012745264629780230410_api.agency.agency_id"],
            name=op.f("agency_top_level_agency_id_agency_fkey"),
        ),
        sa.PrimaryKeyConstraint("agency_id", name=op.f("agency_pkey")),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("agency_agency_code_idx"),
        "agency",
        ["agency_code"],
        unique=True,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "tfundactcat_synopsis",
        sa.Column("fac_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_syn_id", "fac_id", "opportunity_id", name=op.f("tfundactcat_synopsis_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_legacy",
    )
    op.create_table(
        "tsynopsis",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "response_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "unarchive_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("syn_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_addr_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_contact_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("a_sa_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("tsynopsis_pkey")),
        schema="test_158415535871585582889006515973580025243_legacy",
    )
    op.create_table(
        "lk_funding_category",
        sa.Column("funding_category_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("funding_category_id", name=op.f("lk_funding_category_pkey")),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "application",
        sa.Column("application_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("competition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("application_status_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("application_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("organization_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["application_status_id"],
            [
                "test_108608949803588358968494026131317405857_api.lk_application_status.application_status_id"
            ],
            name=op.f("application_application_status_id_lk_application_status_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["test_108608949803588358968494026131317405857_api.competition.competition_id"],
            name=op.f("application_competition_id_competition_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["test_108608949803588358968494026131317405857_api.organization.organization_id"],
            name=op.f("application_organization_id_organization_fkey"),
        ),
        sa.PrimaryKeyConstraint("application_id", name=op.f("application_pkey")),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("application_competition_id_idx"),
        "application",
        ["competition_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "tuser_account",
        sa.Column("user_account_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("full_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("email_address", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("phone_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("first_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("middle_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted_legacy", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_duplicate", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_active", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_email_confirm_pending", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "deactivated_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("mobile_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("user_account_id", name=op.f("tuser_account_pkey")),
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_index(
        op.f("tuser_account_transformed_at_idx"),
        "tuser_account",
        ["transformed_at"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_table(
        "competition_form",
        sa.Column("competition_form_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("competition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("form_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("is_required", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["test_108608949803588358968494026131317405857_api.competition.competition_id"],
            name=op.f("competition_form_competition_id_competition_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["form_id"],
            ["test_108608949803588358968494026131317405857_api.form.form_id"],
            name=op.f("competition_form_form_id_form_fkey"),
        ),
        sa.PrimaryKeyConstraint("competition_form_id", name=op.f("competition_form_pkey")),
        sa.UniqueConstraint(
            "competition_id",
            "form_id",
            name=op.f("competition_form_competition_id_uniq"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("competition_form_competition_id_idx"),
        "competition_form",
        ["competition_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "tfundinstr_forecast",
        sa.Column("fi_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_frcst_id", "fi_id", "opportunity_id", name=op.f("tfundinstr_forecast_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_index(
        op.f("tfundinstr_forecast_transformed_at_idx"),
        "tfundinstr_forecast",
        ["transformed_at"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_table(
        "tapplicanttypes_synopsis_hist",
        sa.Column("at_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_syn_id",
            "at_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tapplicanttypes_synopsis_hist_pkey"),
        ),
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_index(
        op.f("tapplicanttypes_synopsis_hist_transformed_at_idx"),
        "tapplicanttypes_synopsis_hist",
        ["transformed_at"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_table(
        "tgroups",
        sa.Column("keyfield", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("value", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("keyfield", name=op.f("tgroups_pkey")),
        schema="test_108608949803588358968494026131317405857_legacy",
    )
    op.create_table(
        "tforecast_hist",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("forecast_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_synopsis_posting_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_appl_response_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("est_appl_response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_award_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_project_start_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("fiscal_year", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("action_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "action_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "opportunity_id", "revision_number", name=op.f("tforecast_hist_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_legacy",
    )
    op.create_table(
        "suppressed_email",
        sa.Column("suppressed_email_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("email", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("reason", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_update_time",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("suppressed_email_id", name=op.f("suppressed_email_pkey")),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("suppressed_email_last_update_time_idx"),
        "suppressed_email",
        ["last_update_time"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("suppressed_email_email_idx"),
        "suppressed_email",
        ["email"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "tfundinstr_forecast_hist",
        sa.Column("fi_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_frcst_id",
            "fi_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tfundinstr_forecast_hist_pkey"),
        ),
        schema="test_158415535871585582889006515973580025243_legacy",
    )
    op.create_table(
        "suppressed_email",
        sa.Column("suppressed_email_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("email", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("reason", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_update_time",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("suppressed_email_id", name=op.f("suppressed_email_pkey")),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("suppressed_email_last_update_time_idx"),
        "suppressed_email",
        ["last_update_time"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("suppressed_email_email_idx"),
        "suppressed_email",
        ["email"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "job_log",
        sa.Column("job_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("job_type", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("job_status_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "metrics", postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["job_status_id"],
            ["test_108608949803588358968494026131317405857_api.lk_job_status.job_status_id"],
            name=op.f("job_log_job_status_id_lk_job_status_fkey"),
        ),
        sa.PrimaryKeyConstraint("job_id", name=op.f("job_log_pkey")),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "link_opportunity_summary_applicant_type",
        sa.Column("opportunity_summary_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("applicant_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("legacy_applicant_type_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["applicant_type_id"],
            [
                "test_158415535871585582889006515973580025243_api.lk_applicant_type.applicant_type_id"
            ],
            name=op.f("link_opportunity_summary_applicant_type_applicant_type__c136"),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_summary_id"],
            [
                "test_158415535871585582889006515973580025243_api.opportunity_summary.opportunity_summary_id"
            ],
            name=op.f("link_opportunity_summary_applicant_type_opportunity_sum_f95d"),
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_summary_id",
            "applicant_type_id",
            name=op.f("link_opportunity_summary_applicant_type_pkey"),
        ),
        sa.UniqueConstraint(
            "opportunity_summary_id",
            "legacy_applicant_type_id",
            name=op.f("link_opportunity_summary_applicant_type_opportunity_sum_a7cd"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("link_opportunity_summary_applicant_type_opportunity_sum_fee2"),
        "link_opportunity_summary_applicant_type",
        ["opportunity_summary_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("link_opportunity_summary_applicant_type_applicant_type_id_idx"),
        "link_opportunity_summary_applicant_type",
        ["applicant_type_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "tsynopsis",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "response_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "unarchive_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("syn_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_addr_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_contact_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("a_sa_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("tsynopsis_pkey")),
        schema="test_108608949803588358968494026131317405857_legacy",
    )
    op.create_table(
        "lk_opportunity_category",
        sa.Column(
            "opportunity_category_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('test_195495387774297757560388855302097562904_api.lk_opportunity_category_opportunity_category_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("opportunity_category_id", name="lk_opportunity_category_pkey"),
        schema="test_195495387774297757560388855302097562904_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "tfundactcat_synopsis_hist",
        sa.Column("fac_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_syn_id",
            "fac_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tfundactcat_synopsis_hist_pkey"),
        ),
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_index(
        op.f("tfundactcat_synopsis_hist_transformed_at_idx"),
        "tfundactcat_synopsis_hist",
        ["transformed_at"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_table(
        "user",
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("user_id", name=op.f("user_pkey")),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "link_external_user",
        sa.Column("link_external_user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("external_user_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("external_user_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("email", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["external_user_type_id"],
            [
                "test_200494001685262614012745264629780230410_api.lk_external_user_type.external_user_type_id"
            ],
            name=op.f("link_external_user_external_user_type_id_lk_external_us_be53"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_200494001685262614012745264629780230410_api.user.user_id"],
            name=op.f("link_external_user_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint("link_external_user_id", name=op.f("link_external_user_pkey")),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("link_external_user_user_id_idx"),
        "link_external_user",
        ["user_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("link_external_user_external_user_type_id_idx"),
        "link_external_user",
        ["external_user_type_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("link_external_user_external_user_id_idx"),
        "link_external_user",
        ["external_user_id"],
        unique=True,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("link_external_user_email_idx"),
        "link_external_user",
        ["email"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "link_opportunity_summary_funding_category",
        sa.Column("opportunity_summary_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("funding_category_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("legacy_funding_category_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["funding_category_id"],
            [
                "test_200494001685262614012745264629780230410_api.lk_funding_category.funding_category_id"
            ],
            name=op.f("link_opportunity_summary_funding_category_funding_categ_dcd3"),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_summary_id"],
            [
                "test_200494001685262614012745264629780230410_api.opportunity_summary.opportunity_summary_id"
            ],
            name=op.f("link_opportunity_summary_funding_category_opportunity_s_5610"),
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_summary_id",
            "funding_category_id",
            name=op.f("link_opportunity_summary_funding_category_pkey"),
        ),
        sa.UniqueConstraint(
            "opportunity_summary_id",
            "legacy_funding_category_id",
            name=op.f("link_opportunity_summary_funding_category_opportunity_s_731c"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("link_opportunity_summary_funding_category_opportunity_s_9f79"),
        "link_opportunity_summary_funding_category",
        ["opportunity_summary_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("link_opportunity_summary_funding_category_funding_categ_17a0"),
        "link_opportunity_summary_funding_category",
        ["funding_category_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "tfundinstr_forecast_hist",
        sa.Column("fi_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_frcst_id",
            "fi_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tfundinstr_forecast_hist_pkey"),
        ),
        schema="test_108608949803588358968494026131317405857_legacy",
    )
    op.create_table(
        "lk_sam_gov_import_type",
        sa.Column("sam_gov_import_type_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("sam_gov_import_type_id", name=op.f("lk_sam_gov_import_type_pkey")),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "lk_sam_gov_processing_status",
        sa.Column("sam_gov_processing_status_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "sam_gov_processing_status_id", name=op.f("lk_sam_gov_processing_status_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "tcompetition",
        sa.Column("comp_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("opp_cfda_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("competitionid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("familyid", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("competitiontitle", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("openingdate", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("closingdate", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("contactinfo", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("graceperiod", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("opentoapplicanttype", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("dialect", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_update", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("electronic_required", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("expected_appl_num", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("expected_appl_size", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("origcfdanum", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("origoppnumber", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ismulti", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_dwnld_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("package_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_wrkspc_compatible", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("comp_id", name=op.f("tcompetition_pkey")),
        schema="test_200494001685262614012745264629780230410_legacy",
    )
    op.create_table(
        "user_saved_opportunity",
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "last_notified_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("'2025-08-07 13:27:12.502607+00'::timestamp with time zone"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_195495387774297757560388855302097562904_api.opportunity.opportunity_id"],
            name=op.f("user_saved_opportunity_opportunity_id_opportunity_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_195495387774297757560388855302097562904_api.user.user_id"],
            name=op.f("user_saved_opportunity_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "user_id", "opportunity_id", name=op.f("user_saved_opportunity_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "tsubscription",
        sa.Column("subscription_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("user_account_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("newsletters", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("alerts", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("all_new_opps", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("opportunities", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("saved_searches", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_upd_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("subscription_id", name=op.f("tsubscription_pkey")),
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_index(
        op.f("tsubscription_transformed_at_idx"),
        "tsubscription",
        ["transformed_at"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_table(
        "tfundactcat_forecast",
        sa.Column("fac_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_frcst_id", "fac_id", "opportunity_id", name=op.f("tfundactcat_forecast_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_index(
        op.f("tfundactcat_forecast_transformed_at_idx"),
        "tfundactcat_forecast",
        ["transformed_at"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_table(
        "tforecast",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("forecast_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_synopsis_posting_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_appl_response_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("est_appl_response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_award_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_project_start_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("fiscal_year", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("tforecast_pkey")),
        schema="test_200494001685262614012745264629780230410_legacy",
    )
    op.create_table(
        "tsubscription_opportunity",
        sa.Column("subscription_opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("subscription_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_opp_deleted", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_upd_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint(
            "subscription_opportunity_id", name=op.f("tsubscription_opportunity_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_legacy",
    )
    op.create_table(
        "tcompetition",
        sa.Column("comp_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("opp_cfda_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("competitionid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("familyid", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("competitiontitle", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("openingdate", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("closingdate", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("contactinfo", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("graceperiod", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("opentoapplicanttype", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("dialect", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_update", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("electronic_required", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("expected_appl_num", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("expected_appl_size", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("origcfdanum", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("origoppnumber", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ismulti", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_dwnld_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("package_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_wrkspc_compatible", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("comp_id", name=op.f("tcompetition_pkey")),
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_index(
        op.f("tcompetition_transformed_at_idx"),
        "tcompetition",
        ["transformed_at"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_table(
        "application_form",
        sa.Column("application_form_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("application_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("competition_form_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "application_response",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("is_included_in_submission", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["application_id"],
            ["test_195495387774297757560388855302097562904_api.application.application_id"],
            name=op.f("application_form_application_id_application_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["competition_form_id"],
            [
                "test_195495387774297757560388855302097562904_api.competition_form.competition_form_id"
            ],
            name=op.f("application_form_competition_form_id_competition_form_fkey"),
        ),
        sa.PrimaryKeyConstraint("application_form_id", name=op.f("application_form_pkey")),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "tsynopsisattachment",
        sa.Column("syn_att_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("att_revision_number", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("att_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("mime_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("file_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("file_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("file_lob", postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column("file_lob_size", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("syn_att_folder_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("syn_att_id", name=op.f("tsynopsisattachment_pkey")),
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_index(
        op.f("tsynopsisattachment_transformed_at_idx"),
        "tsynopsisattachment",
        ["transformed_at"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_table(
        "tapplicanttypes_synopsis_hist",
        sa.Column("at_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_syn_id",
            "at_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tapplicanttypes_synopsis_hist_pkey"),
        ),
        schema="test_195495387774297757560388855302097562904_legacy",
    )
    op.create_table(
        "lk_application_status",
        sa.Column("application_status_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("application_status_id", name=op.f("lk_application_status_pkey")),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "topportunity_cfda",
        sa.Column("opp_cfda_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("cfdanumber", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("programtitle", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("origtoppid", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("oppidcfdanum", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("origoppnum", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opp_cfda_id", name=op.f("topportunity_cfda_pkey")),
        schema="test_158415535871585582889006515973580025243_legacy",
    )
    op.create_table(
        "tfundactcat_synopsis",
        sa.Column("fac_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_syn_id", "fac_id", "opportunity_id", name=op.f("tfundactcat_synopsis_pkey")
        ),
        schema="test_200494001685262614012745264629780230410_legacy",
    )
    op.create_table(
        "tforecast",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("forecast_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_synopsis_posting_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_appl_response_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("est_appl_response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_award_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_project_start_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("fiscal_year", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("tforecast_pkey")),
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_index(
        op.f("tforecast_transformed_at_idx"),
        "tforecast",
        ["transformed_at"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_table(
        "tsubscription_search",
        sa.Column("subscription_search_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("subscription_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("search_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("search_params", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_upd_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("subscription_search_id", name=op.f("tsubscription_search_pkey")),
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_index(
        op.f("tsubscription_search_transformed_at_idx"),
        "tsubscription_search",
        ["transformed_at"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_table(
        "topportunity",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("oppnumber", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("opptitle", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("owningagency", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("listed", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oppcategory", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("initial_opportunity_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modified_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("flag_2006", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("category_explanation", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_draft", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("topportunity_pkey")),
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_index(
        op.f("topportunity_transformed_at_idx"),
        "topportunity",
        ["transformed_at"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_table(
        "tuser_account_mapper",
        sa.Column("user_account_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("ext_user_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("ext_issuer", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("ext_subject", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "last_auth_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("source_type", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "user_account_id", "source_type", name=op.f("tuser_account_mapper_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_index(
        op.f("tuser_account_mapper_transformed_at_idx"),
        "tuser_account_mapper",
        ["transformed_at"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_table(
        "form_instruction",
        sa.Column("form_instruction_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("file_location", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("form_instruction_id", name=op.f("form_instruction_pkey")),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "tapplicanttypes_forecast",
        sa.Column("at_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_frcst_id", "at_id", "opportunity_id", name=op.f("tapplicanttypes_forecast_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_legacy",
    )
    op.create_table(
        "tfundinstr_synopsis",
        sa.Column("fi_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_syn_id", "fi_id", "opportunity_id", name=op.f("tfundinstr_synopsis_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_index(
        op.f("tfundinstr_synopsis_transformed_at_idx"),
        "tfundinstr_synopsis",
        ["transformed_at"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_table(
        "lk_applicant_type",
        sa.Column("applicant_type_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("applicant_type_id", name=op.f("lk_applicant_type_pkey")),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "lk_funding_instrument",
        sa.Column("funding_instrument_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("funding_instrument_id", name=op.f("lk_funding_instrument_pkey")),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "tapplicanttypes_forecast",
        sa.Column("at_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_frcst_id", "at_id", "opportunity_id", name=op.f("tapplicanttypes_forecast_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_index(
        op.f("tapplicanttypes_forecast_transformed_at_idx"),
        "tapplicanttypes_forecast",
        ["transformed_at"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_table(
        "topportunity_cfda",
        sa.Column("opp_cfda_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("cfdanumber", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("programtitle", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("origtoppid", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("oppidcfdanum", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("origoppnum", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opp_cfda_id", name=op.f("topportunity_cfda_pkey")),
        schema="test_108608949803588358968494026131317405857_legacy",
    )
    op.create_table(
        "link_opportunity_summary_applicant_type",
        sa.Column("opportunity_summary_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("applicant_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("legacy_applicant_type_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["applicant_type_id"],
            [
                "test_108608949803588358968494026131317405857_api.lk_applicant_type.applicant_type_id"
            ],
            name=op.f("link_opportunity_summary_applicant_type_applicant_type__c136"),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_summary_id"],
            [
                "test_108608949803588358968494026131317405857_api.opportunity_summary.opportunity_summary_id"
            ],
            name=op.f("link_opportunity_summary_applicant_type_opportunity_sum_f95d"),
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_summary_id",
            "applicant_type_id",
            name=op.f("link_opportunity_summary_applicant_type_pkey"),
        ),
        sa.UniqueConstraint(
            "opportunity_summary_id",
            "legacy_applicant_type_id",
            name=op.f("link_opportunity_summary_applicant_type_opportunity_sum_a7cd"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("link_opportunity_summary_applicant_type_opportunity_sum_fee2"),
        "link_opportunity_summary_applicant_type",
        ["opportunity_summary_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_index(
        op.f("link_opportunity_summary_applicant_type_applicant_type_id_idx"),
        "link_opportunity_summary_applicant_type",
        ["applicant_type_id"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "tcompetition",
        sa.Column("comp_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("opp_cfda_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("competitionid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("familyid", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("competitiontitle", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("openingdate", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("closingdate", sa.DATE(), autoincrement=False, nullable=True),
        sa.Column("contactinfo", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("graceperiod", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("opentoapplicanttype", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("dialect", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_update", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("electronic_required", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("expected_appl_num", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("expected_appl_size", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("origcfdanum", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("origoppnumber", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ismulti", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_dwnld_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("package_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_wrkspc_compatible", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("comp_id", name=op.f("tcompetition_pkey")),
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_index(
        op.f("tcompetition_transformed_at_idx"),
        "tcompetition",
        ["transformed_at"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_table(
        "tfundactcat_forecast_hist",
        sa.Column("fac_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_frcst_id",
            "fac_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tfundactcat_forecast_hist_pkey"),
        ),
        schema="test_200494001685262614012745264629780230410_legacy",
    )
    op.create_table(
        "lk_competition_open_to_applicant",
        sa.Column(
            "competition_open_to_applicant_id", sa.INTEGER(), autoincrement=True, nullable=False
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "competition_open_to_applicant_id", name=op.f("lk_competition_open_to_applicant_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "form",
        sa.Column("form_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("form_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("short_form_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("form_version", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("omb_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("legacy_form_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "active_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "inactive_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "form_json_schema",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "form_ui_schema",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("form_instruction_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "form_rule_schema",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["form_instruction_id"],
            [
                "test_200494001685262614012745264629780230410_api.form_instruction.form_instruction_id"
            ],
            name=op.f("form_form_instruction_id_form_instruction_fkey"),
        ),
        sa.PrimaryKeyConstraint("form_id", name=op.f("form_pkey")),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("form_legacy_form_id_idx"),
        "form",
        ["legacy_form_id"],
        unique=True,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "tsubscription_search",
        sa.Column("subscription_search_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("subscription_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("search_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("search_params", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_upd_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("subscription_search_id", name=op.f("tsubscription_search_pkey")),
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_index(
        op.f("tsubscription_search_transformed_at_idx"),
        "tsubscription_search",
        ["transformed_at"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_table(
        "tinstructions",
        sa.Column("comp_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("extension", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("mimetype", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("instructions", postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column(
            "last_update", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("comp_id", name=op.f("tinstructions_pkey")),
        schema="test_158415535871585582889006515973580025243_legacy",
    )
    op.create_table(
        "tuser_account",
        sa.Column("user_account_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("full_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("email_address", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("phone_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("first_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("middle_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted_legacy", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_duplicate", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_active", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_email_confirm_pending", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "deactivated_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("mobile_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("user_account_id", name=op.f("tuser_account_pkey")),
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_index(
        op.f("tuser_account_transformed_at_idx"),
        "tuser_account",
        ["transformed_at"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_table(
        "tfundinstr_synopsis_hist",
        sa.Column("fi_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_syn_id",
            "opportunity_id",
            "fi_id",
            "revision_number",
            name=op.f("tfundinstr_synopsis_hist_pkey"),
        ),
        schema="test_158415535871585582889006515973580025243_legacy",
    )
    op.create_table(
        "tapplicanttypes_synopsis",
        sa.Column("at_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_syn_id", "at_id", "opportunity_id", name=op.f("tapplicanttypes_synopsis_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_index(
        op.f("tapplicanttypes_synopsis_transformed_at_idx"),
        "tapplicanttypes_synopsis",
        ["transformed_at"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_table(
        "organization",
        sa.Column("organization_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("sam_gov_entity_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["sam_gov_entity_id"],
            ["test_195495387774297757560388855302097562904_api.sam_gov_entity.sam_gov_entity_id"],
            name="organization_sam_gov_entity_id_sam_gov_entity_fkey",
        ),
        sa.PrimaryKeyConstraint("organization_id", name="organization_pkey"),
        sa.UniqueConstraint(
            "sam_gov_entity_id",
            name="organization_sam_gov_entity_id_uniq",
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_195495387774297757560388855302097562904_api",
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "tfundactcat_forecast_hist",
        sa.Column("fac_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_frcst_id",
            "fac_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tfundactcat_forecast_hist_pkey"),
        ),
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_index(
        op.f("tfundactcat_forecast_hist_transformed_at_idx"),
        "tfundactcat_forecast_hist",
        ["transformed_at"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_table(
        "short_lived_internal_token",
        sa.Column("short_lived_internal_token_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "expires_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("is_valid", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "short_lived_internal_token_id", name=op.f("short_lived_internal_token_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "lk_sam_gov_extract_type",
        sa.Column("sam_gov_extract_type_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "sam_gov_extract_type_id", name=op.f("lk_sam_gov_extract_type_pkey")
        ),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "tsynopsis_hist",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "response_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "unarchive_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("syn_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_addr_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_contact_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("a_sa_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("action_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "action_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "opportunity_id", "revision_number", name=op.f("tsynopsis_hist_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_index(
        op.f("tsynopsis_hist_transformed_at_idx"),
        "tsynopsis_hist",
        ["transformed_at"],
        unique=False,
        schema="test_108608949803588358968494026131317405857_staging",
    )
    op.create_table(
        "link_opportunity_summary_funding_instrument",
        sa.Column("opportunity_summary_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("funding_instrument_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("legacy_funding_instrument_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["funding_instrument_id"],
            [
                "test_195495387774297757560388855302097562904_api.lk_funding_instrument.funding_instrument_id"
            ],
            name=op.f("link_opportunity_summary_funding_instrument_funding_ins_be1e"),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_summary_id"],
            [
                "test_195495387774297757560388855302097562904_api.opportunity_summary.opportunity_summary_id"
            ],
            name=op.f("link_opportunity_summary_funding_instrument_opportunity_010d"),
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_summary_id",
            "funding_instrument_id",
            name=op.f("link_opportunity_summary_funding_instrument_pkey"),
        ),
        sa.UniqueConstraint(
            "opportunity_summary_id",
            "legacy_funding_instrument_id",
            name=op.f("link_opportunity_summary_funding_instrument_opportunity_5b1c"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("link_opportunity_summary_funding_instrument_opportunity_4597"),
        "link_opportunity_summary_funding_instrument",
        ["opportunity_summary_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("link_opportunity_summary_funding_instrument_funding_ins_94c9"),
        "link_opportunity_summary_funding_instrument",
        ["funding_instrument_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "tapplicanttypes_forecast_hist",
        sa.Column("at_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_frcst_id",
            "at_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tapplicanttypes_forecast_hist_pkey"),
        ),
        schema="test_158415535871585582889006515973580025243_legacy",
    )
    op.create_table(
        "opportunity_assistance_listing",
        sa.Column(
            "opportunity_assistance_listing_id", sa.UUID(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "legacy_opportunity_assistance_listing_id",
            sa.BIGINT(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("assistance_listing_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("program_title", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_195495387774297757560388855302097562904_api.opportunity.opportunity_id"],
            name=op.f("opportunity_assistance_listing_opportunity_id_opportunity_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_assistance_listing_id", name=op.f("opportunity_assistance_listing_pkey")
        ),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("opportunity_assistance_listing_opportunity_id_idx"),
        "opportunity_assistance_listing",
        ["opportunity_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("opportunity_assistance_listing_legacy_opportunity_assis_2774"),
        "opportunity_assistance_listing",
        ["legacy_opportunity_assistance_listing_id"],
        unique=True,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "tinstructions",
        sa.Column("comp_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("extension", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("mimetype", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("instructions", postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column(
            "last_update", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("comp_id", name=op.f("tinstructions_pkey")),
        schema="test_108608949803588358968494026131317405857_legacy",
    )
    op.create_table(
        "tfundinstr_synopsis_hist",
        sa.Column("fi_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_syn_id",
            "opportunity_id",
            "fi_id",
            "revision_number",
            name=op.f("tfundinstr_synopsis_hist_pkey"),
        ),
        schema="test_108608949803588358968494026131317405857_legacy",
    )
    op.create_table(
        "tsubscription_opportunity",
        sa.Column("subscription_opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("subscription_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_opp_deleted", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_upd_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint(
            "subscription_opportunity_id", name=op.f("tsubscription_opportunity_pkey")
        ),
        schema="test_200494001685262614012745264629780230410_legacy",
    )
    op.create_table(
        "tfundactcat_synopsis_hist",
        sa.Column("fac_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_syn_id",
            "fac_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tfundactcat_synopsis_hist_pkey"),
        ),
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_index(
        op.f("tfundactcat_synopsis_hist_transformed_at_idx"),
        "tfundactcat_synopsis_hist",
        ["transformed_at"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_table(
        "tfundactcat_synopsis",
        sa.Column("fac_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_syn_id", "fac_id", "opportunity_id", name=op.f("tfundactcat_synopsis_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_index(
        op.f("tfundactcat_synopsis_transformed_at_idx"),
        "tfundactcat_synopsis",
        ["transformed_at"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_table(
        "user_notification_log",
        sa.Column("user_notification_log_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("notification_reason", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("notification_sent", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_158415535871585582889006515973580025243_api.user.user_id"],
            name=op.f("user_notification_log_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "user_notification_log_id", name=op.f("user_notification_log_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_index(
        op.f("user_notification_log_user_id_idx"),
        "user_notification_log",
        ["user_id"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "organization_user",
        sa.Column("organization_user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("is_organization_owner", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("organization_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["test_195495387774297757560388855302097562904_api.organization.organization_id"],
            name=op.f("organization_user_organization_id_organization_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_195495387774297757560388855302097562904_api.user.user_id"],
            name=op.f("organization_user_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint("organization_user_id", name=op.f("organization_user_pkey")),
        sa.UniqueConstraint(
            "organization_id",
            "user_id",
            name=op.f("organization_user_organization_id_uniq"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("organization_user_user_id_idx"),
        "organization_user",
        ["user_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("organization_user_organization_id_idx"),
        "organization_user",
        ["organization_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "user_saved_search",
        sa.Column("saved_search_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "search_query",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_notified_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "searched_opportunity_ids",
            postgresql.ARRAY(sa.UUID()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_195495387774297757560388855302097562904_api.user.user_id"],
            name=op.f("user_saved_search_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint("saved_search_id", name=op.f("user_saved_search_pkey")),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("user_saved_search_user_id_idx"),
        "user_saved_search",
        ["user_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "tuser_account",
        sa.Column("user_account_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("full_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("email_address", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("phone_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("first_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("middle_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted_legacy", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_duplicate", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_active", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_email_confirm_pending", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "deactivated_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("mobile_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("user_account_id", name=op.f("tuser_account_pkey")),
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_index(
        op.f("tuser_account_transformed_at_idx"),
        "tuser_account",
        ["transformed_at"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_table(
        "tgroups",
        sa.Column("keyfield", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("value", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("keyfield", name=op.f("tgroups_pkey")),
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_index(
        op.f("tgroups_transformed_at_idx"),
        "tgroups",
        ["transformed_at"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_table(
        "tsubscription",
        sa.Column("subscription_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("user_account_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("newsletters", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("alerts", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("all_new_opps", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("opportunities", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("saved_searches", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_upd_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("subscription_id", name=op.f("tsubscription_pkey")),
        schema="test_200494001685262614012745264629780230410_legacy",
    )
    op.create_table(
        "tfundinstr_forecast",
        sa.Column("fi_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_frcst_id", "fi_id", "opportunity_id", name=op.f("tfundinstr_forecast_pkey")
        ),
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_index(
        op.f("tfundinstr_forecast_transformed_at_idx"),
        "tfundinstr_forecast",
        ["transformed_at"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_table(
        "tapplicanttypes_forecast_hist",
        sa.Column("at_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("at_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "at_frcst_id",
            "at_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tapplicanttypes_forecast_hist_pkey"),
        ),
        schema="test_108608949803588358968494026131317405857_legacy",
    )
    op.create_table(
        "link_competition_open_to_applicant",
        sa.Column("competition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "competition_open_to_applicant_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["test_200494001685262614012745264629780230410_api.competition.competition_id"],
            name=op.f("link_competition_open_to_applicant_competition_id_compe_e8fc"),
        ),
        sa.ForeignKeyConstraint(
            ["competition_open_to_applicant_id"],
            [
                "test_200494001685262614012745264629780230410_api.lk_competition_open_to_applicant.competition_open_to_applicant_id"
            ],
            name=op.f("link_competition_open_to_applicant_competition_open_to__7a3d"),
        ),
        sa.PrimaryKeyConstraint(
            "competition_id",
            "competition_open_to_applicant_id",
            name=op.f("link_competition_open_to_applicant_pkey"),
        ),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "tforecast_hist",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("forecast_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_synopsis_posting_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_appl_response_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("est_appl_response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_award_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_project_start_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("fiscal_year", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("action_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "action_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "opportunity_id", "revision_number", name=op.f("tforecast_hist_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_legacy",
    )
    op.create_table(
        "lk_sam_gov_extract_type",
        sa.Column("sam_gov_extract_type_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "sam_gov_extract_type_id", name=op.f("lk_sam_gov_extract_type_pkey")
        ),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "lk_extract_type",
        sa.Column("extract_type_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("extract_type_id", name=op.f("lk_extract_type_pkey")),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_table(
        "tsynopsis",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "response_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "unarchive_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("syn_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_addr_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_contact_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("a_sa_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("tsynopsis_pkey")),
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_index(
        op.f("tsynopsis_transformed_at_idx"),
        "tsynopsis",
        ["transformed_at"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_table(
        "application_user",
        sa.Column("application_user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("application_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("is_application_owner", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["application_id"],
            ["test_200494001685262614012745264629780230410_api.application.application_id"],
            name=op.f("application_user_application_id_application_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_200494001685262614012745264629780230410_api.user.user_id"],
            name=op.f("application_user_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint("application_user_id", name=op.f("application_user_pkey")),
        sa.UniqueConstraint(
            "application_id",
            "user_id",
            name=op.f("application_user_application_id_uniq"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("application_user_user_id_idx"),
        "application_user",
        ["user_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("application_user_application_id_idx"),
        "application_user",
        ["application_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "tsubscription",
        sa.Column("subscription_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("user_account_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("newsletters", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("alerts", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("all_new_opps", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("opportunities", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("saved_searches", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "last_upd_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("subscription_id", name=op.f("tsubscription_pkey")),
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_index(
        op.f("tsubscription_transformed_at_idx"),
        "tsubscription",
        ["transformed_at"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_table(
        "opportunity",
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("legacy_opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_number", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("opportunity_title", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("opportunity_category_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("category_explanation", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_draft", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("modified_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_user_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_category_id"],
            [
                "test_200494001685262614012745264629780230410_api.lk_opportunity_category.opportunity_category_id"
            ],
            name=op.f("opportunity_opportunity_category_id_lk_opportunity_cate_c6e9"),
        ),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("opportunity_pkey")),
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("opportunity_opportunity_title_idx"),
        "opportunity",
        ["opportunity_title"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("opportunity_opportunity_category_id_idx"),
        "opportunity",
        ["opportunity_category_id"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("opportunity_legacy_opportunity_id_idx"),
        "opportunity",
        ["legacy_opportunity_id"],
        unique=True,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("opportunity_is_draft_idx"),
        "opportunity",
        ["is_draft"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_index(
        op.f("opportunity_agency_code_idx"),
        "opportunity",
        ["agency_code"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_api",
    )
    op.create_table(
        "competition_assistance_listing",
        sa.Column("competition_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "opportunity_assistance_listing_id", sa.UUID(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["test_158415535871585582889006515973580025243_api.competition.competition_id"],
            name=op.f("competition_assistance_listing_competition_id_competition_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_assistance_listing_id"],
            [
                "test_158415535871585582889006515973580025243_api.opportunity_assistance_listing.opportunity_assistance_listing_id"
            ],
            name=op.f("competition_assistance_listing_opportunity_assistance_l_6b02"),
        ),
        sa.PrimaryKeyConstraint(
            "competition_id",
            "opportunity_assistance_listing_id",
            name=op.f("competition_assistance_listing_pkey"),
        ),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "tfundactcat_synopsis_hist",
        sa.Column("fac_syn_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fac_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fac_syn_id",
            "fac_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tfundactcat_synopsis_hist_pkey"),
        ),
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_index(
        op.f("tfundactcat_synopsis_hist_transformed_at_idx"),
        "tfundactcat_synopsis_hist",
        ["transformed_at"],
        unique=False,
        schema="test_200494001685262614012745264629780230410_staging",
    )
    op.create_table(
        "user_token_session",
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("token_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "expires_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column("is_valid", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["test_158415535871585582889006515973580025243_api.user.user_id"],
            name=op.f("user_token_session_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint("user_id", "token_id", name=op.f("user_token_session_pkey")),
        schema="test_158415535871585582889006515973580025243_api",
    )
    op.create_table(
        "tfundinstr_forecast_hist",
        sa.Column("fi_frcst_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("fi_id", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "fi_frcst_id",
            "fi_id",
            "opportunity_id",
            "revision_number",
            name=op.f("tfundinstr_forecast_hist_pkey"),
        ),
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_index(
        op.f("tfundinstr_forecast_hist_transformed_at_idx"),
        "tfundinstr_forecast_hist",
        ["transformed_at"],
        unique=False,
        schema="test_158415535871585582889006515973580025243_staging",
    )
    op.create_table(
        "tsynopsisattachment",
        sa.Column("syn_att_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("att_revision_number", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("att_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("mime_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("file_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("file_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("file_lob", postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column("file_lob_size", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("syn_att_folder_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("is_deleted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "transformed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("transformation_notes", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("syn_att_id", name=op.f("tsynopsisattachment_pkey")),
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_index(
        op.f("tsynopsisattachment_transformed_at_idx"),
        "tsynopsisattachment",
        ["transformed_at"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_staging",
    )
    op.create_table(
        "lk_competition_open_to_applicant",
        sa.Column(
            "competition_open_to_applicant_id", sa.INTEGER(), autoincrement=True, nullable=False
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint(
            "competition_open_to_applicant_id", name=op.f("lk_competition_open_to_applicant_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_api",
    )
    op.create_table(
        "tforecast_hist",
        sa.Column("opportunity_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("revision_number", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("version_nbr", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "posting_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "archive_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("forecast_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("oth_cat_fa_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("cost_sharing", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("number_of_awards", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("est_funding", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_ceiling", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("award_floor", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_url", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("fd_link_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_phone", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_addr", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("ac_email_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_code", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("sendmail", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("applicant_elig_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_synopsis_posting_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_appl_response_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("est_appl_response_date_desc", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "est_award_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "est_project_start_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("fiscal_year", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("modification_comments", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("action_type", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "action_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "create_ts", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_upd_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("creator_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("last_upd_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisheruid", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("publisher_profile_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint(
            "opportunity_id", "revision_number", name=op.f("tforecast_hist_pkey")
        ),
        schema="test_108608949803588358968494026131317405857_legacy",
    )
    op.create_table(
        "opportunity_attachment",
        sa.Column("attachment_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("legacy_attachment_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("opportunity_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("file_location", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("mime_type", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("file_size_bytes", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("created_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("legacy_folder_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["test_195495387774297757560388855302097562904_api.opportunity.opportunity_id"],
            name=op.f("opportunity_attachment_opportunity_id_opportunity_fkey"),
        ),
        sa.PrimaryKeyConstraint("attachment_id", name=op.f("opportunity_attachment_pkey")),
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("opportunity_attachment_opportunity_id_idx"),
        "opportunity_attachment",
        ["opportunity_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.create_index(
        op.f("opportunity_attachment_legacy_attachment_id_idx"),
        "opportunity_attachment",
        ["legacy_attachment_id"],
        unique=False,
        schema="test_195495387774297757560388855302097562904_api",
    )
    op.drop_index(
        op.f("excluded_opportunity_review_opportunity_id_idx"),
        table_name="excluded_opportunity_review",
        schema="api",
    )
    op.drop_table("excluded_opportunity_review", schema="api")
    # ### end Alembic commands ###
