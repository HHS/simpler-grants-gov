"""add opportunity competition & instruction

Revision ID: 638cfdb499f3
Revises: 56d129425397
Create Date: 2025-02-14 20:21:13.482585

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "638cfdb499f3"
down_revision = "56d129425397"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "opportunity_competition",
        sa.Column("competition_id", sa.UUID(), nullable=False),
        sa.Column("opportunity_id", sa.BigInteger(), nullable=False),
        sa.Column("legacy_competition_id", sa.BigInteger(), nullable=True),
        sa.Column("public_competition_id", sa.Text(), nullable=True),
        sa.Column("legacy_package_id", sa.Text(), nullable=True),
        sa.Column("competition_title", sa.Text(), nullable=True),
        sa.Column("opening_date", sa.Date(), nullable=True),
        sa.Column("closing_date", sa.Date(), nullable=True),
        sa.Column("grace_period", sa.BigInteger(), nullable=True),
        sa.Column("contact_info", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["api.opportunity.opportunity_id"],
            name=op.f("opportunity_competition_opportunity_id_opportunity_fkey"),
        ),
        sa.PrimaryKeyConstraint("competition_id", name=op.f("opportunity_competition_pkey")),
        schema="api",
    )
    op.create_index(
        op.f("opportunity_competition_legacy_competition_id_idx"),
        "opportunity_competition",
        ["legacy_competition_id"],
        unique=False,
        schema="api",
    )
    op.create_index(
        op.f("opportunity_competition_opportunity_id_idx"),
        "opportunity_competition",
        ["opportunity_id"],
        unique=False,
        schema="api",
    )
    op.create_table(
        "opportunity_competition_assistance_listing",
        sa.Column("competition_id", sa.UUID(), nullable=False),
        sa.Column("opportunity_assistance_listing_id", sa.BigInteger(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["api.opportunity_competition.competition_id"],
            name=op.f(
                "opportunity_competition_assistance_listing_competition_id_opportunity_competition_fkey"
            ),
        ),
        sa.PrimaryKeyConstraint(
            "competition_id",
            "opportunity_assistance_listing_id",
            name=op.f("opportunity_competition_assistance_listing_pkey"),
        ),
        schema="api",
    )
    op.create_index(
        op.f("opportunity_competition_assistance_listing_competition_id_idx"),
        "opportunity_competition_assistance_listing",
        ["competition_id"],
        unique=False,
        schema="api",
    )
    op.create_table(
        "opportunity_competition_instruction",
        sa.Column("competition_instruction_id", sa.UUID(), nullable=False),
        sa.Column("competition_id", sa.UUID(), nullable=False),
        sa.Column("file_location", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["api.opportunity_competition.competition_id"],
            name=op.f(
                "opportunity_competition_instruction_competition_id_opportunity_competition_fkey"
            ),
        ),
        sa.PrimaryKeyConstraint(
            "competition_instruction_id",
            "competition_id",
            name=op.f("opportunity_competition_instruction_pkey"),
        ),
        schema="api",
    )
    op.create_index(
        op.f("opportunity_competition_instruction_competition_id_idx"),
        "opportunity_competition_instruction",
        ["competition_id"],
        unique=False,
        schema="api",
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("opportunity_competition_instruction_competition_id_idx"),
        table_name="opportunity_competition_instruction",
        schema="api",
    )
    op.drop_table("opportunity_competition_instruction", schema="api")
    op.drop_index(
        op.f("opportunity_competition_assistance_listing_competition_id_idx"),
        table_name="opportunity_competition_assistance_listing",
        schema="api",
    )
    op.drop_table("opportunity_competition_assistance_listing", schema="api")
    op.drop_index(
        op.f("opportunity_competition_opportunity_id_idx"),
        table_name="opportunity_competition",
        schema="api",
    )
    op.drop_index(
        op.f("opportunity_competition_legacy_competition_id_idx"),
        table_name="opportunity_competition",
        schema="api",
    )
    op.drop_table("opportunity_competition", schema="api")
    # ### end Alembic commands ###
