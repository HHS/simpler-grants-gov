"""Setup transfer staging opportunity tables

Revision ID: 661a773a8478
Revises: 27a1ed587690
Create Date: 2025-03-24 17:26:00.393039

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "661a773a8478"
down_revision = "27a1ed587690"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "tsubscription",
        sa.Column("subscription_id", sa.BigInteger(), nullable=False),
        sa.Column("user_account_id", sa.BigInteger(), nullable=True),
        sa.Column("newsletters", sa.Text(), nullable=True),
        sa.Column("alerts", sa.Text(), nullable=True),
        sa.Column("all_new_opps", sa.Text(), nullable=True),
        sa.Column("opportunities", sa.Text(), nullable=True),
        sa.Column("saved_searches", sa.Text(), nullable=True),
        sa.Column("created_date", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("creator_id", sa.Text(), nullable=False),
        sa.Column("last_upd_date", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("last_upd_id", sa.Text(), nullable=False),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("transformed_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("transformation_notes", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("subscription_id", name=op.f("tsubscription_pkey")),
        schema="staging",
    )
    op.create_index(
        op.f("tsubscription_transformed_at_idx"),
        "tsubscription",
        ["transformed_at"],
        unique=False,
        schema="staging",
    )
    op.create_table(
        "tsubscription_opportunity",
        sa.Column("subscription_opportunity_id", sa.BigInteger(), nullable=False),
        sa.Column("subscription_id", sa.BigInteger(), nullable=True),
        sa.Column("opportunity_id", sa.BigInteger(), nullable=True),
        sa.Column("is_opp_deleted", sa.Text(), nullable=True),
        sa.Column("created_date", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("creator_id", sa.Text(), nullable=False),
        sa.Column("last_upd_date", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("last_upd_id", sa.Text(), nullable=False),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("transformed_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("transformation_notes", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint(
            "subscription_opportunity_id", name=op.f("tsubscription_opportunity_pkey")
        ),
        schema="staging",
    )
    op.create_index(
        op.f("tsubscription_opportunity_transformed_at_idx"),
        "tsubscription_opportunity",
        ["transformed_at"],
        unique=False,
        schema="staging",
    )
    op.create_table(
        "tsubscription_search",
        sa.Column("subscription_search_id", sa.BigInteger(), nullable=False),
        sa.Column("subscription_id", sa.BigInteger(), nullable=True),
        sa.Column("search_name", sa.Text(), nullable=True),
        sa.Column("search_params", sa.Text(), nullable=True),
        sa.Column("created_date", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("creator_id", sa.Text(), nullable=False),
        sa.Column("last_upd_date", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("last_upd_id", sa.Text(), nullable=False),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("transformed_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("transformation_notes", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("subscription_search_id", name=op.f("tsubscription_search_pkey")),
        schema="staging",
    )
    op.create_index(
        op.f("tsubscription_search_transformed_at_idx"),
        "tsubscription_search",
        ["transformed_at"],
        unique=False,
        schema="staging",
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("tsubscription_search_transformed_at_idx"),
        table_name="tsubscription_search",
        schema="staging",
    )
    op.drop_table("tsubscription_search", schema="staging")
    op.drop_index(
        op.f("tsubscription_opportunity_transformed_at_idx"),
        table_name="tsubscription_opportunity",
        schema="staging",
    )
    op.drop_table("tsubscription_opportunity", schema="staging")
    op.drop_index(
        op.f("tsubscription_transformed_at_idx"), table_name="tsubscription", schema="staging"
    )
    op.drop_table("tsubscription", schema="staging")
    # ### end Alembic commands ###
