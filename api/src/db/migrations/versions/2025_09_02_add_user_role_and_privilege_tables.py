"""add_user_role_and_privilege_tables

Revision ID: 92d99b3c3e68
Revises: e79e8dd701ac
Create Date: 2025-09-02 20:48:43.073369

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "92d99b3c3e68"
down_revision = "e79e8dd701ac"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "lk_privilege",
        sa.Column("privilege_id", sa.Integer(), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("privilege_id", name=op.f("lk_privilege_pkey")),
        schema="api",
    )
    op.create_table(
        "lk_role_type",
        sa.Column("role_type_id", sa.Integer(), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("role_type_id", name=op.f("lk_role_type_pkey")),
        schema="api",
    )
    op.create_table(
        "role",
        sa.Column("role_id", sa.UUID(), nullable=False),
        sa.Column("role_name", sa.Text(), nullable=False),
        sa.Column("is_core", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("role_id", name=op.f("role_pkey")),
        schema="api",
    )
    op.create_table(
        "link_role_privilege",
        sa.Column("role_id", sa.UUID(), nullable=False),
        sa.Column("privilege_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["privilege_id"],
            ["api.lk_privilege.privilege_id"],
            name=op.f("link_role_privilege_privilege_id_lk_privilege_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["role_id"], ["api.role.role_id"], name=op.f("link_role_privilege_role_id_role_fkey")
        ),
        sa.PrimaryKeyConstraint("role_id", "privilege_id", name=op.f("link_role_privilege_pkey")),
        schema="api",
    )
    op.create_index(
        op.f("link_role_privilege_privilege_id_idx"),
        "link_role_privilege",
        ["privilege_id"],
        unique=False,
        schema="api",
    )
    op.create_table(
        "link_role_role_type",
        sa.Column("role_id", sa.UUID(), nullable=False),
        sa.Column("role_type_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["role_id"], ["api.role.role_id"], name=op.f("link_role_role_type_role_id_role_fkey")
        ),
        sa.ForeignKeyConstraint(
            ["role_type_id"],
            ["api.lk_role_type.role_type_id"],
            name=op.f("link_role_role_type_role_type_id_lk_role_type_fkey"),
        ),
        sa.PrimaryKeyConstraint("role_id", "role_type_id", name=op.f("link_role_role_type_pkey")),
        schema="api",
    )
    op.create_index(
        op.f("link_role_role_type_role_type_id_idx"),
        "link_role_role_type",
        ["role_type_id"],
        unique=False,
        schema="api",
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("link_role_role_type_role_type_id_idx"), table_name="link_role_role_type", schema="api"
    )
    op.drop_table("link_role_role_type", schema="api")
    op.drop_index(
        op.f("link_role_privilege_privilege_id_idx"), table_name="link_role_privilege", schema="api"
    )
    op.drop_table("link_role_privilege", schema="api")
    op.drop_table("role", schema="api")
    op.drop_table("lk_role_type", schema="api")
    op.drop_table("lk_privilege", schema="api")
    # ### end Alembic commands ###
