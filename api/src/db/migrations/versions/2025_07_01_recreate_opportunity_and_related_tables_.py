"""Recreate Opportunity and related tables to use UUIDs

Revision ID: 4fe76320503b
Revises: 837231ccdc25
Create Date: 2025-06-27 19:21:31.154458

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

from src.db.migrations.utils import setup_opportunity_search_index_queue_trigger_function

# revision identifiers, used by Alembic.
revision = "4fe76320503b"
down_revision = "837231ccdc25"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "form",
        sa.Column("form_id", sa.UUID(), nullable=False),
        sa.Column("form_name", sa.Text(), nullable=False),
        sa.Column("form_version", sa.Text(), nullable=False),
        sa.Column("agency_code", sa.Text(), nullable=False),
        sa.Column("omb_number", sa.Text(), nullable=True),
        sa.Column("active_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("inactive_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("form_json_schema", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("form_ui_schema", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("form_instruction_id", sa.UUID(), nullable=True),
        sa.Column("form_rule_schema", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["form_instruction_id"],
            ["api.form_instruction.form_instruction_id"],
            name=op.f("form_form_instruction_id_form_instruction_fkey"),
        ),
        sa.PrimaryKeyConstraint("form_id", name=op.f("form_pkey")),
        schema="api",
    )
    op.create_table(
        "opportunity",
        sa.Column("opportunity_id", sa.UUID(), nullable=False),
        sa.Column("legacy_opportunity_id", sa.BigInteger(), nullable=False),
        sa.Column("opportunity_number", sa.Text(), nullable=True),
        sa.Column("opportunity_title", sa.Text(), nullable=True),
        sa.Column("agency_code", sa.Text(), nullable=True),
        sa.Column("opportunity_category_id", sa.Integer(), nullable=True),
        sa.Column("category_explanation", sa.Text(), nullable=True),
        sa.Column("is_draft", sa.Boolean(), nullable=False),
        sa.Column("revision_number", sa.Integer(), nullable=True),
        sa.Column("modified_comments", sa.Text(), nullable=True),
        sa.Column("publisher_user_id", sa.Text(), nullable=True),
        sa.Column("publisher_profile_id", sa.BigInteger(), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_category_id"],
            ["api.lk_opportunity_category.opportunity_category_id"],
            name=op.f("opportunity_opportunity_category_id_lk_opportunity_category_fkey"),
        ),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("opportunity_pkey")),
        schema="api",
    )
    op.create_index(
        op.f("opportunity_agency_code_idx"),
        "opportunity",
        ["agency_code"],
        unique=False,
        schema="api",
    )
    op.create_index(
        op.f("opportunity_is_draft_idx"), "opportunity", ["is_draft"], unique=False, schema="api"
    )
    op.create_index(
        op.f("opportunity_legacy_opportunity_id_idx"),
        "opportunity",
        ["legacy_opportunity_id"],
        unique=True,
        schema="api",
    )
    op.create_index(
        op.f("opportunity_opportunity_category_id_idx"),
        "opportunity",
        ["opportunity_category_id"],
        unique=False,
        schema="api",
    )
    op.create_index(
        op.f("opportunity_opportunity_title_idx"),
        "opportunity",
        ["opportunity_title"],
        unique=False,
        schema="api",
    )
    op.create_table(
        "opportunity_assistance_listing",
        sa.Column("opportunity_assistance_listing_id", sa.UUID(), nullable=False),
        sa.Column("legacy_opportunity_assistance_listing_id", sa.BigInteger(), nullable=False),
        sa.Column("opportunity_id", sa.UUID(), nullable=False),
        sa.Column("assistance_listing_number", sa.Text(), nullable=True),
        sa.Column("program_title", sa.Text(), nullable=True),
        sa.Column("updated_by", sa.Text(), nullable=True),
        sa.Column("created_by", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["api.opportunity.opportunity_id"],
            name=op.f("opportunity_assistance_listing_opportunity_id_opportunity_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_assistance_listing_id", name=op.f("opportunity_assistance_listing_pkey")
        ),
        schema="api",
    )
    op.create_index(
        op.f("opportunity_assistance_listing_legacy_opportunity_assistance_listing_id_idx"),
        "opportunity_assistance_listing",
        ["legacy_opportunity_assistance_listing_id"],
        unique=True,
        schema="api",
    )
    op.create_index(
        op.f("opportunity_assistance_listing_opportunity_id_idx"),
        "opportunity_assistance_listing",
        ["opportunity_id"],
        unique=False,
        schema="api",
    )
    op.create_table(
        "opportunity_attachment",
        sa.Column("attachment_id", sa.UUID(), nullable=False),
        sa.Column("legacy_attachment_id", sa.BigInteger(), nullable=False),
        sa.Column("opportunity_id", sa.UUID(), nullable=False),
        sa.Column("file_location", sa.Text(), nullable=False),
        sa.Column("mime_type", sa.Text(), nullable=False),
        sa.Column("file_name", sa.Text(), nullable=False),
        sa.Column("file_description", sa.Text(), nullable=False),
        sa.Column("file_size_bytes", sa.BigInteger(), nullable=False),
        sa.Column("created_by", sa.Text(), nullable=True),
        sa.Column("updated_by", sa.Text(), nullable=True),
        sa.Column("legacy_folder_id", sa.BigInteger(), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["api.opportunity.opportunity_id"],
            name=op.f("opportunity_attachment_opportunity_id_opportunity_fkey"),
        ),
        sa.PrimaryKeyConstraint("attachment_id", name=op.f("opportunity_attachment_pkey")),
        schema="api",
    )
    op.create_index(
        op.f("opportunity_attachment_legacy_attachment_id_idx"),
        "opportunity_attachment",
        ["legacy_attachment_id"],
        unique=False,
        schema="api",
    )
    op.create_index(
        op.f("opportunity_attachment_opportunity_id_idx"),
        "opportunity_attachment",
        ["opportunity_id"],
        unique=False,
        schema="api",
    )
    op.create_table(
        "opportunity_change_audit",
        sa.Column("opportunity_id", sa.UUID(), nullable=False),
        sa.Column("is_loaded_to_search", sa.Boolean(), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["api.opportunity.opportunity_id"],
            name=op.f("opportunity_change_audit_opportunity_id_opportunity_fkey"),
        ),
        sa.PrimaryKeyConstraint("opportunity_id", name=op.f("opportunity_change_audit_pkey")),
        schema="api",
    )
    op.create_index(
        op.f("opportunity_change_audit_opportunity_id_idx"),
        "opportunity_change_audit",
        ["opportunity_id"],
        unique=False,
        schema="api",
    )
    op.create_table(
        "opportunity_summary",
        sa.Column("opportunity_summary_id", sa.UUID(), nullable=False),
        sa.Column("opportunity_id", sa.UUID(), nullable=False),
        sa.Column("legacy_opportunity_id", sa.BigInteger(), nullable=False),
        sa.Column("summary_description", sa.Text(), nullable=True),
        sa.Column("is_cost_sharing", sa.Boolean(), nullable=True),
        sa.Column("is_forecast", sa.Boolean(), nullable=False),
        sa.Column("post_date", sa.Date(), nullable=True),
        sa.Column("close_date", sa.Date(), nullable=True),
        sa.Column("close_date_description", sa.Text(), nullable=True),
        sa.Column("archive_date", sa.Date(), nullable=True),
        sa.Column("unarchive_date", sa.Date(), nullable=True),
        sa.Column("expected_number_of_awards", sa.BigInteger(), nullable=True),
        sa.Column("estimated_total_program_funding", sa.BigInteger(), nullable=True),
        sa.Column("award_floor", sa.BigInteger(), nullable=True),
        sa.Column("award_ceiling", sa.BigInteger(), nullable=True),
        sa.Column("additional_info_url", sa.Text(), nullable=True),
        sa.Column("additional_info_url_description", sa.Text(), nullable=True),
        sa.Column("forecasted_post_date", sa.Date(), nullable=True),
        sa.Column("forecasted_close_date", sa.Date(), nullable=True),
        sa.Column("forecasted_close_date_description", sa.Text(), nullable=True),
        sa.Column("forecasted_award_date", sa.Date(), nullable=True),
        sa.Column("forecasted_project_start_date", sa.Date(), nullable=True),
        sa.Column("fiscal_year", sa.Integer(), nullable=True),
        sa.Column("modification_comments", sa.Text(), nullable=True),
        sa.Column("funding_category_description", sa.Text(), nullable=True),
        sa.Column("applicant_eligibility_description", sa.Text(), nullable=True),
        sa.Column("agency_phone_number", sa.Text(), nullable=True),
        sa.Column("agency_contact_description", sa.Text(), nullable=True),
        sa.Column("agency_email_address", sa.Text(), nullable=True),
        sa.Column("agency_email_address_description", sa.Text(), nullable=True),
        sa.Column("version_number", sa.Integer(), nullable=True),
        sa.Column("can_send_mail", sa.Boolean(), nullable=True),
        sa.Column("publisher_profile_id", sa.BigInteger(), nullable=True),
        sa.Column("publisher_user_id", sa.Text(), nullable=True),
        sa.Column("updated_by", sa.Text(), nullable=True),
        sa.Column("created_by", sa.Text(), nullable=True),
        sa.Column("agency_code", sa.Text(), nullable=True),
        sa.Column("agency_name", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["api.opportunity.opportunity_id"],
            name=op.f("opportunity_summary_opportunity_id_opportunity_fkey"),
        ),
        sa.PrimaryKeyConstraint("opportunity_summary_id", name=op.f("opportunity_summary_pkey")),
        sa.UniqueConstraint(
            "is_forecast", "opportunity_id", name=op.f("opportunity_summary_is_forecast_uniq")
        ),
        schema="api",
    )
    op.create_index(
        op.f("opportunity_summary_legacy_opportunity_id_idx"),
        "opportunity_summary",
        ["legacy_opportunity_id"],
        unique=False,
        schema="api",
    )
    op.create_index(
        op.f("opportunity_summary_opportunity_id_idx"),
        "opportunity_summary",
        ["opportunity_id"],
        unique=False,
        schema="api",
    )
    op.create_table(
        "opportunity_version",
        sa.Column("opportunity_version_id", sa.UUID(), nullable=False),
        sa.Column("opportunity_id", sa.UUID(), nullable=False),
        sa.Column("opportunity_data", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["api.opportunity.opportunity_id"],
            name=op.f("opportunity_version_opportunity_id_opportunity_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_version_id", "opportunity_id", name=op.f("opportunity_version_pkey")
        ),
        schema="api",
    )
    op.create_table(
        "user_opportunity_notification_log",
        sa.Column("user_opportunity_notification_log_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("opportunity_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["api.opportunity.opportunity_id"],
            name=op.f("user_opportunity_notification_log_opportunity_id_opportunity_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["api.user.user_id"],
            name=op.f("user_opportunity_notification_log_user_id_user_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "user_opportunity_notification_log_id",
            name=op.f("user_opportunity_notification_log_pkey"),
        ),
        schema="api",
    )
    op.create_index(
        op.f("user_opportunity_notification_log_opportunity_id_idx"),
        "user_opportunity_notification_log",
        ["opportunity_id"],
        unique=False,
        schema="api",
    )
    op.create_index(
        op.f("user_opportunity_notification_log_user_id_idx"),
        "user_opportunity_notification_log",
        ["user_id"],
        unique=False,
        schema="api",
    )
    op.create_table(
        "user_saved_search",
        sa.Column("saved_search_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("search_query", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column(
            "last_notified_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("searched_opportunity_ids", postgresql.ARRAY(sa.UUID()), nullable=False),
        sa.Column("is_deleted", sa.Boolean(), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["api.user.user_id"], name=op.f("user_saved_search_user_id_user_fkey")
        ),
        sa.PrimaryKeyConstraint("saved_search_id", name=op.f("user_saved_search_pkey")),
        schema="api",
    )
    op.create_index(
        op.f("user_saved_search_user_id_idx"),
        "user_saved_search",
        ["user_id"],
        unique=False,
        schema="api",
    )
    op.create_table(
        "user_saved_opportunity",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("opportunity_id", sa.UUID(), nullable=False),
        sa.Column(
            "last_notified_at", sa.TIMESTAMP(timezone=True), server_default="NOW()", nullable=False
        ),
        sa.Column("is_deleted", sa.Boolean(), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["api.opportunity.opportunity_id"],
            name=op.f("user_saved_opportunity_opportunity_id_opportunity_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["api.user.user_id"], name=op.f("user_saved_opportunity_user_id_user_fkey")
        ),
        sa.PrimaryKeyConstraint(
            "user_id", "opportunity_id", name=op.f("user_saved_opportunity_pkey")
        ),
        schema="api",
    )
    op.create_table(
        "competition",
        sa.Column("competition_id", sa.UUID(), nullable=False),
        sa.Column("opportunity_id", sa.UUID(), nullable=False),
        sa.Column("legacy_competition_id", sa.BigInteger(), nullable=True),
        sa.Column("public_competition_id", sa.Text(), nullable=True),
        sa.Column("legacy_package_id", sa.Text(), nullable=True),
        sa.Column("competition_title", sa.Text(), nullable=True),
        sa.Column("opening_date", sa.Date(), nullable=True),
        sa.Column("closing_date", sa.Date(), nullable=True),
        sa.Column("grace_period", sa.BigInteger(), nullable=True),
        sa.Column("contact_info", sa.Text(), nullable=True),
        sa.Column("form_family_id", sa.Integer(), nullable=True),
        sa.Column("opportunity_assistance_listing_id", sa.UUID(), nullable=True),
        sa.Column("is_electronic_required", sa.Boolean(), nullable=True),
        sa.Column("expected_application_count", sa.BigInteger(), nullable=True),
        sa.Column("expected_application_size_mb", sa.BigInteger(), nullable=True),
        sa.Column("is_multi_package", sa.Boolean(), nullable=True),
        sa.Column("agency_download_url", sa.Text(), nullable=True),
        sa.Column("is_legacy_workspace_compatible", sa.Boolean(), nullable=True),
        sa.Column("can_send_mail", sa.Boolean(), nullable=True),
        sa.Column("is_simpler_grants_enabled", sa.Boolean(), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["form_family_id"],
            ["api.lk_form_family.form_family_id"],
            name=op.f("competition_form_family_id_lk_form_family_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_assistance_listing_id"],
            ["api.opportunity_assistance_listing.opportunity_assistance_listing_id"],
            name=op.f(
                "competition_opportunity_assistance_listing_id_opportunity_assistance_listing_fkey"
            ),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["api.opportunity.opportunity_id"],
            name=op.f("competition_opportunity_id_opportunity_fkey"),
        ),
        sa.PrimaryKeyConstraint("competition_id", name=op.f("competition_pkey")),
        schema="api",
    )
    op.create_index(
        op.f("competition_form_family_id_idx"),
        "competition",
        ["form_family_id"],
        unique=False,
        schema="api",
    )
    op.create_index(
        op.f("competition_legacy_competition_id_idx"),
        "competition",
        ["legacy_competition_id"],
        unique=False,
        schema="api",
    )
    op.create_index(
        op.f("competition_opportunity_id_idx"),
        "competition",
        ["opportunity_id"],
        unique=False,
        schema="api",
    )
    op.create_table(
        "current_opportunity_summary",
        sa.Column("opportunity_id", sa.UUID(), nullable=False),
        sa.Column("opportunity_summary_id", sa.UUID(), nullable=False),
        sa.Column("opportunity_status_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["api.opportunity.opportunity_id"],
            name=op.f("current_opportunity_summary_opportunity_id_opportunity_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_status_id"],
            ["api.lk_opportunity_status.opportunity_status_id"],
            name=op.f(
                "current_opportunity_summary_opportunity_status_id_lk_opportunity_status_fkey"
            ),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_summary_id"],
            ["api.opportunity_summary.opportunity_summary_id"],
            name=op.f(
                "current_opportunity_summary_opportunity_summary_id_opportunity_summary_fkey"
            ),
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_id",
            "opportunity_summary_id",
            name=op.f("current_opportunity_summary_pkey"),
        ),
        schema="api",
    )
    op.create_index(
        op.f("current_opportunity_summary_opportunity_id_idx"),
        "current_opportunity_summary",
        ["opportunity_id"],
        unique=False,
        schema="api",
    )
    op.create_index(
        op.f("current_opportunity_summary_opportunity_status_id_idx"),
        "current_opportunity_summary",
        ["opportunity_status_id"],
        unique=False,
        schema="api",
    )
    op.create_index(
        op.f("current_opportunity_summary_opportunity_summary_id_idx"),
        "current_opportunity_summary",
        ["opportunity_summary_id"],
        unique=False,
        schema="api",
    )
    op.create_table(
        "link_opportunity_summary_applicant_type",
        sa.Column("opportunity_summary_id", sa.UUID(), nullable=False),
        sa.Column("applicant_type_id", sa.Integer(), nullable=False),
        sa.Column("legacy_applicant_type_id", sa.Integer(), nullable=True),
        sa.Column("updated_by", sa.Text(), nullable=True),
        sa.Column("created_by", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["applicant_type_id"],
            ["api.lk_applicant_type.applicant_type_id"],
            name=op.f(
                "link_opportunity_summary_applicant_type_applicant_type_id_lk_applicant_type_fkey"
            ),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_summary_id"],
            ["api.opportunity_summary.opportunity_summary_id"],
            name=op.f(
                "link_opportunity_summary_applicant_type_opportunity_summary_id_opportunity_summary_fkey"
            ),
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_summary_id",
            "applicant_type_id",
            name=op.f("link_opportunity_summary_applicant_type_pkey"),
        ),
        sa.UniqueConstraint(
            "opportunity_summary_id",
            "legacy_applicant_type_id",
            name=op.f("link_opportunity_summary_applicant_type_opportunity_summary_id_uniq"),
        ),
        schema="api",
    )
    op.create_index(
        op.f("link_opportunity_summary_applicant_type_applicant_type_id_idx"),
        "link_opportunity_summary_applicant_type",
        ["applicant_type_id"],
        unique=False,
        schema="api",
    )
    op.create_index(
        op.f("link_opportunity_summary_applicant_type_opportunity_summary_id_idx"),
        "link_opportunity_summary_applicant_type",
        ["opportunity_summary_id"],
        unique=False,
        schema="api",
    )
    op.create_table(
        "link_opportunity_summary_funding_category",
        sa.Column("opportunity_summary_id", sa.UUID(), nullable=False),
        sa.Column("funding_category_id", sa.Integer(), nullable=False),
        sa.Column("legacy_funding_category_id", sa.Integer(), nullable=True),
        sa.Column("updated_by", sa.Text(), nullable=True),
        sa.Column("created_by", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["funding_category_id"],
            ["api.lk_funding_category.funding_category_id"],
            name=op.f(
                "link_opportunity_summary_funding_category_funding_category_id_lk_funding_category_fkey"
            ),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_summary_id"],
            ["api.opportunity_summary.opportunity_summary_id"],
            name=op.f(
                "link_opportunity_summary_funding_category_opportunity_summary_id_opportunity_summary_fkey"
            ),
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_summary_id",
            "funding_category_id",
            name=op.f("link_opportunity_summary_funding_category_pkey"),
        ),
        sa.UniqueConstraint(
            "opportunity_summary_id",
            "legacy_funding_category_id",
            name=op.f("link_opportunity_summary_funding_category_opportunity_summary_id_uniq"),
        ),
        schema="api",
    )
    op.create_index(
        op.f("link_opportunity_summary_funding_category_funding_category_id_idx"),
        "link_opportunity_summary_funding_category",
        ["funding_category_id"],
        unique=False,
        schema="api",
    )
    op.create_index(
        op.f("link_opportunity_summary_funding_category_opportunity_summary_id_idx"),
        "link_opportunity_summary_funding_category",
        ["opportunity_summary_id"],
        unique=False,
        schema="api",
    )
    op.create_table(
        "link_opportunity_summary_funding_instrument",
        sa.Column("opportunity_summary_id", sa.UUID(), nullable=False),
        sa.Column("funding_instrument_id", sa.Integer(), nullable=False),
        sa.Column("legacy_funding_instrument_id", sa.Integer(), nullable=True),
        sa.Column("updated_by", sa.Text(), nullable=True),
        sa.Column("created_by", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["funding_instrument_id"],
            ["api.lk_funding_instrument.funding_instrument_id"],
            name=op.f(
                "link_opportunity_summary_funding_instrument_funding_instrument_id_lk_funding_instrument_fkey"
            ),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_summary_id"],
            ["api.opportunity_summary.opportunity_summary_id"],
            name=op.f(
                "link_opportunity_summary_funding_instrument_opportunity_summary_id_opportunity_summary_fkey"
            ),
        ),
        sa.PrimaryKeyConstraint(
            "opportunity_summary_id",
            "funding_instrument_id",
            name=op.f("link_opportunity_summary_funding_instrument_pkey"),
        ),
        sa.UniqueConstraint(
            "opportunity_summary_id",
            "legacy_funding_instrument_id",
            name=op.f("link_opportunity_summary_funding_instrument_opportunity_summary_id_uniq"),
        ),
        schema="api",
    )
    op.create_index(
        op.f("link_opportunity_summary_funding_instrument_funding_instrument_id_idx"),
        "link_opportunity_summary_funding_instrument",
        ["funding_instrument_id"],
        unique=False,
        schema="api",
    )
    op.create_index(
        op.f("link_opportunity_summary_funding_instrument_opportunity_summary_id_idx"),
        "link_opportunity_summary_funding_instrument",
        ["opportunity_summary_id"],
        unique=False,
        schema="api",
    )
    op.create_table(
        "application",
        sa.Column("application_id", sa.UUID(), nullable=False),
        sa.Column("competition_id", sa.UUID(), nullable=False),
        sa.Column("application_status_id", sa.Integer(), nullable=True),
        sa.Column("application_name", sa.Text(), nullable=True),
        sa.Column("organization_id", sa.UUID(), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["application_status_id"],
            ["api.lk_application_status.application_status_id"],
            name=op.f("application_application_status_id_lk_application_status_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["api.competition.competition_id"],
            name=op.f("application_competition_id_competition_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["api.organization.organization_id"],
            name=op.f("application_organization_id_organization_fkey"),
        ),
        sa.PrimaryKeyConstraint("application_id", name=op.f("application_pkey")),
        schema="api",
    )
    op.create_index(
        op.f("application_competition_id_idx"),
        "application",
        ["competition_id"],
        unique=False,
        schema="api",
    )
    op.create_table(
        "competition_assistance_listing",
        sa.Column("competition_id", sa.UUID(), nullable=False),
        sa.Column("opportunity_assistance_listing_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["api.competition.competition_id"],
            name=op.f("competition_assistance_listing_competition_id_competition_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_assistance_listing_id"],
            ["api.opportunity_assistance_listing.opportunity_assistance_listing_id"],
            name=op.f(
                "competition_assistance_listing_opportunity_assistance_listing_id_opportunity_assistance_listing_fkey"
            ),
        ),
        sa.PrimaryKeyConstraint(
            "competition_id",
            "opportunity_assistance_listing_id",
            name=op.f("competition_assistance_listing_pkey"),
        ),
        schema="api",
    )
    op.create_table(
        "competition_form",
        sa.Column("competition_form_id", sa.UUID(), nullable=False),
        sa.Column("competition_id", sa.UUID(), nullable=False),
        sa.Column("form_id", sa.UUID(), nullable=False),
        sa.Column("is_required", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["api.competition.competition_id"],
            name=op.f("competition_form_competition_id_competition_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["form_id"], ["api.form.form_id"], name=op.f("competition_form_form_id_form_fkey")
        ),
        sa.PrimaryKeyConstraint("competition_form_id", name=op.f("competition_form_pkey")),
        sa.UniqueConstraint(
            "competition_id", "form_id", name=op.f("competition_form_competition_id_uniq")
        ),
        schema="api",
    )
    op.create_index(
        op.f("competition_form_competition_id_idx"),
        "competition_form",
        ["competition_id"],
        unique=False,
        schema="api",
    )
    op.create_table(
        "competition_instruction",
        sa.Column("competition_instruction_id", sa.UUID(), nullable=False),
        sa.Column("competition_id", sa.UUID(), nullable=False),
        sa.Column("file_location", sa.Text(), nullable=False),
        sa.Column("file_name", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["api.competition.competition_id"],
            name=op.f("competition_instruction_competition_id_competition_fkey"),
        ),
        sa.PrimaryKeyConstraint(
            "competition_instruction_id",
            "competition_id",
            name=op.f("competition_instruction_pkey"),
        ),
        schema="api",
    )
    op.create_table(
        "link_competition_open_to_applicant",
        sa.Column("competition_id", sa.UUID(), nullable=False),
        sa.Column("competition_open_to_applicant_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["competition_id"],
            ["api.competition.competition_id"],
            name=op.f("link_competition_open_to_applicant_competition_id_competition_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["competition_open_to_applicant_id"],
            ["api.lk_competition_open_to_applicant.competition_open_to_applicant_id"],
            name=op.f(
                "link_competition_open_to_applicant_competition_open_to_applicant_id_lk_competition_open_to_applicant_fkey"
            ),
        ),
        sa.PrimaryKeyConstraint(
            "competition_id",
            "competition_open_to_applicant_id",
            name=op.f("link_competition_open_to_applicant_pkey"),
        ),
        schema="api",
    )
    op.create_table(
        "application_attachment",
        sa.Column("application_attachment_id", sa.UUID(), nullable=False),
        sa.Column("application_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("file_location", sa.Text(), nullable=False),
        sa.Column("file_name", sa.Text(), nullable=False),
        sa.Column("mime_type", sa.Text(), nullable=False),
        sa.Column("file_size_bytes", sa.BigInteger(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["application_id"],
            ["api.application.application_id"],
            name=op.f("application_attachment_application_id_application_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["api.user.user_id"], name=op.f("application_attachment_user_id_user_fkey")
        ),
        sa.PrimaryKeyConstraint(
            "application_attachment_id", name=op.f("application_attachment_pkey")
        ),
        schema="api",
    )
    op.create_table(
        "application_form",
        sa.Column("application_form_id", sa.UUID(), nullable=False),
        sa.Column("application_id", sa.UUID(), nullable=False),
        sa.Column("competition_form_id", sa.UUID(), nullable=False),
        sa.Column("application_response", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("is_included_in_submission", sa.Boolean(), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["application_id"],
            ["api.application.application_id"],
            name=op.f("application_form_application_id_application_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["competition_form_id"],
            ["api.competition_form.competition_form_id"],
            name=op.f("application_form_competition_form_id_competition_form_fkey"),
        ),
        sa.PrimaryKeyConstraint("application_form_id", name=op.f("application_form_pkey")),
        schema="api",
    )
    op.create_table(
        "application_user",
        sa.Column("application_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("is_application_owner", sa.Boolean(), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["application_id"],
            ["api.application.application_id"],
            name=op.f("application_user_application_id_application_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["api.user.user_id"], name=op.f("application_user_user_id_user_fkey")
        ),
        sa.PrimaryKeyConstraint("application_id", "user_id", name=op.f("application_user_pkey")),
        schema="api",
    )
    # ### end Alembic commands ###
    # Sets up the next transformation process to reprocess data from staging tables and repopulate the system.
    op.execute("UPDATE staging.topportunity SET transformed_at = NULL where is_deleted = FALSE")
    op.execute(
        "UPDATE staging.topportunity_cfda SET transformed_at = NULL where is_deleted = FALSE"
    )
    op.execute("UPDATE staging.tsynopsis SET transformed_at = NULL where is_deleted = FALSE")
    op.execute("UPDATE staging.tforecast SET transformed_at = NULL where is_deleted = FALSE")
    op.execute(
        "UPDATE staging.tapplicanttypes_forecast SET transformed_at = NULL where is_deleted = FALSE"
    )
    op.execute(
        "UPDATE staging.tapplicanttypes_synopsis SET transformed_at = NULL where is_deleted = FALSE"
    )
    op.execute(
        "UPDATE staging.tfundactcat_forecast SET transformed_at = NULL where is_deleted = FALSE"
    )
    op.execute(
        "UPDATE staging.tfundactcat_synopsis SET transformed_at = NULL where is_deleted = FALSE"
    )
    op.execute(
        "UPDATE staging.tfundinstr_forecast SET transformed_at = NULL where is_deleted = FALSE"
    )
    op.execute(
        "UPDATE staging.tfundinstr_synopsis SET transformed_at = NULL where is_deleted = FALSE"
    )
    op.execute("UPDATE staging.tcompetition SET transformed_at = NULL where is_deleted = FALSE")
    op.execute(
        "UPDATE staging.tsynopsisattachment SET transformed_at = NULL where is_deleted = FALSE"
    )
    # -- Do not need to reprocess agency data
    # op.execute("UPDATE staging.tgroups SET transformed_at = NULL")

    # -- Do not need to reproduce _hist tables
    # op.execute("UPDATE staging.tsynopsis_hist SET transformed_at = NULL where is_deleted = FALSE")
    # op.execute("UPDATE staging.tforecast_hist SET transformed_at = NULL where is_deleted = FALSE")
    # op.execute(
    #     "UPDATE staging.tapplicanttypes_forecast_hist SET transformed_at = NULL where is_deleted = FALSE"
    # )
    # op.execute(
    #     "UPDATE staging.tapplicanttypes_synopsis_hist SET transformed_at = NULL where is_deleted = FALSE"
    # )
    # op.execute(
    #     "UPDATE staging.tfundactcat_forecast_hist SET transformed_at = NULL where is_deleted = FALSE"
    # )
    # op.execute(
    #     "UPDATE staging.tfundactcat_synopsis_hist SET transformed_at = NULL where is_deleted = FALSE"
    # )
    # op.execute(
    #     "UPDATE staging.tfundinstr_forecast_hist SET transformed_at = NULL where is_deleted = FALSE"
    # )
    # op.execute(
    #     "UPDATE staging.tfundinstr_synopsis_hist SET transformed_at = NULL where is_deleted = FALSE"
    # )

    # Add search index triggers
    setup_opportunity_search_index_queue_trigger_function(
        op,
        [
            "opportunity",
            "opportunity_assistance_listing",
            "current_opportunity_summary",
            "opportunity_summary",
            "link_opportunity_summary_funding_instrument",
            "link_opportunity_summary_funding_category",
            "link_opportunity_summary_applicant_type",
            "opportunity_attachment",
        ],
    )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("application_user", schema="api")
    op.drop_table("application_form", schema="api")
    op.drop_table("application_attachment", schema="api")
    op.drop_table("link_competition_open_to_applicant", schema="api")
    op.drop_table("competition_instruction", schema="api")
    op.drop_index(
        op.f("competition_form_competition_id_idx"), table_name="competition_form", schema="api"
    )
    op.drop_table("competition_form", schema="api")
    op.drop_table("competition_assistance_listing", schema="api")
    op.drop_index(op.f("application_competition_id_idx"), table_name="application", schema="api")
    op.drop_table("application", schema="api")
    op.drop_index(
        op.f("link_opportunity_summary_funding_instrument_opportunity_summary_id_idx"),
        table_name="link_opportunity_summary_funding_instrument",
        schema="api",
    )
    op.drop_index(
        op.f("link_opportunity_summary_funding_instrument_funding_instrument_id_idx"),
        table_name="link_opportunity_summary_funding_instrument",
        schema="api",
    )
    op.drop_table("link_opportunity_summary_funding_instrument", schema="api")
    op.drop_index(
        op.f("link_opportunity_summary_funding_category_opportunity_summary_id_idx"),
        table_name="link_opportunity_summary_funding_category",
        schema="api",
    )
    op.drop_index(
        op.f("link_opportunity_summary_funding_category_funding_category_id_idx"),
        table_name="link_opportunity_summary_funding_category",
        schema="api",
    )
    op.drop_table("link_opportunity_summary_funding_category", schema="api")
    op.drop_index(
        op.f("link_opportunity_summary_applicant_type_opportunity_summary_id_idx"),
        table_name="link_opportunity_summary_applicant_type",
        schema="api",
    )
    op.drop_index(
        op.f("link_opportunity_summary_applicant_type_applicant_type_id_idx"),
        table_name="link_opportunity_summary_applicant_type",
        schema="api",
    )
    op.drop_table("link_opportunity_summary_applicant_type", schema="api")
    op.drop_index(
        op.f("current_opportunity_summary_opportunity_summary_id_idx"),
        table_name="current_opportunity_summary",
        schema="api",
    )
    op.drop_index(
        op.f("current_opportunity_summary_opportunity_status_id_idx"),
        table_name="current_opportunity_summary",
        schema="api",
    )
    op.drop_index(
        op.f("current_opportunity_summary_opportunity_id_idx"),
        table_name="current_opportunity_summary",
        schema="api",
    )
    op.drop_table("current_opportunity_summary", schema="api")
    op.drop_index(op.f("competition_opportunity_id_idx"), table_name="competition", schema="api")
    op.drop_index(
        op.f("competition_legacy_competition_id_idx"), table_name="competition", schema="api"
    )
    op.drop_index(op.f("competition_form_family_id_idx"), table_name="competition", schema="api")
    op.drop_table("competition", schema="api")
    op.drop_index(
        op.f("user_saved_search_user_id_idx"), table_name="user_saved_search", schema="api"
    )
    op.drop_table("user_saved_search", schema="api")
    op.drop_table("user_saved_opportunity", schema="api")
    op.drop_index(
        op.f("user_opportunity_notification_log_user_id_idx"),
        table_name="user_opportunity_notification_log",
        schema="api",
    )
    op.drop_index(
        op.f("user_opportunity_notification_log_opportunity_id_idx"),
        table_name="user_opportunity_notification_log",
        schema="api",
    )
    op.drop_table("user_opportunity_notification_log", schema="api")
    op.drop_table("opportunity_version", schema="api")
    op.drop_index(
        op.f("opportunity_summary_opportunity_id_idx"),
        table_name="opportunity_summary",
        schema="api",
    )
    op.drop_index(
        op.f("opportunity_summary_legacy_opportunity_id_idx"),
        table_name="opportunity_summary",
        schema="api",
    )
    op.drop_table("opportunity_summary", schema="api")
    op.drop_index(
        op.f("opportunity_change_audit_opportunity_id_idx"),
        table_name="opportunity_change_audit",
        schema="api",
    )
    op.drop_table("opportunity_change_audit", schema="api")
    op.drop_index(
        op.f("opportunity_attachment_opportunity_id_idx"),
        table_name="opportunity_attachment",
        schema="api",
    )
    op.drop_index(
        op.f("opportunity_attachment_legacy_attachment_id_idx"),
        table_name="opportunity_attachment",
        schema="api",
    )
    op.drop_table("opportunity_attachment", schema="api")
    op.drop_index(
        op.f("opportunity_assistance_listing_opportunity_id_idx"),
        table_name="opportunity_assistance_listing",
        schema="api",
    )
    op.drop_index(
        op.f("opportunity_assistance_listing_legacy_opportunity_assistance_listing_id_idx"),
        table_name="opportunity_assistance_listing",
        schema="api",
    )
    op.drop_table("opportunity_assistance_listing", schema="api")
    op.drop_index(op.f("opportunity_opportunity_title_idx"), table_name="opportunity", schema="api")
    op.drop_index(
        op.f("opportunity_opportunity_category_id_idx"), table_name="opportunity", schema="api"
    )
    op.drop_index(
        op.f("opportunity_legacy_opportunity_id_idx"), table_name="opportunity", schema="api"
    )
    op.drop_index(op.f("opportunity_is_draft_idx"), table_name="opportunity", schema="api")
    op.drop_index(op.f("opportunity_agency_code_idx"), table_name="opportunity", schema="api")
    op.drop_table("opportunity", schema="api")
    op.drop_table("form", schema="api")
    # ### end Alembic commands ###
