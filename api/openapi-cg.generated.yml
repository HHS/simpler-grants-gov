info:
  description: An implementation of the CommonGrants API specification
  title: CommonGrants API
  version: 0.1.0
tags:
- name: CommonGrants Protocol
paths:
  /common-grants/opportunities:
    get:
      parameters:
      - in: query
        name: page
        description: The page number to retrieve
        schema:
          type: integer
          nullable: true
        required: false
      - in: query
        name: pageSize
        description: The number of items per page
        schema:
          type: integer
          nullable: true
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpportunitiesListResponse'
          description: Successful response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation error
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication error
      tags:
      - CommonGrants Protocol
      summary: List opportunities
      description: Get a paginated list of opportunities, sorted by `lastModifiedAt`
        with most recent first.
      security:
      - ApiUserKeyAuth: []
      - ApiKeyAuth: []
  /common-grants/opportunities/search:
    post:
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpportunitiesSearchResponse'
          description: Successful response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation error
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication error
      tags:
      - CommonGrants Protocol
      summary: Search opportunities
      description: Search for opportunities based on the provided filters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpportunitySearchRequest'
      security:
      - ApiUserKeyAuth: []
      - ApiKeyAuth: []
  /common-grants/opportunities/{oppId}:
    get:
      parameters:
      - in: path
        name: oppId
        schema:
          type: string
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpportunityResponse'
          description: Successful response
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
      tags:
      - CommonGrants Protocol
      summary: View opportunity details
      description: View details about an opportunity
      security:
      - ApiUserKeyAuth: []
      - ApiKeyAuth: []
openapi: 3.0.3
components:
  schemas:
    OppStatus:
      type: object
      properties:
        value:
          type: string
          description: The status value, from a predefined set of options
          nullable: true
        customValue:
          type: string
          description: A custom status value
          nullable: true
        description:
          type: string
          description: A human-readable description of the status
          nullable: true
    Money:
      type: object
      properties:
        amount:
          type: string
          description: The amount of money
        currency:
          type: string
          description: The ISO 4217 currency code (e.g., 'USD', 'EUR')
      required:
      - amount
      - currency
    OppFunding:
      type: object
      properties:
        details:
          type: string
          description: Details about the funding available for this opportunity that
            don't fit other fields
          nullable: true
        totalAmountAvailable:
          description: Total amount of funding available for this opportunity
          anyOf:
          - $ref: '#/components/schemas/Money'
          - type: object
            nullable: true
        minAwardAmount:
          description: Minimum amount of funding granted per award
          anyOf:
          - $ref: '#/components/schemas/Money'
          - type: object
            nullable: true
        maxAwardAmount:
          description: Maximum amount of funding granted per award
          anyOf:
          - $ref: '#/components/schemas/Money'
          - type: object
            nullable: true
        minAwardCount:
          type: integer
          description: Minimum number of awards granted
          nullable: true
        maxAwardCount:
          type: integer
          description: Maximum number of awards granted
          nullable: true
        estimatedAwardCount:
          type: integer
          description: Estimated number of awards that will be granted
          nullable: true
    SingleDateEvent:
      type: object
      properties:
        name:
          type: string
          description: Human-readable name of the event
          nullable: true
        eventType:
          type: string
          description: Type of event
          nullable: true
        description:
          type: string
          description: Description of what this event represents
          nullable: true
        date:
          type: string
          format: date
          description: 'Date of the event in ISO 8601 format: YYYY-MM-DD'
          nullable: true
        time:
          type: string
          description: 'Time of the event in ISO 8601 format: HH:MM:SS'
          nullable: true
    OppTimeline:
      type: object
      properties:
        postDate:
          description: The date (and time) at which the opportunity is posted
          anyOf:
          - $ref: '#/components/schemas/SingleDateEvent'
          - type: object
            nullable: true
        closeDate:
          description: The date (and time) at which the opportunity closes
          anyOf:
          - $ref: '#/components/schemas/SingleDateEvent'
          - type: object
            nullable: true
        otherDates:
          description: An optional map of other key dates or events in the opportunity
            timeline
          nullable: true
    CustomField:
      type: object
      properties:
        name:
          type: string
        fieldType:
          type: string
          enum:
          - string
          - number
          - integer
          - boolean
          - object
          - array
          description: The JSON schema type to use when de-serializing the value field
        schema:
          type: string
          format: url
          nullable: true
        value: {}
        description:
          type: string
          nullable: true
      required:
      - fieldType
      - name
      - value
    OpportunityBase:
      type: object
      properties:
        createdAt:
          description: The timestamp (in UTC) at which the record was created.
          nullable: true
        lastModifiedAt:
          description: The timestamp (in UTC) at which the record was last modified.
          nullable: true
        id:
          type: string
          format: uuid
          description: Globally unique id for the opportunity
          nullable: true
        title:
          type: string
          description: Title or name of the funding opportunity
          nullable: true
        status:
          description: Status of the opportunity
          anyOf:
          - $ref: '#/components/schemas/OppStatus'
          - type: object
            nullable: true
        description:
          type: string
          description: Description of the opportunity's purpose and scope
          nullable: true
        funding:
          description: Details about the funding available
          anyOf:
          - $ref: '#/components/schemas/OppFunding'
          - type: object
            nullable: true
        keyDates:
          description: Key dates for the opportunity, such as when the application
            opens and closes
          anyOf:
          - $ref: '#/components/schemas/OppTimeline'
          - type: object
            nullable: true
        source:
          description: URL for the original source of the opportunity
          nullable: true
        customFields:
          type: object
          description: Additional custom fields specific to this opportunity
          additionalProperties:
            $ref: '#/components/schemas/CustomField'
          nullable: true
    PaginatedResultsInfo:
      type: object
      properties:
        page:
          type: integer
          description: The page number to retrieve
          nullable: true
        pageSize:
          type: integer
          description: The number of items per page
          nullable: true
        totalItems:
          type: integer
          description: The total number of items
        totalPages:
          type: integer
          description: The total number of pages
      required:
      - totalItems
      - totalPages
    OpportunitiesListResponse:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code
        message:
          type: string
          description: The message
        items:
          type: array
          description: The list of opportunities
          items:
            $ref: '#/components/schemas/OpportunityBase'
        paginationInfo:
          description: The pagination details
          allOf:
          - $ref: '#/components/schemas/PaginatedResultsInfo'
      required:
      - items
      - message
      - paginationInfo
      - status
    ValidationError:
      type: object
      properties:
        loc:
          type: array
          description: Location of the error
          items: {}
        msg:
          type: string
          description: Error message
        type:
          type: string
          description: Error type
      required:
      - loc
      - msg
      - type
    HTTPValidationError:
      type: object
      properties:
        detail:
          type: array
          description: Validation error details
          items:
            $ref: '#/components/schemas/ValidationError'
      required:
      - detail
    Error:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code
        message:
          type: string
          description: Human-readable error message
        errors:
          type: array
          description: List of errors
          items: {}
      required:
      - errors
      - message
      - status
    StringArrayFilter:
      type: object
      properties:
        operator:
          type: string
          description: The operator to apply to the filter value
          nullable: true
        value:
          type: array
          description: The array of string values
          items:
            type: string
          nullable: true
    DateRange:
      type: object
      properties:
        min:
          description: The minimum date in the range
          nullable: true
        max:
          description: The maximum date in the range
          nullable: true
    DateRangeFilter:
      type: object
      properties:
        operator:
          type: string
          description: The operator to apply to the filter value
          nullable: true
        value:
          description: The date range value
          anyOf:
          - $ref: '#/components/schemas/DateRange'
          - type: object
            nullable: true
    MoneyRange:
      type: object
      properties:
        min:
          description: The minimum amount in the range
          anyOf:
          - $ref: '#/components/schemas/Money'
          - type: object
            nullable: true
        max:
          description: The maximum amount in the range
          anyOf:
          - $ref: '#/components/schemas/Money'
          - type: object
            nullable: true
    MoneyRangeFilter:
      type: object
      properties:
        operator:
          type: string
          description: The operator to apply to the filter value
          nullable: true
        value:
          description: The money range value
          anyOf:
          - $ref: '#/components/schemas/MoneyRange'
          - type: object
            nullable: true
    OppFilters:
      type: object
      properties:
        status:
          description: '`status.value` matches one of the following values'
          anyOf:
          - $ref: '#/components/schemas/StringArrayFilter'
          - type: object
            nullable: true
        closeDateRange:
          description: '`keyDates.closeDate` is between the given range'
          anyOf:
          - $ref: '#/components/schemas/DateRangeFilter'
          - type: object
            nullable: true
        totalFundingAvailableRange:
          description: '`funding.totalAmountAvailable` is between the given range'
          anyOf:
          - $ref: '#/components/schemas/MoneyRangeFilter'
          - type: object
            nullable: true
        minAwardAmountRange:
          description: '`funding.minAwardAmount` is between the given range'
          anyOf:
          - $ref: '#/components/schemas/MoneyRangeFilter'
          - type: object
            nullable: true
        maxAwardAmountRange:
          description: '`funding.maxAwardAmount` is between the given range'
          anyOf:
          - $ref: '#/components/schemas/MoneyRangeFilter'
          - type: object
            nullable: true
        customFilters:
          description: Additional custom filters to apply to the search
          nullable: true
    OppSorting:
      type: object
      properties:
        sortBy:
          type: string
          enum:
          - lastModifiedAt
          - createdAt
          - title
          - status.value
          - keyDates.closeDate
          - funding.maxAwardAmount
          - funding.minAwardAmount
          - funding.totalAmountAvailable
          - funding.estimatedAwardCount
          - custom
          description: The field to sort by
        sortOrder:
          type: string
          description: The sort order (asc or desc)
          nullable: true
        customSortBy:
          type: string
          description: The custom field to sort by when sortBy is 'custom'
          nullable: true
      required:
      - sortBy
    PaginatedBodyParams:
      type: object
      properties:
        page:
          type: integer
          description: The page number to retrieve
          nullable: true
        pageSize:
          type: integer
          description: The number of items per page
          nullable: true
    OpportunitySearchRequest:
      type: object
      properties:
        search:
          type: string
          description: Search query string
          nullable: true
        filters:
          description: Filters to apply to the opportunity search
          anyOf:
          - $ref: '#/components/schemas/OppFilters'
          - type: object
            nullable: true
        sorting:
          description: Sorting parameters for opportunities
          anyOf:
          - $ref: '#/components/schemas/OppSorting'
          - type: object
            nullable: true
        pagination:
          anyOf:
          - type: object
            nullable: true
          - $ref: '#/components/schemas/PaginatedBodyParams'
    SortedResultsInfo:
      type: object
      properties:
        sortBy:
          type: string
          description: The field to sort by
        customSortBy:
          type: string
          description: Implementation-defined sort key
          nullable: true
        sortOrder:
          type: string
          description: The order in which the results are sorted
        errors:
          type: array
          default: []
          description: Non-fatal errors that occurred during sorting
          items:
            type: string
      required:
      - sortBy
      - sortOrder
    FilterInfo:
      type: object
      properties:
        filters:
          description: The filters applied to the response items
        errors:
          type: array
          default: []
          description: Non-fatal errors that occurred during filtering
          items:
            type: string
      required:
      - filters
    OpportunitiesSearchResponse:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code
        message:
          type: string
          description: The message
        items:
          type: array
          description: The list of opportunities
          items:
            $ref: '#/components/schemas/OpportunityBase'
        paginationInfo:
          description: The pagination details
          allOf:
          - $ref: '#/components/schemas/PaginatedResultsInfo'
        sortInfo:
          description: The sorting details
          allOf:
          - $ref: '#/components/schemas/SortedResultsInfo'
        filterInfo:
          description: The filter details
          allOf:
          - $ref: '#/components/schemas/FilterInfo'
      required:
      - filterInfo
      - items
      - message
      - paginationInfo
      - sortInfo
      - status
    OpportunityResponse:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code
        message:
          type: string
          description: The message
        data:
          description: The opportunity
          allOf:
          - $ref: '#/components/schemas/OpportunityBase'
      required:
      - data
      - message
      - status
